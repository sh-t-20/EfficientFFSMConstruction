digraph g {
	edge [lblstyle="above, sloped"];
	s0 [shape="circle" label="0@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 [shape="circle" label="1@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 [shape="circle" label="2@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 [shape="circle" label="3@[((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 [shape="circle" label="4@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s5 [shape="circle" label="5@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 [shape="circle" label="6@[((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 [shape="circle" label="7@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 [shape="circle" label="8@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 [shape="circle" label="9@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 [shape="circle" label="10@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 [shape="circle" label="11@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 [shape="circle" label="12@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 [shape="circle" label="13@[((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 [shape="circle" label="14@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 [shape="circle" label="15@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 [shape="circle" label="16@[((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 [shape="circle" label="17@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 [shape="circle" label="18@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 [shape="circle" label="19@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 [shape="circle" label="20@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 [shape="circle" label="21@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 [shape="circle" label="22@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 [shape="circle" label="23@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 [shape="circle" label="24@[((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 [shape="circle" label="25@[((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 [shape="circle" label="26@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 [shape="circle" label="27@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 [shape="circle" label="28@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s29 [shape="circle" label="29@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 [shape="circle" label="30@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 [shape="circle" label="31@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 [shape="circle" label="32@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 [shape="circle" label="33@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 [shape="circle" label="34@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 [shape="circle" label="35@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 [shape="circle" label="36@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 [shape="circle" label="37@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 [shape="circle" label="38@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 [shape="circle" label="39@[((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 [shape="circle" label="40@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 [shape="circle" label="41@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 [shape="circle" label="42@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 [shape="circle" label="43@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 [shape="circle" label="44@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 [shape="circle" label="45@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 [shape="circle" label="46@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s47 [shape="circle" label="47@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s48 [shape="circle" label="48@[((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 [shape="circle" label="49@[((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 [shape="circle" label="50@[((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 [shape="circle" label="51@[((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 [shape="circle" label="52@[((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s53 [shape="circle" label="53@[((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 [shape="circle" label="54@[((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 [shape="circle" label="55@[((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 [shape="circle" label="56@[((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s0 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s0 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s2 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s1 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s0 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s0 -> s0 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s0 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s3 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s0 -> s4 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s0 -> s5 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s0 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s0 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s0 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s48 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s0 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s5 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s0 [label="pw_but_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s0 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s4 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s5 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s0 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s0 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s7 [label="receiveMsg / pw_activated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s6 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s0 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s1 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s12 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s1 -> s13 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s1 -> s1 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s1 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s1 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s11 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s1 -> s1 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s1 -> s1 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s14 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s1 -> s1 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s1 -> s1 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s11 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s12 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s16 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s1 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s15 [label="m_pw_msg / m_pw_activated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s1 -> s1 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s1 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s15 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s1 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s18 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s4 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s1 -> s17 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s0 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s32 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s7 [label="pw_but_dn / fp_off,1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s1 -> s38 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s1 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s15 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s9 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s2 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s19 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s1 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s1 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s20 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s1 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s1 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s2 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s2 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s2 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s2 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s2 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s2 -> s8 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s2 -> s2 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s9 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s2 -> s10 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s2 -> s2 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s2 -> s2 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s2 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s10 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s2 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s49 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s5 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s0 [label="pw_but_dn / fp_off,1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s2 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s2 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s2 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s2 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s2 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s11 [label="receiveMsg / pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s1 [label="receiveMsg / pw_activated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s2 -> s1 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s3 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s3 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s8 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s0 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s3 [label="fp_off / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s3 [label="fp_on / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s3 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s3 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s45 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s3 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s18 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s3 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s54 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s3 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s3 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s3 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s4 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s3 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s16 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s4 -> s4 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s4 -> s1 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s4 -> s9 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s6 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s4 -> s4 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s0 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s4 -> s4 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s4 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s4 -> s4 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s4 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s4 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s4 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s4 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s4 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s4 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s4 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s11 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s4 -> s4 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s4 -> s21 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s0 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s5 -> s5 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s5 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s2 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s5 -> s10 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s49 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s5 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s5 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s5 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s0 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s5 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s5 -> s5 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s5 -> s5 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s0 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s5 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s5 [label="pw_but_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s5 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s5 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s5 -> s5 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s5 -> s5 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s5 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s7 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s50 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s17 [label="receiveMsg / pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s5 -> s0 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s22 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s6 -> s16 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s23 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s6 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s11 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s20 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s6 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s6 -> s6 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s6 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s4 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s6 -> s7 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s6 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s23 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s6 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s17 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s6 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s50 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s6 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s6 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s21 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s17 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s6 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s6 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s6 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s6 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s15 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s7 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s22 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s7 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s25 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s26 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s24 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s12 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s11 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s1 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s7 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s7 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s27 [label="fp_off / pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s7 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s11 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s28 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s17 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s7 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s7 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s6 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s22 [label="m_pw_msg / m_pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s12 [label="m_pw_msg / m_pw_activated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s13 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s7 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s7 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s18 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s7 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s27 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s7 [label="pw_but_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s29 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s45 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s7 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s30 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s31 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s37 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s7 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s7 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s7 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s7 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s8 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s8 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s8 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s8 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s2 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s12 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s8 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s8 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s8 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s8 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s9 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s8 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s24 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s8 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s18 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s3 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s33 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s8 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s35 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s8 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s8 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s28 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s8 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s8 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s8 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s1 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s34 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s9 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s9 -> s9 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s9 -> s9 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s9 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s2 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s9 -> s12 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s9 -> s9 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s9 -> s9 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s9 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s9 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s27 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s9 -> s4 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s9 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s15 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s9 -> s9 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s9 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s9 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s32 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s9 -> s9 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s9 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s9 -> s14 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s1 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s10 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s10 -> s10 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s10 -> s10 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s10 -> s10 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s10 -> s10 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s10 -> s10 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s2 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s10 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s10 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s10 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s10 -> s2 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s10 -> s10 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s10 -> s48 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s10 -> s5 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s10 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s10 -> s10 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s10 -> s10 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s10 -> s1 [label="receiveMsg / pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s25 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s22 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s23 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s13 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s11 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s11 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s14 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s11 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s7 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s11 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s11 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s11 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s1 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s25 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s1 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s11 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s23 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s22 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s11 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s25 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s11 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s52 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s17 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s7 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s11 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s6 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s11 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s11 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s11 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s11 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s11 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s11 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s20 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s12 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 -> s12 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 -> s2 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s12 [label="finger_detected / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 -> s15 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s12 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s12 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 -> s9 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s12 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 -> s8 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s1 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s12 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s32 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s12 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s12 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s0 [label="mpw_stop / pw_inactivated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s12 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s19 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 -> s12 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 -> s13 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 -> s18 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s18 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s27 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s27 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s37 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s27 [label="pw_but_dn / 1,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s7 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 -> s35 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s24 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 -> s19 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s12 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s19 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s28 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s12 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s12 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s32 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s12 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s15 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 -> s24 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s43 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s12 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 -> s12 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 -> s13 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s13 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s2 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s8 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s13 -> s13 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s16 [label="finger_detected / fp_on [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s13 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s13 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s13 -> s13 [label="fp_off / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s23 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s13 -> s13 [label="fp_on / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s13 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s13 -> s23 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s13 -> s23 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s13 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s13 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s22 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s13 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s13 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s0 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s13 -> s5 [label="mpw_stop / pw_inactivated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s13 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s12 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s13 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s27 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s27 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s27 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s34 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s13 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s15 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s38 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s13 -> s12 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s45 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s1 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s13 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s24 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s13 [label="pw_pos_up / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s13 [label="receiveMsg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s13 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s14 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s1 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s14 -> s14 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s14 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s14 -> s14 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s8 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s22 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s14 -> s14 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s21 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s11 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s14 -> s14 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s14 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s14 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s14 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s14 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s14 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s20 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s15 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s15 -> s0 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s15 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s15 -> s15 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s15 -> s12 [label="finger_detected / fp_on [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s15 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s15 -> s19 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s15 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s15 -> s15 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s26 [label="fp_on / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s15 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s19 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s28 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s15 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s15 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s2 [label="mpw_stop / pw_inactivated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s28 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s15 -> s15 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s15 -> s1 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s15 -> s27 [label="pw_but_dn / fp_off,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s18 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s37 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s15 -> s27 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s29 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s33 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s15 -> s15 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s15 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s35 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s38 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s19 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s29 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s12 [label="pw_pos_dn / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s15 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s15 -> s34 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s15 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s15 -> s15 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s15 -> s15 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s16 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s16 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s16 -> s10 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s3 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s16 -> s0 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s13 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s16 [label="finger_detected / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s8 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s16 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s16 -> s16 [label="fp_off / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s22 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s16 -> s22 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s16 -> s16 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s16 -> s16 [label="fp_on / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s22 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s16 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s16 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s23 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s16 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s2 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s16 -> s10 [label="mpw_stop / pw_inactivated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s4 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s16 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s22 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s16 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s27 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s27 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s18 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s18 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s35 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s16 -> s16 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s16 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s16 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s16 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s16 [label="pw_pos_up / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s16 [label="receiveMsg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s23 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s51 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s17 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s11 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s1 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s25 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s17 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s17 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s17 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s7 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s36 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s13 [label="m_pw_msg / m_pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s17 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s17 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s6 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s17 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s17 [label="pw_but_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s17 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s17 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s17 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s17 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s17 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s17 [label="receiveMsg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s6 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s18 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s18 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s19 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s1 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s12 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s8 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s27 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s18 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s18 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s27 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s18 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s18 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s18 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s27 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s18 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s27 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s18 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s18 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s18 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s7 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s18 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s18 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s18 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s3 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s29 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s33 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s35 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s42 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s18 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s18 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s28 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s42 [label="pw_pos_dn / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s7 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s44 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s37 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s18 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s18 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s27 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s19 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s19 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s19 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s19 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s19 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s19 -> s40 [label="fp_on / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s19 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s15 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s19 -> s19 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s15 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s24 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s19 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s19 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s19 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s19 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s12 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s19 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s27 [label="pw_but_dn / fp_off,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s19 -> s18 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s27 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s19 -> s18 [label="pw_but_dn / fp_off,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s37 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s16 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s19 -> s29 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s38 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s19 -> s33 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s19 -> s8 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s19 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s19 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s19 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s28 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s19 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s32 [label="pw_pos_dn / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s8 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s19 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s19 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s15 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s20 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s20 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s20 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s34 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s20 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s6 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s20 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s14 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s11 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s20 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s20 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s20 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s20 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s14 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s21 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s21 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s16 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s21 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s21 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s21 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s21 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s21 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s21 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s21 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s21 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s6 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s22 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s0 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s22 -> s2 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s5 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s23 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s22 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s16 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s22 -> s22 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s22 -> s22 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s16 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s22 -> s22 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s22 -> s22 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s13 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s22 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s22 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s16 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s22 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s2 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s9 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s22 -> s0 [label="mpw_stop / pw_inactivated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s16 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s22 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s36 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s7 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s37 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s18 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s22 -> s18 [label="pw_but_dn / 1,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s22 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s22 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s22 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s22 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s22 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s22 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s34 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s23 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s10 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s0 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s2 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s22 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s34 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s23 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s13 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s23 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s23 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s13 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s23 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s23 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s23 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s16 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s23 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s13 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s23 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s0 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s2 [label="mpw_stop / pw_inactivated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s4 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s51 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s23 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s53 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s18 [label="pw_but_dn / fp_off,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s7 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s18 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s27 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s23 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s16 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s36 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s23 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s23 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s23 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s23 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s24 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 -> s24 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 -> s24 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 -> s24 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s24 -> s24 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 -> s32 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s24 -> s24 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 -> s19 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s24 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s24 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s24 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s8 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 -> s24 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 -> s34 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 -> s32 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s42 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s7 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 -> s7 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s24 -> s15 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s38 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s33 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 -> s43 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s44 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s24 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 -> s24 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 -> s24 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 -> s24 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s16 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s23 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s25 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s25 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s25 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s25 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s25 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s11 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s25 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s11 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s25 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s7 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s17 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s25 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s25 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s25 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s25 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s26 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s26 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s40 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s26 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s39 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s26 -> s19 [label="fp_off / pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s26 -> s7 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s27 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s26 -> s13 [label="fp_off / pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s26 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s30 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s26 -> s40 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s26 -> s26 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s26 -> s26 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s26 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s30 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s26 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s56 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s31 [label="pw_but_dn / fp_off,1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s26 -> s7 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s26 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s26 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s40 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s41 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s26 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s26 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s26 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s26 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s27 -> s27 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s27 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s13 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s12 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s27 -> s9 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s27 -> s19 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s27 -> s15 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s27 -> s27 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s18 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s27 -> s27 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s27 -> s18 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s27 -> s27 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s27 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s27 -> s18 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s27 -> s27 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s27 -> s18 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s27 -> s27 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s27 -> s27 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s27 -> s27 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s27 -> s27 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s7 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s27 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s27 [label="pw_but_dn / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s27 [label="pw_but_dn / 1,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s27 -> s35 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s27 -> s38 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s27 -> s13 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s27 -> s33 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s27 -> s44 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s18 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s27 -> s37 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s27 -> s37 [label="pw_pos_dn / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s27 -> s42 [label="pw_pos_dn / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s27 -> s28 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s27 -> s32 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s27 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s27 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s27 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s28 -> s28 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s28 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s32 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s28 -> s43 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s28 -> s28 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s32 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s28 -> s7 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s28 -> s28 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s28 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s28 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s28 -> s15 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s28 -> s28 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s28 -> s28 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s28 -> s28 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s28 -> s28 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s15 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s28 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s27 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s28 -> s42 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s28 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s28 -> s44 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s28 -> s38 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s28 -> s33 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s28 -> s35 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s28 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s28 -> s28 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s28 -> s28 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s28 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s28 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s42 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s29 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s29 -> s29 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s29 -> s29 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s33 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s29 -> s29 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s38 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s29 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s29 -> s46 [label="fp_on / pw_mv_stop,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s47 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s26 [label="fp_on / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s29 -> s31 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s41 [label="fp_on / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s35 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s29 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s38 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s29 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s29 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s29 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s54 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s29 -> s29 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s29 -> s55 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s29 -> s42 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s45 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s29 -> s37 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s18 [label="pw_but_dn / fp_off,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s18 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s42 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s29 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s29 -> s29 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s29 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s29 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s29 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s29 -> s23 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s29 -> s22 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s29 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s29 -> s15 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s30 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s30 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s40 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s31 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s18 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s27 [label="fp_off / pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s30 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s30 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s31 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s26 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s30 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s30 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s30 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s26 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s30 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s30 [label="pw_but_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s30 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s30 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s30 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s30 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s30 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s30 [label="receiveMsg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s7 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s31 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s31 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s31 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s26 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s41 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s27 [label="fp_off / pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s31 -> s19 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s18 [label="fp_off / pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s37 [label="fp_off / pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s1 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s31 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s31 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s30 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s39 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s31 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s31 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s31 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s31 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s40 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s31 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s30 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s31 [label="pw_but_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s31 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s31 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s31 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s31 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s31 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s31 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s7 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s32 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s32 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s1 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s32 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s32 -> s24 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s44 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s32 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s32 -> s32 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s24 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s32 -> s32 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s32 -> s32 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s28 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s32 -> s12 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s37 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s32 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s32 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s32 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s32 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s37 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s32 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s28 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s32 -> s42 [label="pw_but_dn / fp_off,1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s32 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s29 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s38 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s55 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s35 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s32 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s32 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s32 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s32 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s32 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s42 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s33 -> s33 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s33 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s15 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s33 -> s33 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s29 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s35 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s33 -> s33 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s33 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s33 -> s30 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s47 [label="fp_on / pw_mv_stop,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s33 -> s46 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s33 -> s31 [label="fp_on / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s7 [label="fp_on / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s33 -> s40 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s33 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s38 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s33 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s35 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s33 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s33 -> s33 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s33 -> s35 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s33 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s38 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s42 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s33 -> s18 [label="pw_but_dn / 1,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s18 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s33 -> s27 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s33 -> s45 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s42 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s33 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s33 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s33 -> s35 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s33 -> s38 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s33 -> s33 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s22 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s23 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s33 -> s33 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s33 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s34 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s34 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s34 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s34 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s34 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s34 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s1 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s34 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s24 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s34 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s27 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s34 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s38 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s8 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s22 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s34 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s34 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s34 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s34 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s35 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s35 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s38 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s35 [label="finger_detected / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s19 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s29 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s35 -> s35 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s35 -> s35 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s46 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s35 -> s40 [label="fp_on / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s31 [label="fp_on / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s30 [label="fp_on / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s46 [label="fp_on / pw_mv_stop,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s35 -> s26 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s35 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s33 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s35 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s29 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s35 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s35 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s35 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s33 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s35 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s44 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s13 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s35 -> s27 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s18 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s3 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s27 [label="pw_but_dn / 1,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s35 -> s35 [label="pw_but_up / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s35 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s35 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s35 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s35 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s16 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s12 [label="pw_pos_up / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s35 -> s35 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s33 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s36 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s49 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s36 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s22 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s36 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s36 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s36 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s5 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s36 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s22 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s36 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s37 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s27 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s36 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s36 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s36 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s36 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s36 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s36 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s23 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s37 -> s37 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s37 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s15 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s19 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s37 -> s12 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s37 -> s45 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s37 -> s37 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s37 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s37 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s37 -> s32 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s37 -> s42 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s37 -> s37 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s37 -> s37 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s37 -> s42 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s37 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s32 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s37 [label="pw_but_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s37 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s37 -> s33 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s37 -> s29 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s38 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s37 -> s37 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s37 -> s37 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s37 -> s32 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s37 -> s37 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s37 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s37 [label="receiveMsg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s27 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s38 -> s38 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s38 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s38 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s29 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s38 -> s35 [label="finger_detected / fp_on [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s38 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s33 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s38 -> s38 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s38 -> s31 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s38 -> s39 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s26 [label="fp_on / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s38 -> s30 [label="fp_on / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s47 [label="fp_on / pw_mv_stop,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s38 -> s47 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s38 -> s38 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s29 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s33 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s38 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s38 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s38 -> s38 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s38 -> s38 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s33 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s38 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s27 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s13 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s38 -> s44 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s37 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s38 -> s27 [label="pw_but_dn / fp_off,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s38 -> s38 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s38 -> s38 [label="pw_but_up / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s38 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s38 -> s38 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s38 -> s38 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s13 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s15 [label="pw_pos_up / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s38 -> s36 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s38 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s33 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s39 -> s39 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s39 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s39 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s13 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s12 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s39 -> s39 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s31 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s39 -> s39 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s39 -> s39 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s40 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s39 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s56 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s26 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s39 -> s39 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s39 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s39 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s39 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s40 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s40 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s40 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s12 [label="fp_off / pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s15 [label="fp_off / pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s40 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s40 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s26 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s40 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s40 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s31 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s40 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s39 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s30 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s26 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s40 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s40 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s40 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s40 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s40 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s40 [label="receiveMsg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s26 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s41 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s45 [label="fp_off / pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s41 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s41 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s41 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s31 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s41 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s41 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s41 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s41 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s41 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s41 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s26 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s42 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 -> s42 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 -> s32 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s15 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s28 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 -> s19 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s42 -> s24 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s42 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 -> s42 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s42 -> s42 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 -> s44 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s42 -> s37 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s42 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s44 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s42 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s42 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s42 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s42 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 -> s37 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 -> s42 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 -> s18 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s42 [label="pw_but_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 -> s54 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 -> s35 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s42 -> s33 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s29 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s42 -> s38 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s42 -> s28 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s32 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s42 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 -> s42 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 -> s42 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 -> s42 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s43 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s43 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s43 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s43 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s43 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s28 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s19 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s43 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s43 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s43 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s43 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s43 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s24 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s44 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s44 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s44 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s15 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s44 -> s28 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s44 -> s34 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s42 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s44 -> s44 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s44 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s44 -> s44 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s42 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s44 -> s44 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s44 -> s44 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s44 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s44 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s45 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s44 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s44 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s44 -> s27 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s32 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s55 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s29 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s35 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s44 -> s44 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s44 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s44 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s44 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s44 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s24 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s45 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 -> s45 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 -> s45 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s24 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 -> s45 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 -> s45 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 -> s45 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s45 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s3 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 -> s45 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 -> s44 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 -> s37 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s7 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 -> s29 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 -> s45 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s45 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s45 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 -> s44 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s45 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 -> s45 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 -> s13 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s46 -> s46 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s46 -> s46 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s46 -> s46 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s46 -> s47 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s46 -> s12 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s46 -> s18 [label="fp_off / pw_mv_dn,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s46 -> s46 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s46 -> s46 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s46 -> s46 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s46 -> s46 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s46 -> s47 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s46 -> s46 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s46 -> s46 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s46 -> s46 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s46 -> s46 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s47 -> s47 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s47 -> s47 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s47 -> s46 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s47 -> s47 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s47 -> s12 [label="fp_off / pw_mv_dn,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s47 -> s27 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s47 -> s47 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s47 -> s47 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s47 -> s47 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s47 -> s46 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s47 -> s47 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s47 -> s47 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s47 -> s47 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s47 -> s47 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s47 -> s47 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s48 -> s48 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s48 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s10 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s48 [label="fp_off / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s48 [label="fp_on / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s48 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s0 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s48 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s48 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s48 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s48 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s48 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s17 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s49 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s49 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s49 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s49 [label="fp_off / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s49 [label="fp_on / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s49 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s2 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s49 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s5 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s49 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s49 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s49 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s52 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s53 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s50 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s52 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s50 [label="fp_off / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s50 [label="fp_on / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s50 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s6 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s50 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s50 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s50 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s50 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s50 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s50 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s51 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s48 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s16 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s51 [label="fp_off / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s51 [label="fp_on / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s51 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s23 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s51 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s18 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s51 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s51 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s51 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s51 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s36 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s52 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s52 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s52 [label="fp_off / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s52 [label="fp_on / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s52 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s11 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s52 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s50 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s52 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s52 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s52 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s52 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s53 -> s53 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s53 -> s5 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s53 -> s36 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s53 -> s53 [label="fp_off / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s53 -> s53 [label="fp_on / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s53 -> s53 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s53 -> s23 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s53 -> s53 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s53 -> s27 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s53 -> s53 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s53 -> s53 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s53 -> s53 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s53 -> s53 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s54 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s54 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s35 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s54 [label="fp_off / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s30 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s54 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s29 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s54 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s3 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s54 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s54 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s51 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s54 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 -> s55 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 -> s55 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 -> s38 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 -> s55 [label="fp_off / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 -> s56 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 -> s55 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 -> s29 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 -> s55 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 -> s44 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 -> s55 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 -> s55 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 -> s53 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 -> s55 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s56 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s56 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s39 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s27 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s56 [label="fp_on / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s56 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s26 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s56 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s56 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s56 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s56 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s56 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s56 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and LED_Power_Window and not LED_Finger_Protection))]"];
	__start0 [label="" shape="none" width="0" height="0"];
	__start0 -> s0;
}