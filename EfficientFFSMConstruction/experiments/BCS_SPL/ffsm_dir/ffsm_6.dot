digraph g {
	edge [lblstyle="above, sloped"];
	s0 [shape="circle" label="0@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s1 [shape="circle" label="1@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s2 [shape="circle" label="2@[((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 [shape="circle" label="3@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s4 [shape="circle" label="4@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s5 [shape="circle" label="5@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s6 [shape="circle" label="6@[((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s7 [shape="circle" label="7@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 [shape="circle" label="8@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s9 [shape="circle" label="9@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s10 [shape="circle" label="10@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s11 [shape="circle" label="11@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s12 [shape="circle" label="12@[((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s13 [shape="circle" label="13@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 [shape="circle" label="14@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s15 [shape="circle" label="15@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s16 [shape="circle" label="16@[((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s17 [shape="circle" label="17@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s18 [shape="circle" label="18@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s19 [shape="circle" label="19@[((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s20 [shape="circle" label="20@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s21 [shape="circle" label="21@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s22 [shape="circle" label="22@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s23 [shape="circle" label="23@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s24 [shape="circle" label="24@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s25 [shape="circle" label="25@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s26 [shape="circle" label="26@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s27 [shape="circle" label="27@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s28 [shape="circle" label="28@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s29 [shape="circle" label="29@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s30 [shape="circle" label="30@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s31 [shape="circle" label="31@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s32 [shape="circle" label="32@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s33 [shape="circle" label="33@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s34 [shape="circle" label="34@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s35 [shape="circle" label="35@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s36 [shape="circle" label="36@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s37 [shape="circle" label="37@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s38 [shape="circle" label="38@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s39 [shape="circle" label="39@[((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s40 [shape="circle" label="40@[((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s0 -> s0 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s0 -> s0 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s0 -> s1 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s0 -> s0 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s0 -> s0 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s0 -> s2 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s0 -> s0 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s0 -> s3 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s0 -> s4 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s0 -> s0 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s0 -> s0 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s0 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s0 [label="pw_but_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s0 -> s0 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s0 -> s0 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s0 -> s0 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s0 -> s5 [label="receiveMsg / pw_activated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s6 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s1 -> s1 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s1 -> s1 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s1 -> s1 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s1 -> s1 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s1 -> s1 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s1 -> s1 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s1 -> s8 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s1 -> s7 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s1 -> s9 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s1 -> s1 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s1 -> s1 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s1 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s0 [label="pw_but_dn / fp_off,1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s1 -> s1 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s1 -> s1 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s1 -> s1 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s1 -> s11 [label="receiveMsg / pw_activated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s1 -> s10 [label="receiveMsg / pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s2 -> s2 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s2 -> s2 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s2 -> s8 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s2 -> s0 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s2 -> s2 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s2 -> s2 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s2 -> s2 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s2 -> s2 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s2 -> s2 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s2 -> s3 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s12 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s3 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s7 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s11 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s6 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s0 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s3 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s3 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s3 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s3 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s3 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s3 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s3 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s10 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s3 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s4 -> s4 [label="a_pw_msg / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s4 -> s4 [label="apw_stop / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s4 -> s9 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s4 -> s4 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s4 -> s4 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s4 -> s4 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s4 -> s0 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s4 -> s4 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s4 -> s4 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s4 -> s4 [label="pw_but_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s4 -> s4 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s4 -> s4 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s4 -> s4 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s4 -> s5 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s4 -> s13 [label="receiveMsg / pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s14 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s5 -> s5 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s5 -> s15 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s5 -> s5 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s5 -> s11 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s5 -> s39 [label="finger_detected / fp_on [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s5 -> s16 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s5 -> s10 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s5 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s5 -> s5 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s5 -> s17 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s5 -> s5 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s5 -> s10 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s5 -> s13 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s5 [label="key_pos_lock / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s5 -> s6 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s5 -> s5 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s18 [label="m_pw_msg / m_pw_activated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s5 -> s14 [label="m_pw_msg / m_pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s19 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s5 -> s5 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s5 [label="pw_but_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s5 -> s5 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s5 -> s20 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s5 -> s5 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s5 -> s5 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s5 -> s5 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s6 -> s14 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s6 -> s12 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s6 -> s6 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s6 -> s10 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s6 -> s6 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s6 -> s6 [label="fp_off / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s6 -> s3 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s6 -> s6 [label="fp_on / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s6 -> s5 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s6 -> s6 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s6 -> s6 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s6 -> s6 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s6 -> s6 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s6 -> s6 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s6 -> s6 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s7 -> s7 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s7 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s7 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s18 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s1 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s7 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s7 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s7 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s23 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s3 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s7 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s15 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s24 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s7 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s7 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s7 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s25 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s8 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s8 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s8 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s1 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s18 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s8 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s8 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s8 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s2 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s21 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s8 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s22 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s17 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s8 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s8 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s11 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s8 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s9 -> s9 [label="a_pw_msg / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s9 -> s9 [label="apw_stop / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s9 -> s9 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s9 -> s9 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s9 -> s9 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s9 -> s9 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s9 -> s1 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s9 -> s9 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s9 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s4 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s9 -> s9 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s9 -> s9 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s9 -> s9 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s9 -> s11 [label="receiveMsg / pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s39 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s10 -> s19 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s10 -> s26 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s10 -> s10 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s10 -> s25 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s10 -> s10 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s10 -> s5 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s10 -> s10 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s10 -> s10 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s10 -> s10 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s10 -> s11 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s10 -> s10 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s10 -> s11 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s39 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s10 -> s10 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s10 -> s26 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s10 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s5 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s6 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s10 -> s10 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s10 -> s10 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s10 -> s10 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s10 -> s10 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s10 -> s10 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s11 -> s18 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s19 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s11 [label="a_pw_msg / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s11 -> s11 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s11 -> s11 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s11 -> s11 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s10 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s11 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s11 -> s11 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s11 -> s11 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s25 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s11 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s11 -> s18 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s11 -> s10 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s15 [label="m_pw_msg / m_pw_activated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s12 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s11 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s21 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s11 -> s13 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s3 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s5 [label="pw_but_dn / fp_off,1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s11 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s15 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s11 -> s11 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s28 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s11 -> s11 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s11 -> s11 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s12 -> s12 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s12 -> s2 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s0 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s12 -> s12 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s12 [label="finger_detected / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s19 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s12 -> s12 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s14 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s12 [label="fp_off / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s12 -> s12 [label="fp_on / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s12 -> s12 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s14 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s14 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s12 -> s12 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s26 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s12 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s12 -> s12 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s1 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s9 [label="mpw_stop / pw_inactivated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s23 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s23 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s12 -> s12 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s12 -> s27 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s12 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s12 -> s12 [label="pw_pos_up / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s12 -> s12 [label="receiveMsg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s13 -> s11 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s13 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s13 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s13 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s5 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s19 [label="m_pw_msg / m_pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s13 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s13 [label="pw_but_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s13 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s13 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s13 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s13 [label="receiveMsg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s14 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s14 -> s4 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s14 -> s0 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s14 -> s26 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s14 -> s14 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s14 -> s12 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s14 -> s14 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s14 -> s14 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s14 -> s14 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s14 -> s12 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s14 -> s14 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s14 -> s14 [label="key_pos_lock / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s14 -> s19 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s14 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s12 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s14 -> s14 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s0 [label="mpw_stop / pw_inactivated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s7 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s14 -> s21 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s14 -> s21 [label="pw_but_dn / 1,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s14 -> s14 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s14 -> s14 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s14 -> s14 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s14 -> s14 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s15 -> s15 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s15 -> s15 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s15 -> s0 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s18 [label="finger_detected / fp_on [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s15 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s15 -> s15 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s15 -> s28 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s15 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s15 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s15 -> s15 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s15 -> s28 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s17 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s15 -> s15 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s15 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s1 [label="mpw_stop / pw_inactivated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s21 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s15 -> s23 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s23 [label="pw_but_dn / fp_off,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s29 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s27 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s20 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s15 -> s15 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s15 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s15 -> s18 [label="pw_pos_dn / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s15 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s15 -> s15 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s16 -> s16 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s16 -> s16 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s16 -> s16 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s16 -> s16 [label="fp_off / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s16 -> s16 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s16 -> s16 [label="fp_on / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s16 -> s24 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s16 -> s28 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s16 -> s16 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s16 -> s5 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s16 -> s24 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s16 -> s29 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s16 -> s22 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s16 -> s16 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s16 -> s16 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s16 -> s16 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s17 -> s17 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s17 -> s17 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s17 -> s17 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s17 -> s24 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s17 -> s5 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s17 -> s24 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s17 -> s17 [label="fp_off / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s17 -> s17 [label="fp_on / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s17 -> s17 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s17 -> s15 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s17 -> s17 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s17 -> s17 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s17 -> s17 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s17 -> s23 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s17 -> s30 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s17 -> s17 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s17 -> s27 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s17 -> s29 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s17 -> s22 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s17 -> s17 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s17 -> s17 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s17 -> s17 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s18 -> s18 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s18 -> s18 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s18 -> s1 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s15 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s18 [label="finger_detected / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s18 -> s18 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s18 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s18 -> s7 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s8 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s18 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s18 -> s11 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s18 -> s18 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s18 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s18 -> s24 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s18 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s18 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s0 [label="mpw_stop / pw_inactivated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s23 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s21 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s23 [label="pw_but_dn / 1,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s23 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s18 -> s31 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s17 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s18 -> s18 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s28 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s27 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s24 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s18 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s16 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s18 -> s18 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s18 -> s18 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s19 -> s19 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s19 -> s8 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s19 -> s1 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s19 -> s19 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s19 -> s19 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s19 -> s12 [label="finger_detected / fp_on [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s26 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s19 -> s19 [label="fp_off / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s19 -> s19 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s19 -> s26 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s19 -> s19 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s19 -> s19 [label="fp_on / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s19 -> s19 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s26 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s19 -> s14 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s19 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s19 -> s19 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s4 [label="mpw_stop / pw_inactivated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s0 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s19 -> s23 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s19 -> s23 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s19 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s19 -> s29 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s19 -> s19 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s19 -> s19 [label="pw_pos_up / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s19 -> s19 [label="receiveMsg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s20 -> s20 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s20 -> s20 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s20 -> s22 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s20 -> s20 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s20 -> s20 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s20 -> s29 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s20 -> s20 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s20 -> s32 [label="fp_on / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s20 -> s34 [label="fp_on / pw_mv_stop,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s20 -> s37 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s20 -> s33 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s20 -> s27 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s20 -> s20 [label="key_pos_lock / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s20 -> s20 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s20 -> s29 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s20 -> s20 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s20 -> s20 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s20 -> s21 [label="pw_but_dn / fp_off,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s20 -> s35 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s20 -> s21 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s20 -> s35 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s20 -> s20 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s20 -> s20 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s20 -> s20 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s20 -> s26 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s20 -> s14 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s20 -> s20 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s21 -> s21 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s21 -> s21 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s21 -> s8 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s18 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s28 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s11 [label="finger_detected / fp_on [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s21 -> s23 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s21 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s21 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s21 -> s21 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s21 -> s21 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s23 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s23 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s21 [label="key_pos_lock / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s21 -> s21 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s23 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s21 -> s21 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s21 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s21 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s21 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s21 -> s35 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s21 -> s20 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s22 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s35 [label="pw_pos_dn / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s5 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s30 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s31 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s21 -> s21 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s21 -> s21 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s22 -> s22 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s22 -> s22 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s22 -> s22 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s22 -> s20 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s22 -> s22 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s22 -> s27 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s22 -> s22 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s22 -> s36 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s22 -> s37 [label="fp_on / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s34 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s22 -> s33 [label="fp_on / pw_mv_stop,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s22 -> s29 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s22 [label="key_pos_lock / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s22 -> s27 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s22 -> s22 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s22 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s22 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s35 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s22 -> s35 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s22 -> s21 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s22 -> s21 [label="pw_but_dn / 1,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s22 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s22 -> s22 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s22 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s22 -> s26 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s22 -> s14 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s22 -> s22 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s23 -> s23 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s23 -> s23 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s23 -> s18 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s23 -> s28 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s7 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s15 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s23 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s23 -> s23 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s21 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s23 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s23 -> s23 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s21 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s23 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s21 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s23 -> s21 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s23 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s23 -> s23 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s23 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s23 [label="pw_but_dn / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s23 -> s23 [label="pw_but_dn / 1,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s29 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s27 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s19 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s30 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s23 -> s24 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s23 -> s31 [label="pw_pos_dn / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s35 [label="pw_pos_dn / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s17 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s23 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s23 -> s23 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s24 -> s24 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s24 -> s24 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s24 -> s16 [label="finger_detected / fp_on [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s24 -> s24 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s24 -> s16 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s24 -> s24 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s24 -> s24 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s24 -> s24 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s24 -> s17 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s24 -> s24 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s24 -> s18 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s31 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s24 -> s24 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s24 -> s24 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s24 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s24 [label="pw_but_dn / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s24 -> s35 [label="pw_but_dn / fp_off,1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s17 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s24 -> s27 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s24 -> s20 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s29 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s24 -> s24 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s24 -> s24 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s24 -> s24 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s25 -> s25 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s25 -> s11 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s25 -> s25 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s25 -> s14 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s25 -> s25 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s25 -> s10 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s25 -> s25 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s25 -> s25 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s25 -> s25 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s25 -> s25 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s26 -> s26 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s26 -> s1 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s26 -> s9 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s26 -> s26 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s26 -> s14 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s26 -> s26 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s26 -> s26 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s26 -> s19 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s26 -> s26 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s26 -> s19 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s26 -> s26 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s26 -> s12 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s26 -> s26 [label="key_pos_lock / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s26 -> s19 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s26 -> s26 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s26 -> s26 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s26 -> s1 [label="mpw_stop / pw_inactivated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s26 -> s3 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s26 -> s21 [label="pw_but_dn / fp_off,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s26 -> s21 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s26 -> s26 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s26 -> s26 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s26 -> s26 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s26 -> s26 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s27 -> s27 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s27 -> s27 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s27 -> s29 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s27 -> s27 [label="finger_detected / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s27 -> s27 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s27 -> s20 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s27 -> s27 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s27 -> s37 [label="fp_on / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s27 -> s34 [label="fp_on / pw_mv_stop,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s27 -> s34 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s27 -> s32 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s27 -> s38 [label="fp_on / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s27 -> s27 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s27 -> s22 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s27 -> s20 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s27 -> s27 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s27 -> s27 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s27 -> s27 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s27 -> s30 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s27 -> s23 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s27 -> s19 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s27 -> s23 [label="pw_but_dn / 1,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s27 -> s27 [label="pw_but_up / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s27 -> s27 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s27 -> s27 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s27 -> s12 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s27 -> s18 [label="pw_pos_up / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s27 -> s27 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s28 -> s28 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s28 -> s28 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s28 -> s28 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s28 -> s28 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s28 -> s28 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s28 -> s15 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s28 -> s28 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s28 -> s15 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s28 -> s28 [label="key_pos_lock / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s28 -> s28 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s28 -> s16 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s28 -> s28 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s28 -> s28 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s28 -> s23 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s28 -> s21 [label="pw_but_dn / fp_off,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s28 -> s23 [label="pw_but_dn / fp_off,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s28 -> s31 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s28 -> s29 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s28 -> s12 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s28 -> s20 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s28 -> s22 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s28 -> s24 [label="pw_pos_dn / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s28 -> s28 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s28 -> s28 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s28 -> s28 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s29 -> s29 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s29 -> s29 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s29 -> s27 [label="finger_detected / fp_on [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s29 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s29 -> s29 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s29 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s29 -> s22 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s36 [label="fp_on / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s33 [label="fp_on / pw_mv_stop,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s32 [label="fp_on / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s33 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s37 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s40 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s29 -> s29 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s20 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s29 -> s22 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s29 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s29 -> s29 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s29 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s30 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s29 -> s19 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s23 [label="pw_but_dn / fp_off,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s23 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s29 [label="pw_but_up / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s29 -> s29 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s29 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s29 -> s15 [label="pw_pos_up / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s19 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s29 -> s29 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s30 -> s30 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s30 -> s30 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s30 -> s17 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s30 -> s15 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s30 -> s35 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s30 -> s30 [label="fp_off / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s30 -> s30 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s30 -> s30 [label="fp_on / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s30 -> s35 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s30 -> s30 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s30 -> s30 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s30 -> s30 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s30 -> s30 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s30 -> s23 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s30 -> s27 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s30 -> s20 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s30 -> s30 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s30 -> s30 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s30 -> s30 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s31 -> s31 [label="a_pw_msg / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s31 -> s31 [label="apw_stop / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s31 -> s28 [label="finger_detected / fp_on [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s31 -> s18 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s31 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s31 -> s31 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s31 -> s31 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s31 -> s35 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s24 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s31 -> s31 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s31 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s31 [label="pw_but_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s31 -> s29 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s22 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s31 -> s31 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s31 -> s31 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s31 -> s31 [label="receiveMsg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s32 -> s32 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s32 -> s32 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s32 -> s40 [label="finger_detected / fp_on [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s32 -> s32 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s28 [label="fp_off / pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s23 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s32 -> s32 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s32 -> s36 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s32 -> s38 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s32 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s32 -> s32 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s32 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s32 [label="pw_but_dn / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s32 -> s37 [label="pw_but_dn / fp_off,1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s32 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s32 -> s32 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s32 -> s32 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s32 -> s32 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s33 -> s33 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s33 -> s33 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s33 -> s33 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s33 -> s34 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s33 -> s23 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s33 -> s18 [label="fp_off / pw_mv_dn,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s33 -> s33 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s33 -> s33 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s33 -> s33 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s33 -> s33 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s33 -> s34 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s33 -> s33 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s33 -> s33 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s33 -> s33 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s33 -> s33 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s34 -> s34 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s34 -> s34 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s34 -> s34 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s34 -> s33 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s34 -> s18 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s34 -> s21 [label="fp_off / pw_mv_dn,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s34 -> s34 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s34 -> s34 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s34 -> s34 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s34 -> s33 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s34 -> s34 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s34 -> s34 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s34 -> s34 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s34 -> s34 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s34 -> s34 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s35 -> s35 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s35 -> s35 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s35 -> s28 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s35 -> s15 [label="finger_detected / fp_on [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s35 -> s24 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s35 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s35 -> s35 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s35 -> s30 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s35 -> s35 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s35 -> s31 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s35 [label="key_pos_lock / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s35 -> s30 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s35 -> s35 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s35 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s35 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s21 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s35 -> s35 [label="pw_but_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s22 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s35 -> s20 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s35 -> s29 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s35 -> s27 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s35 -> s35 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s35 -> s35 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s35 -> s35 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s36 -> s36 [label="a_pw_msg / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s36 -> s36 [label="apw_stop / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s36 -> s37 [label="finger_detected / fp_on [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s36 -> s38 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s36 -> s21 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s36 -> s23 [label="fp_off / pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s36 -> s36 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s36 -> s36 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s36 -> s37 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s36 -> s32 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s36 -> s36 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s36 -> s36 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s36 -> s36 [label="pw_but_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s36 -> s36 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s36 -> s36 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s36 -> s36 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s36 -> s36 [label="receiveMsg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s37 -> s37 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s37 -> s37 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s37 -> s37 [label="finger_detected / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s37 -> s32 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s37 -> s21 [label="fp_off / pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s37 -> s23 [label="fp_off / pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s37 -> s11 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s37 -> s37 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s37 -> s36 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s37 -> s37 [label="key_pos_lock / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s37 -> s40 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s37 -> s37 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s37 -> s37 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s37 -> s37 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s37 -> s37 [label="pw_but_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s37 -> s36 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s37 -> s37 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s37 -> s37 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s37 -> s37 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s37 -> s37 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s38 -> s38 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s15 [label="fp_off / pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s38 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s38 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s32 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s38 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s38 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s36 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s38 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s38 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s38 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s38 [label="receiveMsg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s39 -> s26 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s39 -> s39 [label="apw_stop / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s39 -> s39 [label="finger_detected / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s39 -> s39 [label="fp_off / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s39 -> s39 [label="fp_on / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s39 -> s39 [label="key_pos_lock / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s39 -> s10 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s39 -> s5 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s39 -> s39 [label="pw_but_up / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s39 -> s39 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s39 -> s39 [label="pw_pos_up / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s39 -> s39 [label="receiveMsg / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s40 -> s40 [label="a_pw_msg / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s40 -> s40 [label="apw_stop / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s40 -> s40 [label="finger_detected / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s40 -> s18 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s40 -> s40 [label="fp_on / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s40 -> s37 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s40 -> s40 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s40 -> s32 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s40 -> s40 [label="pw_but_up / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s40 -> s40 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s40 -> s40 [label="pw_pos_up / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	s40 -> s40 [label="receiveMsg / 1 [((Automatic_Power_Window and Central_Locking_System and not Status_LED and not LED_Finger_Protection and not LED_Power_Window))]"];
	__start0 [label="" shape="none" width="0" height="0"];
	__start0 -> s0;
}