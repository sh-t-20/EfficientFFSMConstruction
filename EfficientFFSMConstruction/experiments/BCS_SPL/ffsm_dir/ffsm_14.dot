digraph g {
	edge [lblstyle="above, sloped"];
	s0 [shape="circle" label="0@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s1 [shape="circle" label="1@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s2 [shape="circle" label="2@[((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s3 [shape="circle" label="3@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s4 [shape="circle" label="4@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s5 [shape="circle" label="5@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s6 [shape="circle" label="6@[((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s7 [shape="circle" label="7@[((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s8 [shape="circle" label="8@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s9 [shape="circle" label="9@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s10 [shape="circle" label="10@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s11 [shape="circle" label="11@[((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s12 [shape="circle" label="12@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s13 [shape="circle" label="13@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s14 [shape="circle" label="14@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s15 [shape="circle" label="15@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s16 [shape="circle" label="16@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s17 [shape="circle" label="17@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s18 [shape="circle" label="18@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s19 [shape="circle" label="19@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s20 [shape="circle" label="20@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s21 [shape="circle" label="21@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s22 [shape="circle" label="22@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s23 [shape="circle" label="23@[((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s24 [shape="circle" label="24@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s25 [shape="circle" label="25@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s26 [shape="circle" label="26@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s27 [shape="circle" label="27@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s28 [shape="circle" label="28@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s29 [shape="circle" label="29@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s30 [shape="circle" label="30@[((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s31 [shape="circle" label="31@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s32 [shape="circle" label="32@[((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s33 [shape="circle" label="33@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s34 [shape="circle" label="34@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s35 [shape="circle" label="35@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s36 [shape="circle" label="36@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s37 [shape="circle" label="37@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s38 [shape="circle" label="38@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s39 [shape="circle" label="39@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s40 [shape="circle" label="40@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s41 [shape="circle" label="41@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s42 [shape="circle" label="42@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s43 [shape="circle" label="43@[((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s44 [shape="circle" label="44@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s45 [shape="circle" label="45@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s46 [shape="circle" label="46@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s47 [shape="circle" label="47@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s48 [shape="circle" label="48@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s49 [shape="circle" label="49@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s50 [shape="circle" label="50@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s51 [shape="circle" label="51@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s52 [shape="circle" label="52@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s53 [shape="circle" label="53@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s54 [shape="circle" label="54@[((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s55 [shape="circle" label="55@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s56 [shape="circle" label="56@[((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s57 [shape="circle" label="57@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s58 [shape="circle" label="58@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s59 [shape="circle" label="59@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s60 [shape="circle" label="60@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s61 [shape="circle" label="61@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s62 [shape="circle" label="62@[((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s63 [shape="circle" label="63@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s64 [shape="circle" label="64@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s65 [shape="circle" label="65@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s66 [shape="circle" label="66@[((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s67 [shape="circle" label="67@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s68 [shape="circle" label="68@[((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s69 [shape="circle" label="69@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s70 [shape="circle" label="70@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s71 [shape="circle" label="71@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s72 [shape="circle" label="72@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s73 [shape="circle" label="73@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s74 [shape="circle" label="74@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s75 [shape="circle" label="75@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s76 [shape="circle" label="76@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s77 [shape="circle" label="77@[((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s78 [shape="circle" label="78@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s79 [shape="circle" label="79@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s80 [shape="circle" label="80@[((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s81 [shape="circle" label="81@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s82 [shape="circle" label="82@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s83 [shape="circle" label="83@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s84 [shape="circle" label="84@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s85 [shape="circle" label="85@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s86 [shape="circle" label="86@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s87 [shape="circle" label="87@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s88 [shape="circle" label="88@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s89 [shape="circle" label="89@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s90 [shape="circle" label="90@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s91 [shape="circle" label="91@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s92 [shape="circle" label="92@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s93 [shape="circle" label="93@[((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s94 [shape="circle" label="94@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s95 [shape="circle" label="95@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s96 [shape="circle" label="96@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s97 [shape="circle" label="97@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s98 [shape="circle" label="98@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s99 [shape="circle" label="99@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s100 [shape="circle" label="100@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s101 [shape="circle" label="101@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s102 [shape="circle" label="102@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s103 [shape="circle" label="103@[((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s104 [shape="circle" label="104@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s105 [shape="circle" label="105@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s106 [shape="circle" label="106@[((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s107 [shape="circle" label="107@[((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s108 [shape="circle" label="108@[((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s109 [shape="circle" label="109@[((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s110 [shape="circle" label="110@[((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s111 [shape="circle" label="111@[((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s112 [shape="circle" label="112@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s113 [shape="circle" label="113@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s114 [shape="circle" label="114@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s115 [shape="circle" label="115@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s116 [shape="circle" label="116@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s117 [shape="circle" label="117@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s118 [shape="circle" label="118@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s119 [shape="circle" label="119@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s120 [shape="circle" label="120@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s121 [shape="circle" label="121@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s122 [shape="circle" label="122@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s123 [shape="circle" label="123@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s124 [shape="circle" label="124@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s125 [shape="circle" label="125@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s126 [shape="circle" label="126@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s127 [shape="circle" label="127@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s128 [shape="circle" label="128@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s129 [shape="circle" label="129@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s130 [shape="circle" label="130@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s131 [shape="circle" label="131@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s132 [shape="circle" label="132@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s133 [shape="circle" label="133@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s134 [shape="circle" label="134@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s135 [shape="circle" label="135@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s136 [shape="circle" label="136@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s137 [shape="circle" label="137@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s138 [shape="circle" label="138@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s139 [shape="circle" label="139@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s140 [shape="circle" label="140@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s141 [shape="circle" label="141@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s142 [shape="circle" label="142@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s143 [shape="circle" label="143@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s144 [shape="circle" label="144@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s145 [shape="circle" label="145@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s146 [shape="circle" label="146@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s147 [shape="circle" label="147@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s148 [shape="circle" label="148@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s149 [shape="circle" label="149@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s150 [shape="circle" label="150@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s151 [shape="circle" label="151@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s152 [shape="circle" label="152@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s153 [shape="circle" label="153@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s154 [shape="circle" label="154@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s155 [shape="circle" label="155@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s156 [shape="circle" label="156@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s157 [shape="circle" label="157@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s158 [shape="circle" label="158@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s159 [shape="circle" label="159@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s160 [shape="circle" label="160@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s161 [shape="circle" label="161@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s162 [shape="circle" label="162@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s163 [shape="circle" label="163@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s164 [shape="circle" label="164@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s165 [shape="circle" label="165@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s166 [shape="circle" label="166@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s167 [shape="circle" label="167@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s168 [shape="circle" label="168@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s169 [shape="circle" label="169@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s170 [shape="circle" label="170@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s171 [shape="circle" label="171@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s172 [shape="circle" label="172@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s173 [shape="circle" label="173@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s174 [shape="circle" label="174@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s175 [shape="circle" label="175@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s176 [shape="circle" label="176@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s177 [shape="circle" label="177@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s178 [shape="circle" label="178@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s179 [shape="circle" label="179@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s180 [shape="circle" label="180@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s181 [shape="circle" label="181@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s182 [shape="circle" label="182@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s183 [shape="circle" label="183@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s0 -> s0 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s0 -> s0 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s0 -> s4 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s0 -> s2 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s0 -> s1 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s3 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s0 -> s113 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s0 -> s6 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s0 -> s5 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s0 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s0 -> s0 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s0 -> s3 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s0 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s0 -> s7 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s0 -> s8 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s0 -> s114 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s0 -> s9 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s0 -> s1 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s0 -> s12 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s0 -> s10 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s13 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s0 -> s19 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s0 -> s11 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s0 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s0 -> s0 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s0 -> s0 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s0 -> s14 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s0 -> s108 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s0 -> s0 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s0 -> s1 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s0 -> s51 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s0 -> s10 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s0 [label="pw_but_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s0 -> s0 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s0 -> s16 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s0 -> s8 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s15 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s0 -> s10 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s17 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s0 -> s15 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s0 -> s0 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s0 -> s0 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s0 -> s10 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s11 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s20 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s0 -> s8 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s0 -> s115 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s0 -> s18 [label="receiveMsg / pw_activated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s21 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s0 -> s19 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s0 -> s0 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s1 -> s1 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s1 -> s1 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s1 -> s29 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s1 -> s1 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s1 -> s42 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s1 -> s43 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s1 -> s163 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s1 -> s1 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s1 -> s1 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s1 -> s45 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s1 -> s1 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s1 -> s26 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s155 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s1 -> s44 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s1 -> s46 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s1 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s1 -> s19 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s1 -> s66 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s1 -> s1 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s1 -> s0 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s1 -> s16 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s1 -> s47 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s1 -> s1 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s1 -> s1 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s1 -> s46 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s1 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s1 -> s0 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s1 -> s1 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s95 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s1 -> s48 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s1 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s1 -> s49 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s1 -> s10 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s0 [label="pw_but_dn / fp_off,1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s1 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s1 -> s38 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s1 -> s1 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s1 -> s1 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s1 -> s1 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s1 -> s1 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s1 -> s1 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s1 -> s11 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s1 -> s50 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s1 -> s51 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s1 -> s3 [label="receiveMsg / pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s30 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s1 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s1 -> s5 [label="receiveMsg / pw_activated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s1 -> s13 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s1 -> s5 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s52 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s2 -> s2 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s2 -> s2 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s2 -> s2 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s2 -> s2 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s2 -> s4 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s2 -> s2 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s2 -> s2 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s2 -> s76 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s2 -> s153 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s2 -> s2 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s2 -> s112 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s2 -> s77 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s2 -> s2 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s2 -> s78 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s2 -> s43 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s2 -> s79 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s2 -> s0 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s2 -> s158 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s2 -> s2 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s2 -> s2 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s2 -> s157 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s2 -> s2 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s2 -> s54 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s2 -> s2 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s3 -> s3 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s3 -> s23 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s22 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s24 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s3 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s3 -> s26 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s27 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s25 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s22 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s3 -> s3 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s4 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s3 -> s3 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s3 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s3 -> s18 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s0 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s28 [label="fp_off / pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s3 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s3 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s3 -> s72 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s3 -> s5 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s12 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s3 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s30 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s5 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s29 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s3 -> s160 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s3 -> s31 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s32 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s3 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s3 -> s22 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s3 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s24 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s3 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s3 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s3 -> s21 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s30 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s86 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s3 -> s3 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s34 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s33 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s3 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s3 -> s6 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s3 -> s11 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s18 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s16 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s21 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s3 -> s0 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s3 -> s35 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s3 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s36 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s3 -> s29 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s38 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s3 -> s3 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s38 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s3 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s37 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s3 -> s3 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s39 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s3 -> s12 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s3 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s3 -> s3 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s3 -> s41 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s3 -> s3 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s3 -> s40 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s3 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s19 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s4 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s4 -> s53 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s4 -> s4 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s4 -> s4 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s4 -> s4 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s4 -> s4 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s4 -> s2 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s4 -> s4 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s4 -> s3 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s4 -> s4 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s4 -> s52 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s4 -> s146 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s4 -> s4 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s4 -> s54 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s4 -> s4 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s4 -> s4 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s4 -> s55 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s4 -> s149 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s4 -> s4 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s4 -> s56 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s4 -> s90 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s4 -> s0 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s4 -> s13 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s4 -> s20 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s4 -> s106 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s4 -> s4 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s4 -> s57 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s4 -> s58 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s4 -> s59 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s4 -> s32 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s4 -> s4 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s4 -> s4 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s4 -> s4 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s4 -> s29 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s4 -> s4 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s5 -> s23 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s5 -> s41 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s5 -> s5 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s5 -> s5 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s5 -> s60 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s5 -> s5 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s5 -> s53 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s5 -> s5 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s5 -> s5 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s5 -> s61 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s22 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s5 -> s3 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s5 -> s63 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s5 -> s34 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s5 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s5 -> s62 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s5 -> s25 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s5 -> s5 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s5 -> s55 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s5 -> s5 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s5 -> s44 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s41 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s5 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s5 -> s65 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s5 -> s45 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s5 -> s64 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s5 -> s3 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s47 [label="m_pw_msg / m_pw_activated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s5 -> s5 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s5 -> s66 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s6 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s5 -> s5 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s5 -> s5 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s5 -> s67 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s5 -> s47 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s5 -> s158 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s5 -> s5 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s5 -> s68 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s5 -> s16 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s69 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s5 -> s5 [label="pw_but_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s5 -> s18 [label="pw_but_dn / fp_off,1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s5 -> s9 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s8 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s5 -> s71 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s5 -> s0 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s5 -> s101 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s5 -> s70 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s5 -> s5 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s5 -> s73 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s5 -> s27 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s5 -> s72 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s5 -> s5 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s47 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s45 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s5 -> s41 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s5 -> s7 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s5 -> s74 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s5 -> s1 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s5 -> s47 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s5 -> s26 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s5 -> s5 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s5 -> s29 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s5 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s5 -> s45 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s75 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s5 -> s5 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s5 -> s19 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s5 -> s5 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s6 -> s6 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s6 -> s6 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s6 -> s149 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s6 -> s6 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s6 -> s6 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s6 -> s23 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s41 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s6 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s6 -> s24 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s6 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s6 -> s78 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s6 -> s30 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s6 -> s101 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s6 -> s79 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s46 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s6 -> s70 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s6 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s6 -> s25 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s6 -> s83 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s6 -> s6 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s6 -> s26 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s6 -> s6 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s6 -> s22 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s6 -> s6 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s6 -> s6 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s6 -> s20 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s6 -> s53 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s80 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s6 -> s6 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s6 -> s12 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s6 -> s0 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s6 -> s49 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s6 -> s31 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s72 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s6 -> s6 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s6 -> s64 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s69 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s21 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s6 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s6 -> s3 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s6 -> s36 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s6 -> s6 [label="pw_mv_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s6 -> s80 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s6 -> s70 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s6 -> s6 [label="pw_mv_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s6 -> s1 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s6 -> s46 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s6 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s6 -> s22 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s6 -> s6 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s6 -> s52 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s6 -> s6 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s6 -> s6 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s6 -> s81 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s7 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s7 -> s7 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s7 -> s146 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s7 -> s35 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s69 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s44 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s7 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s7 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s7 -> s0 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s28 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s7 -> s53 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s7 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s28 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s7 -> s7 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s7 -> s68 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s7 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s7 -> s23 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s82 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s7 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s20 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s7 -> s7 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s7 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s7 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s83 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s7 -> s23 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s71 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s7 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s7 -> s7 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s145 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s7 -> s7 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s7 -> s9 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s7 -> s7 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s7 -> s83 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s147 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s7 -> s84 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s72 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s7 -> s36 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s61 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s7 -> s57 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s65 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s7 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s7 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s7 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s148 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s7 -> s7 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s23 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s7 -> s7 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s7 -> s8 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s7 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s7 -> s69 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s7 -> s5 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s8 -> s66 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s8 -> s8 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s8 -> s119 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s8 -> s8 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s8 -> s8 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s8 -> s52 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s8 -> s25 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s8 -> s47 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s8 -> s5 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s27 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s8 -> s45 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s41 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s8 -> s8 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s8 -> s8 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s8 -> s11 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s8 -> s0 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s76 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s8 -> s8 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s8 -> s8 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s8 -> s81 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s8 -> s42 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s8 -> s8 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s8 -> s88 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s8 -> s11 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s8 -> s8 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s8 -> s10 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s8 -> s15 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s8 -> s66 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s8 -> s8 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s8 -> s22 [label="m_pw_msg / m_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s8 -> s85 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s8 -> s8 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s8 -> s38 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s8 -> s8 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s8 -> s8 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s8 -> s16 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s8 -> s8 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s8 -> s83 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s8 -> s8 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s8 -> s71 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s8 -> s20 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s8 -> s8 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s8 -> s23 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s8 -> s8 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s8 -> s8 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s8 -> s8 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s8 -> s9 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s8 -> s8 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s8 -> s8 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s8 -> s20 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s3 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s49 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s8 -> s0 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s46 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s8 -> s13 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s9 -> s9 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s9 -> s9 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s9 -> s19 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s9 -> s34 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s30 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s9 -> s29 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s44 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s9 -> s5 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s32 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s9 -> s46 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s9 -> s41 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s9 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s9 -> s12 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s9 -> s9 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s9 -> s9 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s9 -> s15 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s0 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s9 -> s12 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s9 -> s135 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s9 -> s9 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s9 -> s9 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s9 -> s35 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s9 -> s9 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s9 -> s12 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s9 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s9 -> s10 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s9 -> s40 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s9 -> s85 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s9 -> s12 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s74 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s9 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s9 -> s9 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s9 -> s9 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s52 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s9 -> s86 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s9 -> s9 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s9 -> s18 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s9 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s13 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s9 -> s82 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s9 -> s9 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s9 -> s69 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s9 -> s9 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s7 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s9 -> s40 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s9 -> s7 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s9 -> s36 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s9 -> s57 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s9 -> s9 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s9 -> s40 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s73 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s87 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s16 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s9 -> s9 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s9 -> s26 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s9 -> s9 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s9 -> s35 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s9 -> s13 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s9 -> s18 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s9 -> s40 [label="pw_pos_dn / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s21 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s26 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s9 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s9 -> s9 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s9 -> s81 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s9 -> s9 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s9 -> s19 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s9 -> s9 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s9 -> s12 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s10 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s10 -> s18 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s10 -> s0 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s10 -> s10 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s10 -> s46 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s44 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s10 -> s30 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s48 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s10 -> s25 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s10 -> s1 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s89 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s10 -> s70 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s10 -> s71 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s10 -> s69 [label="fp_off / pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s10 -> s10 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s10 -> s10 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s10 -> s10 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s10 -> s10 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s10 -> s16 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s10 -> s40 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s15 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s10 -> s9 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s10 -> s81 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s10 -> s8 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s10 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s10 -> s38 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s10 -> s0 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s10 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s10 -> s10 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s10 -> s18 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s10 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s10 -> s10 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s10 -> s102 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s10 -> s10 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s10 -> s0 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s20 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s10 -> s11 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s10 -> s10 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s10 -> s20 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s10 -> s10 [label="pw_but_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s10 -> s57 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s10 -> s10 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s10 -> s40 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s10 -> s10 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s10 -> s10 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s10 -> s74 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s10 -> s10 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s10 -> s10 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s10 -> s10 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s10 -> s18 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s51 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s16 [label="receiveMsg / pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s31 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s10 -> s10 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s10 -> s0 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s24 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s11 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s11 -> s22 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s94 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s66 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s11 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s11 -> s51 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s11 -> s58 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s11 -> s25 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s19 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s95 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s11 -> s3 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s30 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s11 -> s52 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s11 -> s11 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s11 -> s11 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s11 -> s11 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s11 -> s23 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s11 -> s12 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s8 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s11 -> s74 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s11 -> s11 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s11 -> s13 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s11 -> s18 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s38 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s11 -> s11 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s11 -> s0 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s8 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s63 [label="m_pw_msg / m_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s22 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s11 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s11 -> s11 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s11 -> s16 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s11 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s11 -> s88 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s11 -> s11 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s10 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s11 -> s51 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s11 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s11 -> s11 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s11 -> s88 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s11 -> s60 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s11 -> s11 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s11 -> s74 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s11 -> s24 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s11 -> s11 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s11 -> s20 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s11 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s11 -> s16 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s45 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s11 -> s11 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s11 -> s11 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s11 -> s8 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s11 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s11 -> s11 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s64 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s11 -> s13 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s12 -> s12 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s12 -> s12 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s12 -> s41 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s6 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s12 -> s45 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s29 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s76 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s12 -> s23 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s166 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s12 -> s47 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s90 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s12 -> s11 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s71 [label="fp_off / pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s12 -> s9 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s12 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s12 -> s12 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s12 -> s9 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s20 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s12 -> s12 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s12 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s12 -> s100 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s12 -> s91 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s12 -> s75 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s12 -> s12 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s12 -> s13 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s12 -> s9 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s3 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s0 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s12 -> s9 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s12 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s12 -> s12 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s12 -> s92 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s12 -> s12 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s12 -> s93 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s12 -> s12 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s12 -> s86 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s12 -> s12 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s12 -> s18 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s19 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s12 -> s12 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s12 -> s12 [label="pw_but_dn / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s12 -> s12 [label="pw_but_dn / 1,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s88 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s12 -> s23 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s72 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s12 -> s165 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s12 -> s87 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s12 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s12 -> s73 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s13 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s12 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s12 -> s9 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s21 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s12 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s12 -> s12 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s12 -> s26 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s21 [label="pw_pos_dn / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s70 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s40 [label="pw_pos_dn / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s12 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s12 -> s12 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s12 -> s13 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s12 -> s81 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s3 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s12 -> s19 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s12 -> s12 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s47 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s13 -> s13 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s13 -> s13 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s13 -> s120 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s13 -> s13 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s85 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s47 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s13 -> s46 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s13 -> s52 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s13 -> s4 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s13 -> s26 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s24 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s34 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s13 -> s13 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s13 -> s13 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s13 -> s40 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s13 -> s69 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s13 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s13 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s13 -> s42 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s13 -> s21 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s13 -> s71 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s40 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s13 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s13 -> s0 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s13 -> s13 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s11 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s13 -> s20 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s13 -> s12 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s13 -> s13 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s13 -> s13 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s13 -> s13 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s13 -> s81 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s13 -> s13 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s13 -> s9 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s13 -> s71 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s49 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s13 -> s13 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s13 -> s70 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s13 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s13 -> s13 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s12 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s145 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s13 -> s18 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s13 -> s73 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s96 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s61 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s13 -> s29 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s13 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s13 -> s57 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s11 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s13 -> s1 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s13 -> s13 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s8 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s13 -> s95 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s13 -> s13 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s13 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s13 -> s23 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s13 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s13 -> s20 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s13 -> s13 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s13 -> s13 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s13 -> s80 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s14 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s14 -> s14 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s14 -> s14 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s14 -> s46 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s77 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s14 -> s14 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s14 -> s14 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s14 -> s14 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s14 -> s77 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s14 -> s93 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s14 -> s103 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s14 -> s14 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s14 -> s14 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s14 -> s113 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s14 -> s0 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s14 -> s14 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s14 -> s108 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s14 -> s14 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s14 -> s14 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s14 -> s14 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s14 -> s14 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s14 -> s89 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s14 -> s16 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s10 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s15 -> s8 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s15 -> s15 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s15 -> s15 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s15 -> s53 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s70 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s85 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s15 -> s79 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s26 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s15 -> s80 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s15 -> s15 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s15 -> s59 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s15 -> s121 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s15 -> s26 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s15 -> s9 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s15 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s15 -> s15 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s15 -> s12 [label="fp_off / pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s15 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s15 -> s15 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s15 -> s71 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s16 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s15 -> s15 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s15 -> s8 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s15 -> s134 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s15 -> s79 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s15 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s15 -> s10 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s15 -> s30 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s15 -> s69 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s64 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s15 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s15 -> s15 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s15 -> s97 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s15 -> s15 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s15 -> s45 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s15 -> s15 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s15 -> s64 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s15 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s15 -> s90 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s15 -> s16 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s15 -> s15 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s15 [label="pw_but_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s15 -> s15 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s15 -> s36 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s21 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s15 -> s15 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s15 -> s15 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s15 -> s15 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s15 -> s53 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s15 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s15 -> s12 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s15 -> s70 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s15 -> s15 [label="receiveMsg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s15 -> s0 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s15 -> s0 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s15 -> s18 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s16 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s16 -> s94 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s114 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s16 -> s16 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s16 -> s46 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s30 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s3 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s79 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s16 -> s5 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s138 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s16 -> s58 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s16 -> s15 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s16 -> s18 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s16 -> s88 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s16 -> s16 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s10 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s16 -> s15 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s16 -> s16 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s16 -> s16 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s16 -> s16 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s16 -> s23 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s1 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s16 -> s16 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s16 -> s135 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s16 -> s53 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s18 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s16 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s16 -> s79 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s16 -> s16 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s16 -> s23 [label="m_pw_msg / m_pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s65 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s16 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s16 -> s82 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s16 -> s91 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s16 -> s16 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s11 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s16 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s16 -> s62 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s16 -> s16 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s8 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s16 -> s79 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s16 -> s16 [label="pw_but_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s16 -> s96 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s16 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s16 -> s16 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s16 -> s16 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s16 -> s16 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s16 -> s16 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s16 -> s23 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s16 -> s20 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s16 -> s16 [label="receiveMsg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s16 -> s9 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s16 -> s0 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s16 -> s11 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s70 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s17 -> s17 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s17 -> s26 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s17 -> s17 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s17 -> s17 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s17 -> s17 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s17 -> s17 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s17 -> s17 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s17 -> s17 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s17 -> s17 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s17 -> s17 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s17 -> s49 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s17 -> s0 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s18 -> s24 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s18 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s18 -> s47 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s18 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s18 -> s14 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s18 -> s3 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s45 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s18 -> s57 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s18 -> s22 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s18 -> s5 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s41 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s67 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s18 -> s80 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s66 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s18 -> s64 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s30 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s12 [label="fp_off / pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s174 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s18 -> s18 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s18 -> s18 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s18 -> s3 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s10 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s18 -> s26 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s18 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s18 -> s87 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s180 [label="fp_on / pw_mv_stop,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s18 -> s69 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s18 -> s63 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s18 -> s16 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s66 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s18 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s18 -> s40 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s18 -> s87 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s18 -> s11 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s18 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s18 -> s18 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s18 -> s24 [label="m_pw_msg / m_pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s23 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s41 [label="m_pw_msg / m_pw_activated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s0 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s18 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s18 -> s13 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s18 -> s9 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s18 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s18 -> s64 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s18 -> s169 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s18 -> s18 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s18 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s18 -> s12 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s69 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s71 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s18 -> s68 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s18 -> s38 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s18 -> s101 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s18 -> s18 [label="pw_but_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s18 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s18 -> s18 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s18 -> s18 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s18 -> s71 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s57 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s18 -> s15 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s60 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s18 -> s94 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s18 -> s102 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s18 -> s67 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s18 -> s79 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s18 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s18 -> s10 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s18 -> s21 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s100 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s18 -> s42 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s18 -> s18 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s18 -> s18 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s18 -> s18 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s19 -> s19 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s19 -> s19 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s19 -> s117 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s19 -> s52 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s19 -> s48 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s19 -> s19 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s19 -> s19 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s19 -> s19 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s19 -> s19 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s19 -> s81 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s19 -> s41 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s49 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s19 -> s19 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s19 -> s0 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s19 -> s1 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s19 -> s99 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s19 -> s85 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s100 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s19 -> s19 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s19 -> s19 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s19 -> s19 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s19 -> s91 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s19 -> s12 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s19 -> s19 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s19 -> s19 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s19 -> s120 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s19 -> s101 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s19 -> s11 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s19 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s19 -> s46 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s19 -> s19 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s19 -> s12 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s19 -> s25 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s9 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s19 -> s37 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s19 -> s49 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s19 -> s3 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s53 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s19 -> s19 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s19 -> s19 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s19 -> s49 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s19 -> s76 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s19 -> s52 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s19 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s19 -> s19 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s20 -> s64 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s20 -> s20 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s20 -> s20 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s20 -> s4 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s20 -> s54 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s20 -> s8 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s20 -> s81 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s20 -> s25 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s12 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s20 -> s20 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s20 -> s20 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s20 -> s20 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s20 -> s20 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s20 -> s79 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s20 -> s20 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s20 -> s13 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s20 -> s7 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s20 -> s20 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s20 -> s21 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s20 -> s18 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s20 -> s45 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s20 -> s66 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s20 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s20 -> s6 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s20 -> s10 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s20 -> s20 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s20 -> s51 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s20 -> s88 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s20 -> s20 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s20 -> s86 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s20 -> s20 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s20 -> s20 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s20 -> s50 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s20 -> s49 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s20 -> s20 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s20 -> s20 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s20 -> s95 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s20 -> s20 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s20 -> s20 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s20 -> s11 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s81 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s20 -> s20 [label="release_pw_but / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s21 -> s21 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s21 -> s21 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s21 -> s21 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s21 -> s3 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s21 -> s47 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s21 -> s73 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s41 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s29 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s21 -> s71 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s20 [label="fp_off / pw_mv_dn,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s21 -> s21 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s13 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s21 -> s21 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s21 -> s21 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s21 -> s21 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s21 -> s53 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s98 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s61 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s20 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s21 -> s98 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s21 -> s21 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s21 -> s40 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s59 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s21 -> s70 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s21 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s21 -> s57 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s40 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s21 -> s21 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s21 -> s21 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s21 -> s40 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s23 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s21 -> s21 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s21 -> s3 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s21 -> s21 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s21 -> s70 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s176 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s21 -> s21 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s21 -> s69 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s45 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s21 -> s21 [label="pw_but_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s21 -> s69 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s21 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s21 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s21 -> s25 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s21 -> s87 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s21 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s57 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s72 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s61 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s21 -> s21 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s23 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s21 -> s82 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s21 -> s70 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s21 -> s21 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s70 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s21 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s21 -> s63 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s21 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s21 -> s80 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s21 [label="receiveMsg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s21 -> s12 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s21 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s22 -> s22 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s22 -> s77 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s22 -> s0 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s22 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s22 -> s1 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s22 -> s46 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s66 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s22 -> s85 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s22 -> s22 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s22 -> s24 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s22 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s22 -> s22 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s22 -> s23 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s22 -> s102 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s22 -> s5 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s22 -> s23 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s22 -> s22 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s22 -> s45 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s22 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s22 -> s22 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s22 -> s42 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s22 -> s63 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s22 -> s66 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s58 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s22 -> s22 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s22 -> s45 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s22 -> s23 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s80 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s22 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s22 -> s0 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s22 -> s1 [label="mpw_stop / pw_inactivated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s26 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s22 -> s47 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s22 -> s19 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s8 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s22 -> s94 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s22 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s22 -> s109 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s22 -> s106 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s22 -> s22 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s22 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s22 -> s75 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s15 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s83 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s22 -> s12 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s38 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s22 -> s9 [label="pw_but_dn / fp_off,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s6 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s22 -> s88 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s22 -> s18 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s22 -> s9 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s22 -> s22 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s22 -> s96 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s22 -> s66 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s22 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s22 -> s22 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s22 -> s65 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s22 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s22 -> s22 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s22 -> s22 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s22 -> s94 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s22 -> s22 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s66 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s23 -> s23 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s23 -> s23 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s23 -> s1 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s44 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s86 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s66 [label="finger_detected / fp_on [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s44 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s23 -> s23 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s182 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s23 -> s106 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s23 -> s37 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s23 -> s11 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s23 -> s22 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s23 [label="fp_off / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s23 -> s6 [label="fp_off / pw_mv_dn,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s23 -> s23 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s16 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s23 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s23 -> s23 [label="fp_on / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s23 -> s22 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s23 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s22 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s7 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s50 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s23 -> s92 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s23 -> s24 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s23 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s23 -> s23 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s23 -> s92 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s23 -> s23 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s23 -> s0 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s10 [label="mpw_stop / pw_inactivated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s72 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s23 -> s23 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s23 -> s41 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s21 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s23 -> s23 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s23 -> s23 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s23 -> s7 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s23 -> s12 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s8 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s23 -> s23 [label="pw_but_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s23 -> s12 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s12 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s40 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s23 -> s23 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s23 -> s72 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s23 -> s29 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s85 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s40 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s23 -> s47 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s23 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s23 -> s41 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s23 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s23 -> s71 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s5 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s80 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s23 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s23 -> s23 [label="pw_pos_up / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s23 -> s23 [label="receiveMsg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s23 -> s21 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s23 -> s23 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s24 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s24 -> s3 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s24 -> s10 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s1 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s0 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s24 -> s24 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s24 -> s53 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s24 -> s67 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s24 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s22 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s24 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s24 -> s24 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s6 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s66 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s24 -> s73 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s24 -> s173 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s24 -> s50 [label="fp_on / pw_mv_stop,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s24 -> s12 [label="fp_on / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s24 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s66 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s24 -> s24 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s34 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s24 -> s25 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s47 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s24 -> s87 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s23 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s24 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s24 -> s24 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s106 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s64 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s24 -> s66 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s24 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s1 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s45 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s24 -> s0 [label="mpw_stop / pw_inactivated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s24 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s66 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s24 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s24 -> s24 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s169 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s24 -> s41 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s65 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s24 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s24 -> s40 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s24 -> s88 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s74 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s24 -> s13 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s71 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s9 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s24 -> s18 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s9 [label="pw_but_dn / 1,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s21 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s44 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s24 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s24 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s24 -> s29 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s24 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s24 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s24 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s24 -> s86 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s66 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s24 -> s24 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s65 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s141 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s24 -> s24 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s24 -> s36 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s24 -> s85 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s73 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s25 -> s47 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s25 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s25 -> s25 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s25 -> s37 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s25 -> s25 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s25 -> s104 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s25 -> s30 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s25 -> s70 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s25 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s25 -> s5 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s25 -> s25 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s25 -> s25 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s25 -> s97 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s25 -> s48 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s25 -> s25 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s25 -> s25 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s25 -> s63 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s25 -> s6 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s25 -> s24 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s41 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s25 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s25 -> s24 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s25 -> s44 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s42 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s25 -> s25 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s25 -> s25 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s25 -> s29 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s25 -> s138 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s25 -> s25 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s25 -> s74 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s25 -> s3 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s25 -> s11 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s10 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s25 -> s20 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s69 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s25 -> s71 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s25 -> s5 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s25 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s25 -> s25 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s25 -> s29 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s25 -> s34 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s25 -> s25 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s25 -> s25 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s25 -> s35 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s25 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s25 -> s42 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s25 -> s25 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s25 -> s66 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s25 -> s25 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s25 -> s19 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s26 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s26 -> s26 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s26 -> s105 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s26 -> s70 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s26 -> s26 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s26 -> s58 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s1 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s26 -> s26 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s26 -> s18 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s26 -> s17 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s26 -> s70 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s26 -> s26 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s26 -> s111 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s26 -> s26 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s26 -> s26 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s26 -> s41 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s26 -> s47 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s26 -> s26 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s26 -> s6 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s26 -> s70 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s26 -> s150 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s26 -> s26 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s26 -> s27 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s26 -> s26 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s26 -> s45 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s26 -> s26 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s26 -> s26 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s26 -> s52 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s26 -> s47 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s26 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s26 -> s148 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s26 -> s44 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s26 -> s26 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s26 -> s26 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s26 -> s15 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s26 -> s3 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s26 -> s88 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s26 -> s12 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s26 -> s40 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s13 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s26 -> s70 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s26 -> s174 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s26 -> s24 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s26 -> s72 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s26 -> s73 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s26 -> s26 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s26 -> s87 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s26 -> s26 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s26 -> s26 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s26 -> s3 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s26 -> s26 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s26 -> s26 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s26 -> s26 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s26 -> s89 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s26 -> s40 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s29 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s26 -> s9 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s27 -> s27 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s27 -> s27 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s27 -> s27 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s27 -> s99 [label="fp_off / pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s27 -> s80 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s27 -> s96 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s27 -> s27 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s27 -> s182 [label="fp_on / pw_mv_stop,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s27 -> s27 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s27 -> s79 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s27 -> s53 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s27 -> s31 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s27 -> s26 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s27 -> s27 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s27 -> s27 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s27 -> s27 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s27 -> s27 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s27 -> s58 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s27 -> s27 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s27 -> s61 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s27 -> s27 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s27 -> s37 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s27 -> s38 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s27 -> s72 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s27 -> s3 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s27 -> s8 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s27 -> s106 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s27 -> s27 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s27 -> s78 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s27 -> s90 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s27 -> s27 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s27 -> s32 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s27 -> s143 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s27 -> s27 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s27 -> s27 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s27 -> s27 [label="release_pw_but / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s28 -> s28 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s28 -> s28 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s28 -> s99 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s28 -> s153 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s28 -> s42 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s28 -> s7 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s28 -> s28 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s28 -> s28 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s28 -> s7 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s28 -> s28 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s28 -> s28 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s28 -> s28 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s28 -> s101 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s28 -> s79 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s28 -> s28 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s28 -> s28 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s28 -> s28 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s28 -> s69 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s28 -> s28 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s28 -> s152 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s28 -> s28 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s28 -> s28 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s28 -> s60 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s28 -> s73 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s28 -> s81 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s28 -> s28 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s28 -> s88 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s28 -> s28 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s28 -> s71 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s28 -> s11 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s28 -> s154 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s28 -> s64 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s28 -> s28 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s28 -> s28 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s28 -> s71 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s28 -> s28 [label="release_pw_but / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s29 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s29 -> s29 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s14 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s29 -> s29 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s29 -> s44 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s29 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s42 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s29 -> s29 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s29 -> s96 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s29 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s47 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s74 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s29 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s29 -> s143 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s29 -> s15 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s53 [label="fp_on / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s29 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s47 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s57 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s70 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s29 -> s81 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s80 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s29 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s29 -> s3 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s29 -> s29 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s29 -> s41 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s29 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s29 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s29 -> s25 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s41 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s29 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s44 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s29 -> s29 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s29 -> s60 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s9 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s40 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s29 -> s12 [label="pw_but_dn / fp_off,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s92 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s12 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s13 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s1 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s29 -> s6 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s29 -> s9 [label="pw_but_dn / fp_off,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s21 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s44 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s66 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s72 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s29 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s29 -> s57 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s29 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s87 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s44 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s29 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s29 -> s26 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s29 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s29 -> s29 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s29 -> s70 [label="pw_pos_dn / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s26 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s29 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s29 -> s53 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s44 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s87 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s25 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s29 -> s29 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s29 -> s47 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s25 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s29 -> s29 [label="release_pw_but / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s30 -> s30 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s30 -> s22 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s66 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s30 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s30 -> s43 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s30 -> s30 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s30 -> s6 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s30 -> s30 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s30 -> s30 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s30 -> s27 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s30 -> s25 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s30 -> s30 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s30 -> s30 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s30 -> s89 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s15 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s30 -> s34 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s30 -> s52 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s35 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s30 -> s30 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s30 -> s30 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s30 -> s80 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s30 -> s3 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s30 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s30 -> s80 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s30 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s30 -> s78 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s30 -> s30 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s30 -> s44 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s30 -> s30 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s30 -> s3 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s107 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s30 -> s30 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s30 -> s10 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s9 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s30 -> s16 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s88 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s30 -> s79 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s30 -> s18 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s82 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s30 -> s30 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s30 -> s35 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s30 -> s60 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s30 -> s30 [label="pw_mv_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s30 -> s79 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s30 -> s30 [label="pw_mv_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s30 -> s105 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s30 -> s30 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s30 -> s46 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s30 -> s30 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s30 -> s30 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s30 -> s46 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s30 -> s30 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s30 -> s86 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s31 -> s31 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s31 -> s31 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s31 -> s6 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s79 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s31 -> s31 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s31 -> s44 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s31 -> s31 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s31 -> s30 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s31 -> s101 [label="fp_off / pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s31 -> s31 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s31 -> s12 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s132 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s31 -> s31 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s31 -> s31 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s31 -> s3 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s31 -> s83 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s31 -> s27 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s31 -> s43 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s31 -> s31 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s31 -> s31 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s31 -> s31 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s31 -> s88 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s31 -> s117 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s31 -> s64 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s31 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s31 -> s120 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s31 -> s64 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s31 -> s31 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s31 -> s68 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s31 -> s31 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s31 -> s10 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s31 -> s91 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s31 -> s111 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s31 -> s31 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s31 -> s31 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s31 -> s31 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s31 -> s56 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s31 -> s31 [label="release_pw_but / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s32 -> s32 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s32 -> s32 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s32 -> s32 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s32 -> s32 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s32 -> s32 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s32 -> s32 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s32 -> s157 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s32 -> s3 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s32 -> s161 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s32 -> s32 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s32 -> s59 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s32 -> s163 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s32 -> s32 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s32 -> s164 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s32 -> s99 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s32 -> s9 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s32 -> s95 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s32 -> s80 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s32 -> s40 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s32 -> s32 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s32 -> s32 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s32 -> s32 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s33 -> s70 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s33 -> s65 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s33 -> s33 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s33 -> s33 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s33 -> s33 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s33 -> s33 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s33 -> s84 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s33 -> s33 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s33 -> s99 [label="fp_on / pw_mv_stop,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s33 -> s67 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s33 -> s56 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s33 -> s33 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s33 -> s33 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s33 -> s3 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s33 -> s61 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s33 -> s54 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s33 -> s33 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s33 -> s51 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s33 -> s100 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s33 -> s33 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s33 -> s33 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s33 -> s33 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s33 -> s25 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s33 -> s33 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s34 -> s34 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s34 -> s34 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s34 -> s31 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s34 -> s34 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s34 -> s34 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s34 -> s112 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s34 -> s34 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s34 -> s70 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s48 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s34 -> s34 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s34 -> s34 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s34 -> s34 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s34 -> s30 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s34 -> s95 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s34 -> s98 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s99 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s34 -> s34 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s34 -> s34 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s34 -> s34 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s34 -> s3 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s34 -> s46 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s34 -> s34 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s34 -> s145 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s34 -> s74 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s34 -> s111 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s34 -> s9 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s96 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s34 -> s60 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s34 -> s34 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s34 -> s34 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s34 -> s34 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s34 -> s34 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s34 -> s34 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s34 -> s34 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s34 -> s53 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s34 -> s25 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s35 -> s35 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s35 -> s35 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s35 -> s35 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s35 -> s3 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s35 -> s35 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s35 -> s42 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s35 -> s41 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s35 -> s181 [label="fp_on / pw_mv_stop,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s35 -> s35 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s35 -> s35 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s35 -> s35 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s35 -> s9 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s35 -> s30 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s35 -> s86 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s61 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s35 -> s35 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s35 -> s35 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s35 -> s45 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s35 -> s53 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s35 -> s35 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s35 -> s111 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s35 -> s67 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s35 -> s81 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s35 -> s9 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s35 -> s7 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s35 -> s7 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s35 -> s35 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s35 -> s36 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s35 -> s5 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s67 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s35 -> s35 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s35 -> s96 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s35 -> s35 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s35 -> s35 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s35 -> s35 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s35 -> s37 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s35 -> s35 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s35 -> s109 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s35 -> s35 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s35 -> s53 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s36 -> s36 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s36 -> s36 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s36 -> s40 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s36 -> s61 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s36 -> s73 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s36 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s36 -> s57 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s36 -> s36 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s36 -> s36 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s36 -> s9 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s36 -> s15 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s27 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s36 -> s25 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s36 -> s21 [label="fp_on / pw_mv_stop,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s36 -> s48 [label="fp_on / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s36 -> s96 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s36 -> s36 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s36 -> s65 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s36 -> s60 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s36 -> s36 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s36 -> s96 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s36 -> s36 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s36 -> s36 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s36 -> s36 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s38 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s36 -> s57 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s36 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s36 -> s165 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s36 -> s36 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s15 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s36 -> s86 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s36 -> s69 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s36 -> s7 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s23 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s36 -> s36 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s36 -> s36 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s36 -> s96 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s36 -> s36 [label="pw_mv_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s36 -> s24 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s36 -> s36 [label="pw_mv_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s36 -> s36 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s36 -> s94 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s10 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s36 -> s66 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s36 -> s63 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s36 -> s25 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s36 -> s24 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s36 -> s36 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s36 -> s36 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s36 -> s46 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s37 -> s37 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s37 -> s37 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s37 -> s37 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s37 -> s37 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s37 -> s43 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s37 -> s58 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s37 -> s37 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s37 -> s37 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s37 -> s132 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s37 -> s44 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s37 -> s37 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s37 -> s104 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s37 -> s37 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s37 -> s37 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s37 -> s37 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s37 -> s37 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s37 -> s27 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s37 -> s116 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s37 -> s37 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s37 -> s119 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s37 -> s83 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s37 -> s23 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s37 -> s83 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s37 -> s69 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s37 -> s96 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s37 -> s37 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s37 -> s37 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s37 -> s37 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s37 -> s37 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s37 -> s34 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s37 -> s99 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s37 -> s37 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s37 -> s37 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s37 -> s85 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s37 -> s19 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s37 -> s3 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s38 -> s38 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s38 -> s38 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s38 -> s58 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s38 -> s27 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s38 -> s78 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s38 -> s96 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s38 -> s38 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s38 -> s88 [label="fp_off / pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s38 -> s38 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s38 -> s40 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s38 -> s38 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s38 -> s23 [label="fp_on / pw_mv_stop,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s38 -> s11 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s38 -> s173 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s38 -> s10 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s38 -> s64 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s38 -> s38 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s38 -> s38 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s38 -> s38 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s38 -> s38 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s38 -> s36 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s38 -> s8 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s38 -> s38 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s38 -> s3 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s38 -> s38 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s38 -> s38 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s38 -> s72 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s38 -> s38 [label="pw_mv_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s38 -> s38 [label="pw_mv_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s38 -> s38 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s38 -> s86 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s38 -> s38 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s38 -> s102 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s38 -> s38 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s38 -> s3 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s39 -> s39 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s39 -> s39 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s39 -> s39 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s39 -> s59 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s39 -> s163 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s39 -> s39 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s39 -> s177 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s39 -> s39 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s39 -> s39 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s39 -> s39 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s39 -> s39 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s39 -> s157 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s39 -> s39 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s39 -> s155 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s39 -> s82 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s39 -> s27 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s39 -> s24 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s39 -> s39 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s39 -> s39 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s39 -> s39 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s39 -> s39 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s39 -> s39 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s39 -> s3 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s40 -> s40 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s40 -> s40 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s40 -> s89 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s70 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s41 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s40 -> s47 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s26 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s29 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s40 -> s80 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s40 -> s40 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s40 -> s40 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s40 -> s10 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s28 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s40 -> s40 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s40 -> s40 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s40 -> s79 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s40 -> s47 [label="fp_on / pw_mv_stop,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s40 -> s40 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s40 -> s13 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s40 -> s41 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s40 -> s40 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s9 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s21 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s81 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s18 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s40 -> s67 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s40 -> s40 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s40 -> s13 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s40 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s40 -> s87 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s40 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s40 -> s0 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s40 -> s96 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s40 -> s84 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s40 -> s40 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s40 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s40 -> s21 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s40 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s65 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s40 -> s84 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s40 -> s28 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s40 -> s86 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s40 -> s23 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s40 -> s9 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s40 [label="pw_but_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s40 -> s72 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s40 -> s40 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s40 -> s36 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s87 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s73 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s40 -> s23 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s57 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s40 -> s40 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s40 -> s92 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s40 -> s26 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s70 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s65 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s40 -> s40 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s40 -> s12 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s40 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s40 -> s40 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s40 -> s44 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s40 -> s64 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s40 -> s40 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s40 -> s10 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s40 -> s40 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s41 -> s24 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s41 -> s41 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s41 -> s41 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s41 -> s1 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s41 -> s47 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s41 -> s41 [label="finger_detected / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s41 -> s41 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s41 -> s41 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s41 -> s19 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s45 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s41 -> s85 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s41 -> s41 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s41 -> s44 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s41 -> s41 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s181 [label="fp_on / pw_mv_stop,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s41 -> s66 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s41 -> s41 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s41 -> s25 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s41 -> s5 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s70 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s26 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s41 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s41 -> s40 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s41 -> s69 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s41 -> s85 [label="m_pw_msg / m_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s41 -> s41 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s41 -> s80 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s41 -> s0 [label="mpw_stop / pw_inactivated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s41 -> s4 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s41 -> s41 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s41 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s41 -> s57 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s41 -> s29 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s24 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s41 -> s41 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s41 -> s73 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s41 -> s23 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s41 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s41 -> s12 [label="pw_but_dn / 1,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s41 -> s12 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s41 -> s18 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s9 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s21 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s31 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s41 -> s147 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s41 -> s28 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s41 -> s12 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s9 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s41 -> s8 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s41 -> s41 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s41 -> s29 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s41 -> s26 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s80 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s73 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s29 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s60 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s41 -> s41 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s41 -> s63 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s41 -> s41 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s41 -> s45 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s41 -> s41 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s41 -> s70 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s41 -> s47 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s80 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s58 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s46 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s41 -> s41 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s41 -> s55 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s41 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s41 -> s5 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s41 -> s41 [label="release_pw_but / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s41 -> s23 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s42 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s42 -> s42 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s103 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s42 -> s94 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s42 -> s48 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s42 -> s42 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s42 -> s42 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s42 -> s42 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s42 -> s13 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s42 -> s5 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s42 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s42 -> s35 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s42 -> s42 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s42 -> s42 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s42 -> s46 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s8 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s42 -> s22 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s42 -> s58 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s42 -> s79 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s42 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s42 -> s42 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s42 -> s42 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s42 -> s53 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s42 -> s135 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s42 -> s42 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s42 -> s152 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s42 -> s11 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s42 -> s53 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s28 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s42 -> s1 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s42 -> s61 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s87 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s42 -> s42 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s42 -> s42 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s42 -> s42 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s42 -> s42 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s42 -> s58 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s42 -> s42 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s42 -> s80 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s42 -> s42 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s42 -> s52 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s42 -> s104 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s43 -> s43 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s43 -> s43 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s43 -> s43 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s43 -> s43 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s43 -> s43 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s43 -> s37 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s43 -> s43 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s43 -> s31 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s43 -> s48 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s43 -> s43 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s43 -> s43 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s43 -> s2 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s43 -> s113 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s43 -> s43 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s43 -> s1 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s43 -> s51 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s43 -> s43 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s43 -> s43 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s43 -> s43 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s43 -> s33 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s43 -> s130 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s44 -> s44 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s44 -> s44 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s44 -> s113 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s44 -> s44 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s44 -> s44 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s44 -> s1 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s44 -> s41 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s44 -> s21 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s44 -> s44 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s44 -> s44 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s44 -> s44 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s44 -> s98 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s44 -> s138 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s44 -> s5 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s44 -> s44 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s44 -> s80 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s44 -> s46 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s44 -> s44 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s44 -> s85 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s44 -> s37 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s44 -> s44 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s44 -> s66 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s44 -> s63 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s44 -> s29 [label="mpw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s44 -> s45 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s44 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s44 -> s29 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s44 -> s44 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s44 -> s44 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s44 -> s26 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s44 -> s80 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s30 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s44 -> s44 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s44 -> s69 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s44 -> s89 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s44 -> s31 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s44 -> s20 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s44 -> s23 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s44 -> s7 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s44 -> s9 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s13 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s44 -> s44 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s44 -> s73 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s87 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s44 -> s41 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s44 -> s44 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s44 -> s44 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s44 -> s44 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s44 -> s26 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s44 -> s44 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s44 -> s34 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s44 -> s47 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s44 -> s44 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s44 -> s5 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s44 -> s44 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s44 -> s85 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s29 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s44 -> s46 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s45 -> s16 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s45 -> s45 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s45 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s45 -> s124 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s45 -> s85 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s45 -> s45 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s21 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s41 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s45 -> s115 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s45 -> s92 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s45 -> s22 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s1 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s45 -> s45 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s45 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s45 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s45 -> s125 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s45 -> s45 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s5 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s22 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s86 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s45 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s45 -> s47 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s45 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s41 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s59 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s16 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s45 -> s45 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s126 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s45 -> s45 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s35 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s45 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s45 -> s45 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s15 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s45 -> s45 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s45 -> s18 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s8 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s7 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s45 -> s12 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s45 -> s71 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s87 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s45 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s45 -> s47 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s45 -> s45 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s45 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s45 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s45 -> s70 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s45 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s45 -> s45 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s45 -> s25 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s5 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s94 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s45 -> s41 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s46 -> s46 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s46 -> s117 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s46 -> s46 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s46 -> s46 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s46 -> s52 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s46 -> s46 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s46 -> s46 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s46 -> s109 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s46 -> s46 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s46 -> s79 [label="fp_on / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s46 -> s46 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s46 -> s86 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s46 -> s46 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s46 -> s42 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s46 -> s66 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s46 -> s6 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s46 -> s44 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s46 -> s46 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s46 -> s1 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s46 -> s61 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s46 -> s46 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s46 -> s63 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s46 -> s46 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s46 -> s46 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s46 -> s70 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s46 -> s46 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s46 -> s1 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s46 -> s106 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s46 -> s34 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s46 -> s46 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s46 -> s7 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s46 -> s81 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s46 -> s101 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s46 -> s10 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s46 -> s13 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s46 -> s38 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s46 -> s16 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s46 -> s14 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s46 -> s21 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s46 -> s96 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s46 -> s46 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s46 -> s46 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s46 -> s6 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s46 -> s36 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s46 -> s8 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s46 -> s96 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s46 -> s44 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s46 -> s46 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s46 -> s66 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s46 -> s46 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s46 -> s46 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s46 -> s30 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s46 -> s5 [label="receiveMsg / pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s46 -> s46 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s47 -> s47 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s47 -> s47 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s47 -> s29 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s0 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s47 -> s12 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s47 -> s47 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s47 -> s41 [label="finger_detected / fp_on [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s47 -> s53 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s47 -> s29 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s47 -> s80 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s47 -> s47 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s47 -> s47 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s47 -> s4 [label="fp_off / pw_mv_dn,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s47 -> s47 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s47 -> s47 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s47 -> s66 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s47 -> s64 [label="fp_on / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s47 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s47 -> s181 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s47 -> s45 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s47 -> s29 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s47 -> s24 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s47 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s47 -> s59 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s47 -> s64 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s47 -> s26 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s47 -> s47 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s47 -> s70 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s47 -> s26 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s47 -> s1 [label="mpw_stop / pw_inactivated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s47 -> s47 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s47 -> s63 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s47 -> s182 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s47 -> s26 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s47 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s47 -> s5 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s99 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s47 -> s75 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s47 -> s12 [label="pw_but_dn / fp_off,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s8 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s47 -> s88 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s47 -> s13 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s47 -> s21 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s47 -> s101 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s47 -> s12 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s47 -> s9 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s73 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s47 -> s47 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s47 -> s87 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s72 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s47 -> s57 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s47 -> s47 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s47 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s47 -> s29 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s57 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s47 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s47 -> s41 [label="pw_pos_dn / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s47 -> s47 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s47 -> s47 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s47 -> s85 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s6 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s47 -> s47 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s47 -> s52 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s47 -> s5 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s47 -> s47 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s48 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s48 -> s48 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s48 -> s132 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s48 -> s48 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s48 -> s48 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s48 -> s34 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s48 -> s9 [label="fp_off / pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s48 -> s48 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s48 -> s48 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s48 -> s48 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s48 -> s25 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s48 -> s43 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s48 -> s78 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s48 -> s48 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s48 -> s48 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s48 -> s48 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s48 -> s1 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s76 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s48 -> s109 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s48 -> s48 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s48 -> s10 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s48 -> s19 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s48 -> s152 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s48 -> s48 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s48 -> s48 [label="pw_mv_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s48 -> s48 [label="pw_mv_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s48 -> s48 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s48 -> s48 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s48 -> s56 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s48 -> s33 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s48 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s48 -> s79 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s49 -> s75 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s49 -> s49 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s49 -> s49 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s49 -> s123 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s49 -> s6 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s49 -> s1 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s49 -> s56 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s49 -> s19 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s49 -> s49 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s49 -> s49 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s49 -> s49 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s49 -> s89 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s49 -> s49 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s49 -> s49 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s49 -> s70 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s49 -> s114 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s49 -> s51 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s49 -> s102 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s49 -> s49 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s49 -> s93 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s49 -> s49 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s49 -> s13 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s49 -> s49 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s49 -> s94 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s49 -> s49 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s49 -> s49 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s49 -> s49 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s49 -> s49 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s49 -> s49 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s49 -> s49 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s49 -> s49 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s49 -> s49 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s49 -> s125 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s49 -> s19 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s49 -> s20 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s50 -> s50 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s50 -> s50 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s50 -> s80 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s50 -> s50 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s50 -> s83 [label="fp_off / pw_mv_dn,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s50 -> s50 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s50 -> s50 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s50 -> s50 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s50 -> s23 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s50 -> s94 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s50 -> s50 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s50 -> s50 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s50 -> s98 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s50 -> s50 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s50 -> s50 [label="pw_but_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s50 -> s50 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s50 -> s50 [label="pw_mv_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s50 -> s50 [label="pw_mv_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s50 -> s50 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s50 -> s50 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s50 -> s50 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s50 -> s20 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s51 -> s94 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s51 -> s51 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s51 -> s75 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s51 -> s51 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s51 -> s43 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s51 -> s33 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s51 -> s51 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s51 -> s51 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s51 -> s119 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s51 -> s51 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s51 -> s49 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s51 -> s120 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s51 -> s51 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s51 -> s51 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s51 -> s0 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s51 -> s11 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s51 -> s20 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s51 -> s51 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s51 -> s51 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s51 -> s51 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s51 -> s51 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s51 -> s51 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s51 -> s51 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s51 -> s121 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s52 -> s52 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s52 -> s52 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s52 -> s91 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s52 -> s70 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s52 -> s52 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s52 -> s52 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s52 -> s52 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s52 -> s141 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s52 -> s52 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s52 -> s55 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s46 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s52 -> s52 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s52 -> s102 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s52 -> s4 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s52 -> s30 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s58 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s52 -> s22 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s52 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s52 -> s5 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s52 -> s52 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s52 -> s52 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s52 -> s26 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s52 -> s9 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s52 -> s52 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s52 -> s19 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s52 -> s13 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s52 -> s83 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s52 -> s8 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s11 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s52 -> s52 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s52 -> s66 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s52 -> s76 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s52 -> s42 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s52 -> s47 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s52 -> s1 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s52 -> s52 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s52 -> s21 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s52 -> s52 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s52 -> s52 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s52 -> s81 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s52 -> s52 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s53 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s53 -> s53 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s53 -> s76 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s53 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s53 -> s42 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s53 -> s53 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s53 -> s53 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s41 [label="fp_off / pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s69 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s53 -> s104 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s53 -> s47 [label="fp_off / pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s53 -> s57 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s53 -> s80 [label="fp_on / pw_mv_stop,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s53 -> s53 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s53 -> s7 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s53 -> s53 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s53 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s53 -> s16 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s53 -> s27 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s53 -> s64 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s53 -> s109 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s86 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s53 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s53 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s42 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s53 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s53 -> s79 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s53 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s35 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s53 -> s85 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s53 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s53 -> s6 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s53 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s53 -> s5 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s64 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s15 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s74 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s53 -> s88 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s69 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s53 -> s36 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s53 -> s53 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s53 -> s46 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s53 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s35 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s86 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s53 -> s34 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s53 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s3 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s53 -> s53 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s53 -> s53 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s151 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s53 -> s53 [label="receiveMsg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s53 -> s64 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s53 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s54 -> s109 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s54 -> s44 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s54 -> s54 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s54 -> s54 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s54 -> s54 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s54 -> s54 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s54 -> s54 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s54 -> s124 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s54 -> s4 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s54 -> s127 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s54 -> s54 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s54 -> s89 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s54 -> s54 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s54 -> s130 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s54 -> s33 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s54 -> s115 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s54 -> s20 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s54 -> s54 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s54 -> s54 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s54 -> s54 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s54 -> s54 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s55 -> s55 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s55 -> s42 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s55 -> s55 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s55 -> s55 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s55 -> s52 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s55 -> s58 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s55 -> s55 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s55 -> s55 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s55 -> s55 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s55 -> s55 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s55 -> s5 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s55 -> s89 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s55 -> s45 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s55 -> s55 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s55 -> s55 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s55 -> s170 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s55 -> s4 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s55 -> s55 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s55 -> s81 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s55 -> s69 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s55 -> s55 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s55 -> s53 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s55 -> s55 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s55 -> s55 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s55 -> s55 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s56 -> s85 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s56 -> s34 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s56 -> s56 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s56 -> s56 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s56 -> s56 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s56 -> s56 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s56 -> s56 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s56 -> s142 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s56 -> s56 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s56 -> s130 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s56 -> s33 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s56 -> s56 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s56 -> s4 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s56 -> s127 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s56 -> s56 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s56 -> s128 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s56 -> s49 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s56 -> s56 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s56 -> s56 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s56 -> s56 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s56 -> s56 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s57 -> s57 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s57 -> s57 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s57 -> s60 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s57 -> s57 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s57 -> s87 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s57 -> s5 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s57 -> s36 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s57 -> s57 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s57 -> s57 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s57 -> s72 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s57 -> s90 [label="fp_on / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s57 -> s74 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s57 -> s16 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s57 -> s79 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s57 -> s80 [label="fp_on / pw_mv_stop,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s57 -> s25 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s57 -> s98 [label="fp_on / pw_mv_stop,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s57 -> s38 [label="fp_on / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s57 -> s64 [label="fp_on / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s57 -> s9 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s57 -> s84 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s57 -> s57 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s57 -> s73 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s57 -> s21 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s57 -> s72 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s57 -> s57 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s57 -> s29 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s57 -> s96 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s57 -> s57 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s57 -> s57 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s57 -> s36 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s57 -> s57 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s57 -> s41 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s57 -> s57 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s57 -> s96 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s57 -> s57 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s57 -> s160 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s57 -> s9 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s57 -> s40 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s57 -> s18 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s57 -> s71 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s57 -> s9 [label="pw_but_dn / fp_off,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s57 -> s88 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s57 -> s40 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s57 -> s21 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s57 -> s71 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s57 -> s71 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s57 -> s57 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s57 -> s57 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s57 -> s57 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s57 -> s87 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s57 -> s57 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s57 -> s73 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s57 -> s57 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s57 -> s24 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s57 -> s63 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s57 -> s92 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s57 -> s70 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s57 -> s22 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s57 -> s5 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s57 -> s57 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s57 -> s47 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s57 -> s73 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s57 -> s57 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s58 -> s58 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s58 -> s58 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s58 -> s58 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s58 -> s58 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s58 -> s58 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s37 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s58 -> s55 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s58 -> s58 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s42 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s58 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s58 -> s52 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s22 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s58 -> s58 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s58 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s58 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s58 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s58 -> s162 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s58 -> s27 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s58 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s58 -> s26 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s58 -> s11 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s58 -> s83 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s58 -> s16 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s38 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s57 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s58 -> s29 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s58 -> s87 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s58 -> s58 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s46 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s58 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s58 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s59 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s58 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s58 -> s58 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s58 -> s44 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s58 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s58 -> s80 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s58 -> s4 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s59 -> s59 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s59 -> s59 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s59 -> s59 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s59 -> s59 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s59 -> s59 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s59 -> s97 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s59 -> s59 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s59 -> s39 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s59 -> s21 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s59 -> s47 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s59 -> s59 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s59 -> s90 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s59 -> s59 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s59 -> s59 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s59 -> s59 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s59 -> s59 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s59 -> s146 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s59 -> s32 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s59 -> s59 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s59 -> s145 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s59 -> s15 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s59 -> s95 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s59 -> s86 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s59 -> s175 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s59 -> s73 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s59 -> s6 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s59 -> s59 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s59 -> s59 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s59 -> s59 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s59 -> s59 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s59 -> s105 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s59 -> s59 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s59 -> s26 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s59 -> s59 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s59 -> s4 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s60 -> s60 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s60 -> s60 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s60 -> s60 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s60 -> s87 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s60 -> s61 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s60 -> s60 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s60 -> s60 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s60 -> s36 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s60 -> s40 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s60 -> s90 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s60 -> s78 [label="fp_on / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s60 -> s21 [label="fp_on / pw_mv_stop,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s60 -> s169 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s60 -> s36 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s60 -> s60 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s60 -> s61 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s60 -> s60 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s60 -> s60 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s60 -> s60 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s60 -> s60 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s60 -> s64 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s60 -> s29 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s60 -> s60 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s60 -> s60 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s60 -> s87 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s60 -> s28 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s60 -> s68 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s60 -> s88 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s60 -> s92 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s60 -> s60 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s60 -> s60 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s60 -> s60 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s60 -> s60 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s60 -> s60 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s60 -> s85 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s60 -> s16 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s60 -> s92 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s60 -> s63 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s60 -> s60 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s60 -> s18 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s60 -> s61 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s61 -> s61 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s61 -> s61 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s61 -> s61 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s61 -> s96 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s36 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s61 -> s40 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s61 -> s61 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s61 -> s18 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s61 -> s61 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s61 -> s64 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s10 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s61 -> s27 [label="fp_on / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s61 -> s107 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s61 -> s47 [label="fp_on / pw_mv_stop,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s61 -> s34 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s61 -> s61 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s61 -> s35 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s61 -> s46 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s61 -> s60 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s61 -> s72 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s21 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s61 -> s61 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s61 -> s61 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s61 -> s61 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s61 -> s27 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s61 -> s61 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s61 -> s80 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s61 -> s61 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s61 -> s33 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s61 -> s61 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s61 -> s15 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s61 -> s7 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s61 -> s92 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s61 -> s69 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s61 -> s28 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s61 -> s7 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s61 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s61 -> s61 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s61 -> s60 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s61 -> s72 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s61 -> s67 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s61 -> s65 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s61 -> s61 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s61 -> s94 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s61 -> s138 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s61 -> s41 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s61 -> s22 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s61 -> s70 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s61 -> s61 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s61 -> s61 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s62 -> s62 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s62 -> s62 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s62 -> s90 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s62 -> s31 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s62 -> s62 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s62 -> s62 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s62 -> s110 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s62 -> s62 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s62 -> s16 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s62 -> s62 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s62 -> s62 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s62 -> s62 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s62 -> s62 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s62 -> s62 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s62 -> s62 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s63 -> s63 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s63 -> s63 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s63 -> s93 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s63 -> s63 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s63 -> s45 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s63 -> s42 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s63 -> s44 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s63 -> s5 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s63 -> s66 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s63 -> s159 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s63 -> s63 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s63 -> s63 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s63 -> s63 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s63 -> s63 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s63 -> s25 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s63 -> s87 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s63 -> s18 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s63 -> s63 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s63 -> s112 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s63 -> s22 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s63 -> s63 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s63 -> s12 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s63 -> s58 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s63 -> s30 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s63 -> s1 [label="mpw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s63 -> s63 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s63 -> s47 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s63 -> s153 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s63 -> s63 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s63 -> s69 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s63 -> s69 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s63 -> s88 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s63 -> s69 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s63 -> s71 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s63 -> s11 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s63 -> s55 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s63 -> s63 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s63 -> s63 [label="pw_mv_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s63 -> s85 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s63 -> s63 [label="pw_mv_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s63 -> s66 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s63 -> s177 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s63 -> s63 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s63 -> s63 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s63 -> s63 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s63 -> s41 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s63 -> s63 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s64 -> s64 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s64 -> s64 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s64 -> s0 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s64 -> s86 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s64 -> s109 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s64 -> s64 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s64 -> s31 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s64 -> s53 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s64 -> s27 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s64 -> s6 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s64 -> s12 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s64 -> s38 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s64 -> s23 [label="fp_off / pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s64 -> s18 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s64 -> s29 [label="fp_off / pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s64 -> s64 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s64 -> s9 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s64 -> s23 [label="fp_on / pw_mv_stop,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s64 -> s64 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s64 -> s24 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s64 -> s5 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s64 -> s64 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s64 -> s15 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s64 -> s47 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s64 -> s53 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s64 -> s38 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s64 -> s64 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s64 -> s64 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s64 -> s64 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s64 -> s15 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s64 -> s18 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s64 -> s64 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s64 -> s64 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s64 -> s60 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s64 -> s94 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s64 -> s64 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s64 -> s31 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s64 -> s8 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s64 -> s79 [label="pw_but_dn / fp_off,1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s64 -> s72 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s64 -> s64 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s64 -> s18 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s64 -> s64 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s64 -> s73 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s64 -> s53 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s64 -> s82 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s64 -> s90 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s64 -> s11 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s64 -> s64 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s64 -> s82 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s64 -> s64 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s64 -> s64 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s64 -> s64 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s65 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s65 -> s65 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s65 -> s48 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s65 -> s61 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s41 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s65 -> s24 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s65 -> s65 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s65 -> s45 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s65 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s65 -> s65 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s67 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s65 -> s98 [label="fp_on / pw_mv_stop,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s65 -> s74 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s65 -> s65 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s110 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s102 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s5 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s65 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s65 -> s36 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s65 -> s65 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s65 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s10 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s65 -> s15 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s65 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s65 -> s65 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s173 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s65 -> s65 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s65 -> s40 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s24 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s65 -> s65 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s174 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s65 -> s21 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s65 -> s88 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s65 -> s12 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s65 -> s7 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s71 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s147 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s65 -> s65 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s65 -> s65 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s65 -> s65 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s65 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s65 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s65 -> s94 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s22 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s65 -> s65 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s9 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s65 -> s65 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s65 -> s61 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s65 -> s40 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s22 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s66 -> s66 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s66 -> s7 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s66 -> s46 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s66 -> s0 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s66 -> s66 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s66 -> s44 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s66 -> s23 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s66 -> s66 [label="finger_detected / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s66 -> s104 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s66 -> s24 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s66 -> s22 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s66 -> s66 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s66 -> s47 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s66 -> s66 [label="fp_off / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s66 -> s24 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s66 -> s66 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s66 -> s167 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s66 -> s24 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s66 -> s63 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s66 -> s66 [label="fp_on / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s66 -> s66 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s66 -> s24 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s66 -> s94 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s66 -> s46 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s66 -> s41 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s66 -> s22 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s66 -> s18 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s66 -> s1 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s66 -> s66 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s66 -> s66 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s66 -> s46 [label="mpw_stop / pw_inactivated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s66 -> s8 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s66 -> s1 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s66 -> s105 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s66 -> s11 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s66 -> s66 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s66 -> s52 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s66 -> s66 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s66 -> s148 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s66 -> s24 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s66 -> s66 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s66 -> s9 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s66 -> s88 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s66 -> s101 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s66 -> s11 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s66 -> s66 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s66 -> s12 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s66 -> s40 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s66 -> s12 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s66 -> s9 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s66 -> s15 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s66 -> s173 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s66 -> s73 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s66 -> s66 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s66 -> s25 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s66 -> s66 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s66 -> s25 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s66 -> s22 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s66 -> s66 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s66 -> s66 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s66 -> s66 [label="pw_pos_up / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s66 -> s66 [label="receiveMsg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s66 -> s22 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s66 -> s63 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s66 -> s66 [label="release_pw_but / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s67 -> s67 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s67 -> s67 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s67 -> s29 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s67 -> s73 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s67 -> s67 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s67 -> s73 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s67 -> s67 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s67 -> s67 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s67 -> s16 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s67 -> s183 [label="fp_on / pw_mv_stop,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s67 -> s74 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s67 -> s90 [label="fp_on / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s67 -> s67 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s67 -> s96 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s67 -> s40 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s67 -> s67 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s67 -> s33 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s67 -> s67 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s67 -> s67 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s67 -> s67 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s67 -> s87 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s67 -> s35 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s67 -> s67 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s67 -> s5 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s67 -> s67 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s67 -> s68 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s67 -> s92 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s67 -> s71 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s67 -> s101 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s67 -> s67 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s67 -> s67 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s67 -> s67 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s67 -> s67 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s67 -> s67 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s67 -> s45 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s67 -> s48 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s67 -> s47 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s67 -> s102 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s67 -> s67 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s67 -> s18 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s67 -> s61 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s68 -> s68 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s68 -> s68 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s68 -> s179 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s68 -> s41 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s68 -> s75 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s68 -> s68 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s68 -> s68 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s68 -> s68 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s68 -> s68 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s68 -> s7 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s68 -> s100 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s68 -> s68 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s68 -> s81 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s68 -> s92 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s68 -> s68 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s68 -> s31 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s68 -> s152 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s68 -> s18 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s68 -> s5 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s68 -> s68 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s68 -> s68 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s68 -> s68 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s69 -> s69 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s69 -> s69 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s69 -> s9 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s69 -> s6 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s69 -> s69 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s69 -> s63 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s69 -> s53 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s69 -> s5 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s69 -> s69 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s69 -> s83 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s69 -> s69 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s69 -> s71 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s69 -> s69 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s69 -> s69 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s69 -> s13 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s69 -> s15 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s69 -> s41 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s69 -> s69 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s69 -> s88 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s69 -> s18 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s69 -> s69 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s69 -> s101 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s69 -> s69 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s69 -> s69 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s69 -> s69 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s69 -> s28 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s69 -> s106 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s69 -> s69 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s69 -> s83 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s69 -> s69 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s69 -> s69 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s69 -> s61 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s69 -> s84 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s69 -> s21 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s69 -> s96 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s69 -> s74 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s69 -> s7 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s69 -> s69 [label="pw_mv_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s69 -> s88 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s69 -> s69 [label="pw_mv_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s69 -> s69 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s69 -> s16 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s69 -> s7 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s69 -> s21 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s69 -> s15 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s69 -> s167 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s69 -> s69 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s69 -> s69 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s69 -> s69 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s69 -> s101 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s70 -> s70 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s70 -> s43 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s70 -> s103 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s70 -> s70 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s70 -> s5 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s70 -> s80 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s70 -> s26 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s70 -> s13 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s70 -> s70 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s70 -> s70 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s70 -> s80 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s70 -> s70 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s70 -> s105 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s70 -> s151 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s70 -> s25 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s70 -> s70 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s70 -> s70 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s70 -> s26 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s70 -> s70 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s70 -> s26 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s70 -> s21 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s70 -> s85 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s70 -> s49 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s70 -> s41 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s70 -> s70 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s70 -> s29 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s70 -> s6 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s70 -> s70 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s70 -> s65 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s70 -> s70 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s70 -> s70 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s70 -> s109 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s70 -> s21 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s70 -> s46 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s70 -> s70 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s70 -> s70 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s70 -> s26 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s70 -> s83 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s70 -> s40 [label="pw_but_dn / fp_off,1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s70 -> s17 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s70 -> s10 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s70 -> s15 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s70 -> s70 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s70 -> s72 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s70 -> s96 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s70 -> s87 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s70 -> s73 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s70 -> s57 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s70 -> s61 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s70 -> s70 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s70 -> s70 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s70 -> s42 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s70 -> s70 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s70 -> s70 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s70 -> s70 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s70 -> s1 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s70 -> s40 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s70 -> s6 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s70 -> s21 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s71 -> s71 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s71 -> s71 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s71 -> s25 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s71 -> s78 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s71 -> s80 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s71 -> s71 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s71 -> s104 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s71 -> s71 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s71 -> s15 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s71 -> s71 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s71 -> s88 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s71 -> s71 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s71 -> s69 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s71 -> s71 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s71 -> s83 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s71 -> s152 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s71 -> s71 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s71 -> s71 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s71 -> s13 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s71 -> s71 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s71 -> s71 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s71 -> s7 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s71 -> s71 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s71 -> s79 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s71 -> s71 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s71 -> s13 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s71 -> s71 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s71 -> s21 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s71 -> s71 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s71 -> s71 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s71 -> s18 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s71 -> s24 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s71 -> s18 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s71 -> s57 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s71 -> s100 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s71 -> s71 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s71 -> s28 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s71 -> s71 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s71 -> s101 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s71 -> s71 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s71 -> s13 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s71 -> s11 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s71 -> s156 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s71 -> s7 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s71 -> s71 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s71 -> s71 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s71 -> s23 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s71 -> s28 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s71 -> s71 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s72 -> s72 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s72 -> s72 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s72 -> s96 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s72 -> s36 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s72 -> s73 [label="finger_detected / fp_on [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s72 -> s46 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s72 -> s5 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s72 -> s57 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s72 -> s72 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s72 -> s72 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s72 -> s60 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s72 -> s3 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s72 -> s72 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s72 -> s87 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s72 -> s74 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s72 -> s72 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s72 -> s79 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s72 -> s15 [label="fp_on / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s72 -> s74 [label="fp_on / pw_mv_stop,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s72 -> s40 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s72 -> s31 [label="fp_on / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s72 -> s72 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s72 -> s64 [label="fp_on / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s72 -> s6 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s72 -> s38 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s72 -> s57 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s72 -> s61 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s72 -> s74 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s72 -> s72 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s72 -> s73 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s72 -> s72 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s72 -> s87 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s72 -> s72 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s72 -> s72 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s72 -> s72 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s72 -> s92 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s72 -> s23 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s72 -> s87 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s72 -> s72 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s72 -> s101 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s72 -> s12 [label="pw_but_dn / fp_off,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s72 -> s21 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s72 -> s7 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s72 -> s12 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s72 -> s13 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s72 -> s23 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s72 -> s38 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s72 -> s72 [label="pw_but_up / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s72 -> s72 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s72 -> s64 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s72 -> s84 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s72 -> s84 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s72 -> s72 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s72 -> s72 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s72 -> s87 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s72 -> s72 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s72 -> s66 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s72 -> s47 [label="pw_pos_up / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s72 -> s72 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s72 -> s23 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s72 -> s45 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s72 -> s18 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s72 -> s65 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s72 -> s72 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s72 -> s61 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s72 -> s72 [label="release_pw_but / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s72 -> s87 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s73 -> s73 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s73 -> s73 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s73 -> s29 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s73 -> s61 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s73 -> s73 [label="finger_detected / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s73 -> s72 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s73 -> s73 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s73 -> s57 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s73 -> s73 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s73 -> s53 [label="fp_on / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s73 -> s98 [label="fp_on / pw_mv_stop,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s73 -> s183 [label="fp_on / pw_mv_stop,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s73 -> s3 [label="fp_on / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s73 -> s98 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s73 -> s42 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s73 -> s79 [label="fp_on / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s73 -> s64 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s73 -> s34 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s73 -> s15 [label="fp_on / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s73 -> s72 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s73 -> s73 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s73 -> s87 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s73 -> s87 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s73 -> s73 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s73 -> s84 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s73 -> s57 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s73 -> s73 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s73 -> s73 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s73 -> s73 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s73 -> s87 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s73 -> s41 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s73 -> s73 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s73 -> s28 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s73 -> s101 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s73 -> s12 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s73 -> s75 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s73 -> s7 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s73 -> s13 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s73 -> s69 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s73 -> s12 [label="pw_but_dn / 1,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s73 -> s23 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s73 -> s9 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s73 -> s73 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s73 -> s73 [label="pw_but_up / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s73 -> s57 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s73 -> s73 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s73 -> s24 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s73 -> s73 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s73 -> s73 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s73 -> s47 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s73 -> s66 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s73 -> s44 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s73 -> s41 [label="pw_pos_up / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s73 -> s40 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s73 -> s34 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s73 -> s73 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s73 -> s87 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s73 -> s73 [label="release_pw_but / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s73 -> s57 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s74 -> s74 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s74 -> s74 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s74 -> s74 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s74 -> s55 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s74 -> s98 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s74 -> s34 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s74 -> s66 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s74 -> s12 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s74 -> s160 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s74 -> s69 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s74 -> s41 [label="fp_off / pw_mv_dn,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s74 -> s101 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s74 -> s74 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s74 -> s74 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s74 -> s74 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s74 -> s9 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s74 -> s74 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s74 -> s11 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s74 -> s72 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s74 -> s74 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s74 -> s74 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s74 -> s74 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s74 -> s74 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s74 -> s81 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s74 -> s92 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s74 -> s74 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s74 -> s11 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s74 -> s74 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s74 -> s98 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s74 -> s69 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s74 -> s87 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s74 -> s74 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s74 -> s24 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s74 -> s74 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s74 -> s74 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s74 -> s74 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s74 -> s74 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s74 -> s74 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s74 -> s10 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s74 -> s5 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s75 -> s75 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s75 -> s75 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s75 -> s10 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s75 -> s19 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s75 -> s65 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s75 -> s85 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s75 -> s175 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s75 -> s75 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s75 -> s75 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s75 -> s75 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s75 -> s68 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s75 -> s75 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s75 -> s94 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s75 -> s12 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s75 -> s75 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s75 -> s147 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s75 -> s47 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s75 -> s22 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s75 -> s75 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s75 -> s31 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s75 -> s145 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s75 -> s12 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s75 -> s75 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s75 -> s174 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s75 -> s75 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s75 -> s75 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s75 -> s75 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s76 -> s76 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s76 -> s9 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s76 -> s76 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s76 -> s76 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s76 -> s127 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s76 -> s76 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s76 -> s76 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s76 -> s8 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s76 -> s125 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s76 -> s76 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s76 -> s76 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s76 -> s2 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s76 -> s115 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s76 -> s41 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s76 -> s76 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s76 -> s103 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s76 -> s129 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s76 -> s76 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s76 -> s128 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s76 -> s48 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s76 -> s12 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s76 -> s76 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s76 -> s76 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s76 -> s76 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s76 -> s76 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s76 -> s76 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s76 -> s76 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s76 -> s4 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s76 -> s76 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s76 -> s52 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s77 -> s77 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s77 -> s77 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s77 -> s77 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s77 -> s77 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s77 -> s14 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s77 -> s77 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s77 -> s77 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s77 -> s131 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s77 -> s103 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s77 -> s77 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s77 -> s77 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s77 -> s2 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s77 -> s116 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s77 -> s77 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s77 -> s118 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s77 -> s14 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s77 -> s77 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s77 -> s77 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s77 -> s77 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s77 -> s89 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s77 -> s137 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s78 -> s78 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s78 -> s78 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s78 -> s78 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s78 -> s90 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s78 -> s85 [label="fp_off / pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s78 -> s58 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s78 -> s78 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s78 -> s78 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s78 -> s97 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s78 -> s48 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s78 -> s78 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s78 -> s78 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s78 -> s78 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s78 -> s78 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s78 -> s2 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s78 -> s30 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s78 -> s78 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s78 -> s38 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s78 -> s71 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s78 -> s108 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s78 -> s172 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s78 -> s78 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s78 -> s78 [label="pw_mv_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s78 -> s78 [label="pw_mv_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s78 -> s171 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s78 -> s78 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s78 -> s78 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s78 -> s78 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s78 -> s27 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s79 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s79 -> s79 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s79 -> s79 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s64 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s79 -> s2 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s79 -> s90 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s79 -> s30 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s5 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s79 -> s9 [label="fp_off / pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s79 -> s20 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s79 -> s80 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s79 -> s8 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s19 [label="fp_off / pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s29 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s79 -> s45 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s79 -> s12 [label="fp_off / pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s79 -> s21 [label="fp_off / pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s79 -> s79 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s79 -> s79 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s16 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s79 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s15 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s79 -> s28 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s79 -> s42 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s79 -> s79 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s79 -> s27 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s6 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s79 -> s79 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s79 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s79 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s79 -> s108 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s101 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s79 -> s53 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s79 -> s79 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s79 -> s110 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s79 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s79 -> s71 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s79 -> s31 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s79 [label="pw_but_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s79 -> s16 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s79 -> s15 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s79 -> s79 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s92 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s79 -> s48 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s79 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s79 -> s97 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s79 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s79 -> s144 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s79 -> s79 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s79 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s79 -> s79 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s79 -> s8 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s79 -> s30 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s79 -> s79 [label="release_pw_but / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s18 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s80 -> s80 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s80 -> s80 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s80 -> s80 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s80 -> s159 [label="fp_off / pw_mv_dn,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s80 -> s80 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s80 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s80 -> s80 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s80 -> s80 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s79 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s80 -> s30 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s70 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s80 -> s47 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s80 -> s22 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s80 -> s30 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s80 -> s80 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s80 -> s29 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s44 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s80 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s182 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s80 -> s80 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s80 -> s25 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s80 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s1 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s80 -> s80 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s80 -> s6 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s44 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s80 -> s80 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s181 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s80 -> s61 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s85 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s80 -> s80 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s80 -> s18 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s80 -> s50 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s80 -> s69 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s80 -> s70 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s80 -> s40 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s80 -> s15 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s80 -> s23 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s18 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s80 -> s86 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s80 -> s47 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s80 -> s80 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s80 -> s72 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s80 -> s87 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s80 -> s80 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s58 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s80 -> s13 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s80 -> s80 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s6 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s80 -> s80 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s80 -> s109 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s80 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s80 -> s76 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s80 -> s80 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s80 -> s80 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s80 -> s6 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s80 -> s81 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s81 -> s63 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s81 -> s81 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s81 -> s81 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s81 -> s46 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s81 -> s81 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s81 -> s170 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s81 -> s55 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s81 -> s147 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s81 -> s8 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s81 -> s81 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s81 -> s19 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s81 -> s81 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s81 -> s81 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s81 -> s81 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s81 -> s92 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s81 -> s10 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s81 -> s29 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s81 -> s40 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s81 -> s94 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s81 -> s66 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s81 -> s63 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s81 -> s81 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s81 -> s74 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s81 -> s81 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s81 -> s81 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s81 -> s13 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s81 -> s68 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s81 -> s81 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s81 -> s20 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s81 -> s28 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s81 -> s81 [label="pw_but_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s81 -> s81 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s81 -> s169 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s81 -> s20 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s81 -> s80 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s81 -> s6 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s81 -> s89 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s81 -> s81 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s81 -> s81 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s81 -> s81 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s81 -> s81 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s82 -> s82 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s82 -> s82 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s82 -> s118 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s82 -> s39 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s82 -> s143 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s82 -> s99 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s82 -> s30 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s82 -> s82 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s82 -> s95 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s82 -> s102 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s82 -> s82 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s82 -> s82 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s82 -> s7 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s82 -> s141 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s82 -> s111 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s82 -> s82 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s82 -> s82 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s82 -> s82 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s82 -> s82 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s82 -> s16 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s82 -> s9 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s82 -> s82 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s82 -> s82 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s82 -> s101 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s82 -> s65 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s82 -> s82 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s82 -> s57 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s82 -> s82 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s82 -> s82 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s82 -> s82 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s82 -> s82 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s82 -> s82 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s82 -> s21 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s82 -> s64 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s83 -> s83 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s83 -> s83 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s83 -> s159 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s83 -> s37 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s83 -> s83 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s83 -> s83 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s83 -> s83 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s83 -> s69 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s83 -> s83 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s83 -> s31 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s83 -> s6 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s83 -> s83 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s83 -> s71 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s83 -> s83 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s83 -> s83 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s83 -> s83 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s83 -> s7 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s83 -> s8 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s83 -> s83 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s83 -> s83 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s83 -> s83 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s83 -> s87 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s83 -> s160 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s83 -> s7 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s83 -> s83 [label="pw_mv_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s83 -> s83 [label="pw_mv_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s83 -> s74 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s83 -> s82 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s83 -> s66 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s83 -> s83 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s83 -> s83 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s83 -> s101 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s84 -> s84 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s84 -> s84 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s84 -> s36 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s84 -> s84 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s84 -> s6 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s84 -> s84 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s84 -> s84 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s84 -> s99 [label="fp_on / pw_mv_stop,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s84 -> s10 [label="fp_on / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s84 -> s108 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s84 -> s87 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s84 -> s84 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s84 -> s73 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s84 -> s57 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s84 -> s84 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s84 -> s84 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s84 -> s84 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s84 -> s84 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s84 -> s40 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s84 -> s40 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s84 -> s84 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s84 -> s72 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s84 -> s69 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s84 -> s12 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s84 -> s84 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s84 -> s84 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s84 -> s84 [label="pw_mv_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s84 -> s84 [label="pw_mv_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s84 -> s84 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s84 -> s94 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s84 -> s18 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s84 -> s30 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s84 -> s84 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s84 -> s72 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s85 -> s85 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s85 -> s25 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s85 -> s85 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s85 -> s48 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s85 -> s85 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s85 -> s41 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s85 -> s130 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s85 -> s85 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s85 -> s85 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s85 -> s85 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s85 -> s9 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s85 -> s85 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s85 -> s142 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s85 -> s44 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s85 -> s85 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s85 -> s70 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s85 -> s85 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s85 -> s79 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s85 -> s85 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s85 -> s5 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s85 -> s3 [label="mpw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s85 -> s85 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s85 -> s53 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s85 -> s124 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s85 -> s80 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s85 -> s85 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s85 -> s15 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s85 -> s7 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s85 -> s18 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s85 -> s31 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s85 -> s88 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s85 -> s12 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s85 -> s60 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s85 -> s85 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s85 -> s72 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s85 -> s85 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s85 -> s44 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s85 -> s24 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s85 -> s85 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s85 -> s30 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s85 -> s85 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s85 -> s85 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s85 -> s85 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s85 -> s85 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s85 -> s99 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s85 -> s63 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s86 -> s86 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s86 -> s86 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s86 -> s106 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s86 -> s86 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s86 -> s59 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s86 -> s86 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s86 -> s46 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s86 -> s112 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s86 -> s86 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s86 -> s86 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s86 -> s86 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s86 -> s92 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s86 -> s45 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s86 -> s35 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s86 -> s53 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s86 -> s147 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s86 -> s86 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s86 -> s86 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s86 -> s86 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s86 -> s86 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s86 -> s3 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s86 -> s9 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s86 -> s86 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s86 -> s86 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s86 -> s12 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s86 -> s64 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s86 -> s88 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s86 -> s20 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s86 -> s86 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s86 -> s23 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s86 -> s40 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s86 -> s24 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s86 -> s61 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s86 -> s36 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s86 -> s44 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s86 -> s84 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s86 -> s30 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s86 -> s86 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s86 -> s95 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s86 -> s86 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s86 -> s86 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s86 -> s39 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s86 -> s86 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s86 -> s86 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s86 -> s86 [label="release_pw_but / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s86 -> s53 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s87 -> s87 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s87 -> s87 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s87 -> s47 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s87 -> s25 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s87 -> s96 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s87 -> s87 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s87 -> s57 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s87 -> s33 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s87 -> s165 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s87 -> s73 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s87 -> s18 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s87 -> s87 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s87 -> s87 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s87 -> s53 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s87 -> s29 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s87 -> s176 [label="fp_on / pw_mv_stop,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s87 -> s98 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s87 -> s15 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s87 -> s18 [label="fp_on / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s87 -> s91 [label="fp_on / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s87 -> s74 [label="fp_on / pw_mv_stop,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s87 -> s87 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s87 -> s79 [label="fp_on / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s87 -> s73 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s87 -> s72 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s87 -> s63 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s87 -> s18 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s87 -> s87 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s87 -> s24 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s87 -> s73 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s87 -> s84 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s87 -> s87 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s87 -> s87 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s87 -> s87 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s87 -> s3 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s87 -> s73 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s87 -> s87 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s87 -> s87 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s87 -> s67 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s87 -> s60 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s87 -> s72 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s87 -> s87 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s87 -> s83 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s87 -> s40 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s87 -> s74 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s87 -> s40 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s87 -> s71 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s87 -> s9 [label="pw_but_dn / 1,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s87 -> s100 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s87 -> s13 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s87 -> s28 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s87 -> s9 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s87 -> s12 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s87 -> s18 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s87 -> s87 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s87 -> s87 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s87 -> s87 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s87 -> s73 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s87 -> s87 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s87 -> s72 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s87 -> s87 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s87 -> s87 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s87 -> s22 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s87 -> s8 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s87 -> s63 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s87 -> s102 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s87 -> s85 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s87 -> s24 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s87 -> s41 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s87 -> s87 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s87 -> s72 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s87 -> s87 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s87 -> s57 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s88 -> s88 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s88 -> s88 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s88 -> s85 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s88 -> s26 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s88 -> s90 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s88 -> s86 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s88 -> s88 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s88 -> s101 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s88 -> s88 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s88 -> s71 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s88 -> s88 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s88 -> s88 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s88 -> s88 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s88 -> s145 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s88 -> s69 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s88 -> s8 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s88 -> s88 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s88 -> s88 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s88 -> s88 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s88 -> s88 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s88 -> s11 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s88 -> s88 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s88 -> s20 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s88 -> s31 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s88 -> s88 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s88 -> s88 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s88 -> s88 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s88 -> s92 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s88 -> s12 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s88 -> s65 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s88 -> s57 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s88 -> s88 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s88 -> s88 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s88 -> s82 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s88 -> s35 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s88 -> s150 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s88 -> s88 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s88 -> s88 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s88 -> s69 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s88 -> s28 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s89 -> s29 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s89 -> s22 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s89 -> s89 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s89 -> s89 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s89 -> s44 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s89 -> s89 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s89 -> s89 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s89 -> s49 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s89 -> s30 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s89 -> s137 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s89 -> s89 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s89 -> s89 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s89 -> s55 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s89 -> s139 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s89 -> s89 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s89 -> s22 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s89 -> s47 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s89 -> s89 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s89 -> s89 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s89 -> s54 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s89 -> s89 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s89 -> s122 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s89 -> s10 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s89 -> s89 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s89 -> s40 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s89 -> s89 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s89 -> s89 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s89 -> s89 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s89 -> s89 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s89 -> s89 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s89 -> s89 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s89 -> s81 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s90 -> s90 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s90 -> s90 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s90 -> s90 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s90 -> s71 [label="fp_off / pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s90 -> s90 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s90 -> s104 [label="fp_off / pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s90 -> s44 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s90 -> s90 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s90 -> s78 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s90 -> s97 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s90 -> s59 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s90 -> s90 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s90 -> s90 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s90 -> s107 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s90 -> s90 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s90 -> s90 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s90 -> s90 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s90 -> s4 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s90 -> s15 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s90 -> s90 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s90 -> s62 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s90 -> s12 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s90 -> s79 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s90 -> s88 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s90 -> s90 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s90 -> s166 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s90 -> s90 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s90 -> s90 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s90 -> s90 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s90 -> s164 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s90 -> s90 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s90 -> s90 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s90 -> s27 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s90 -> s64 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s91 -> s91 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s91 -> s91 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s91 -> s97 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s91 -> s103 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s91 -> s91 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s91 -> s11 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s91 -> s83 [label="fp_off / pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s91 -> s93 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s91 -> s91 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s91 -> s91 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s91 -> s108 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s91 -> s12 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s91 -> s91 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s91 -> s91 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s91 -> s91 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s91 -> s19 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s91 -> s16 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s91 -> s91 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s91 -> s91 [label="pw_but_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s91 -> s91 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s91 -> s91 [label="pw_mv_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s91 -> s91 [label="pw_mv_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s91 -> s91 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s91 -> s91 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s91 -> s129 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s91 -> s91 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s91 -> s31 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s92 -> s92 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s92 -> s92 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s92 -> s41 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s92 -> s158 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s92 -> s24 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s92 -> s63 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s92 -> s86 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s92 -> s92 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s92 -> s92 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s92 -> s92 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s92 -> s92 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s92 -> s45 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s92 -> s81 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s92 -> s92 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s92 -> s94 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s92 -> s23 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s92 -> s92 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s92 -> s92 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s92 -> s16 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s92 -> s15 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s92 -> s72 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s92 -> s74 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s92 -> s92 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s92 -> s100 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s92 -> s68 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s92 -> s88 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s92 -> s28 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s92 -> s79 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s92 -> s92 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s92 -> s67 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s92 -> s60 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s92 -> s92 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s92 -> s92 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s92 -> s92 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s92 -> s92 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s92 -> s92 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s92 -> s40 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s92 -> s100 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s93 -> s93 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s93 -> s93 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s93 -> s103 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s93 -> s131 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s93 -> s91 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s93 -> s93 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s93 -> s93 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s93 -> s93 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s93 -> s93 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s93 -> s14 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s93 -> s118 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s93 -> s93 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s93 -> s49 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s93 -> s12 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s93 -> s93 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s93 -> s93 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s93 -> s93 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s93 -> s93 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s93 -> s93 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s93 -> s81 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s93 -> s136 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s94 -> s94 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s94 -> s1 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s94 -> s14 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s94 -> s94 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s94 -> s70 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s94 -> s47 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s94 -> s63 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s94 -> s25 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s94 -> s66 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s94 -> s132 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s94 -> s94 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s94 -> s120 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s94 -> s100 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s94 -> s94 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s94 -> s94 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s94 -> s94 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s94 -> s75 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s94 -> s94 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s94 -> s92 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s94 -> s66 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s94 -> s119 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s94 -> s94 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s94 -> s1 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s94 -> s9 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s94 -> s94 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s94 -> s94 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s94 -> s49 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s94 -> s22 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s94 -> s64 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s94 -> s94 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s94 -> s69 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s94 -> s9 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s94 -> s83 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s94 -> s94 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s94 -> s94 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s94 -> s45 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s94 -> s94 [label="pw_mv_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s94 -> s94 [label="pw_mv_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s94 -> s22 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s94 -> s94 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s94 -> s94 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s94 -> s94 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s94 -> s134 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s94 -> s94 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s94 -> s18 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s95 -> s95 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s95 -> s95 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s95 -> s32 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s95 -> s95 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s95 -> s59 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s95 -> s95 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s95 -> s95 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s95 -> s95 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s95 -> s144 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s95 -> s82 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s95 -> s148 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s95 -> s34 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s95 -> s95 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s95 -> s95 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s95 -> s95 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s95 -> s1 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s95 -> s95 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s95 -> s150 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s95 -> s95 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s95 -> s11 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s95 -> s36 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s95 -> s67 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s95 -> s95 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s95 -> s95 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s95 -> s95 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s95 -> s95 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s95 -> s95 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s95 -> s13 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s95 -> s86 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s96 -> s96 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s96 -> s96 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s96 -> s72 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s96 -> s96 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s96 -> s21 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s96 -> s96 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s96 -> s96 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s96 -> s87 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s96 -> s97 [label="fp_on / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s96 -> s74 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s96 -> s29 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s96 -> s31 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s96 -> s182 [label="fp_on / pw_mv_stop,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s96 -> s57 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s96 -> s36 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s96 -> s96 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s96 -> s36 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s96 -> s96 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s96 -> s67 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s96 -> s96 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s96 -> s96 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s96 -> s96 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s96 -> s40 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s96 -> s57 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s96 -> s96 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s96 -> s13 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s96 -> s83 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s96 -> s69 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s96 -> s7 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s96 -> s7 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s96 -> s3 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s96 -> s96 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s96 -> s96 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s96 -> s96 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s96 -> s96 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s96 -> s96 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s96 -> s75 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s96 -> s22 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s96 -> s47 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s96 -> s85 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s96 -> s29 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s96 -> s18 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s96 -> s96 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s96 -> s36 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s96 -> s46 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s97 -> s97 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s97 -> s97 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s97 -> s97 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s97 -> s37 [label="fp_off / pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s97 -> s59 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s97 -> s52 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s97 -> s97 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s97 -> s97 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s97 -> s97 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s97 -> s78 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s97 -> s90 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s97 -> s97 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s97 -> s97 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s97 -> s97 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s97 -> s15 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s97 -> s153 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s97 -> s97 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s97 -> s91 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s97 -> s152 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s97 -> s97 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s97 -> s179 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s97 -> s97 [label="pw_mv_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s97 -> s97 [label="pw_mv_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s97 -> s97 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s97 -> s178 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s97 -> s97 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s97 -> s97 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s97 -> s79 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s98 -> s98 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s98 -> s98 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s98 -> s98 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s98 -> s74 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s98 -> s181 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s98 -> s9 [label="fp_off / pw_mv_dn,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s98 -> s41 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s98 -> s7 [label="fp_off / pw_mv_dn,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s98 -> s6 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s98 -> s98 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s98 -> s34 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s98 -> s98 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s98 -> s21 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s98 -> s98 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s98 -> s98 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s98 -> s98 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s98 -> s50 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s98 -> s98 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s98 -> s180 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s98 -> s74 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s98 -> s98 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s98 -> s98 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s98 -> s98 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s98 -> s98 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s98 -> s98 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s99 -> s99 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s99 -> s99 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s99 -> s99 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s99 -> s90 [label="fp_off / pw_mv_dn,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s99 -> s99 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s99 -> s99 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s99 -> s99 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s99 -> s183 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s99 -> s34 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s99 -> s19 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s99 -> s99 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s99 -> s99 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s99 -> s99 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s99 -> s99 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s99 -> s47 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s99 -> s32 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s99 -> s99 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s99 -> s82 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s99 -> s176 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s99 -> s28 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s99 -> s99 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s99 -> s61 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s99 -> s85 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s99 -> s104 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s99 -> s99 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s99 -> s86 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s99 -> s99 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s99 -> s99 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s99 -> s99 [label="release_pw_but / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s100 -> s100 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s100 -> s100 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s100 -> s5 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s100 -> s172 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s100 -> s12 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s100 -> s100 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s100 -> s100 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s100 -> s94 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s100 -> s68 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s100 -> s100 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s100 -> s100 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s100 -> s0 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s100 -> s100 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s100 -> s92 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s100 -> s100 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s100 -> s71 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s100 -> s87 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s100 -> s100 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s100 -> s92 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s100 -> s102 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s100 -> s100 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s100 -> s100 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s100 -> s100 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s100 -> s100 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s101 -> s101 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s101 -> s101 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s101 -> s19 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s101 -> s112 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s101 -> s6 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s101 -> s101 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s101 -> s101 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s101 -> s101 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s101 -> s88 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s101 -> s101 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s101 -> s69 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s101 -> s101 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s101 -> s101 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s101 -> s28 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s101 -> s101 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s101 -> s101 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s101 -> s101 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s101 -> s79 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s101 -> s101 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s101 -> s101 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s101 -> s101 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s101 -> s72 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s101 -> s72 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s101 -> s67 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s101 -> s101 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s101 -> s69 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s101 -> s101 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s101 -> s83 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s101 -> s5 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s101 -> s155 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s101 -> s95 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s101 -> s101 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s101 -> s101 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s101 -> s71 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s101 -> s101 [label="release_pw_but / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s102 -> s102 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s102 -> s108 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s102 -> s22 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s102 -> s29 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s102 -> s47 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s102 -> s102 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s102 -> s102 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s102 -> s102 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s102 -> s22 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s102 -> s82 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s102 -> s102 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s102 -> s52 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s102 -> s65 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s102 -> s102 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s102 -> s102 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s102 -> s8 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s102 -> s17 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s102 -> s102 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s102 -> s10 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s102 -> s102 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s102 -> s101 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s102 -> s83 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s102 -> s6 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s102 -> s102 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s102 -> s102 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s102 -> s102 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s102 -> s102 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s102 -> s102 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s102 -> s102 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s102 -> s100 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s102 -> s18 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s103 -> s103 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s103 -> s103 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s103 -> s103 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s103 -> s103 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s103 -> s103 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s103 -> s103 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s103 -> s131 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s103 -> s103 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s103 -> s77 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s103 -> s14 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s103 -> s103 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s103 -> s76 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s103 -> s117 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s103 -> s103 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s103 -> s93 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s103 -> s91 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s103 -> s103 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s103 -> s103 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s103 -> s103 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s103 -> s139 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s103 -> s55 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s104 -> s104 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s104 -> s104 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s104 -> s104 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s104 -> s104 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s104 -> s104 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s104 -> s104 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s104 -> s53 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s104 -> s177 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s104 -> s104 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s104 -> s37 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s104 -> s104 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s104 -> s163 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s104 -> s104 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s104 -> s104 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s104 -> s104 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s104 -> s161 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s104 -> s104 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s104 -> s71 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s104 -> s66 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s104 -> s57 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s104 -> s67 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s104 -> s104 [label="pw_mv_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s104 -> s42 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s104 -> s104 [label="pw_mv_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s104 -> s112 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s104 -> s95 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s104 -> s4 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s104 -> s104 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s104 -> s104 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s104 -> s104 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s104 -> s104 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s104 -> s99 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s105 -> s105 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s105 -> s105 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s105 -> s105 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s105 -> s105 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s105 -> s70 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s105 -> s178 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s105 -> s105 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s105 -> s105 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s105 -> s164 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s105 -> s105 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s105 -> s105 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s105 -> s105 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s105 -> s161 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s105 -> s105 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s105 -> s26 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s105 -> s73 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s105 -> s105 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s105 -> s105 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s105 -> s105 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s105 -> s105 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s105 -> s105 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s105 -> s44 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s105 -> s105 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s105 -> s30 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s106 -> s106 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s106 -> s106 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s106 -> s106 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s106 -> s106 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s106 -> s106 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s106 -> s106 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s106 -> s158 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s106 -> s24 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s106 -> s162 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s106 -> s106 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s106 -> s22 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s106 -> s46 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s106 -> s106 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s106 -> s69 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s106 -> s166 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s106 -> s8 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s106 -> s20 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s106 -> s40 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s106 -> s80 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s106 -> s106 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s106 -> s106 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s106 -> s106 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s107 -> s107 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s107 -> s107 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s107 -> s107 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s107 -> s37 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s107 -> s107 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s107 -> s90 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s107 -> s107 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s107 -> s107 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s107 -> s30 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s107 -> s107 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s107 -> s110 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s107 -> s107 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s107 -> s107 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s107 -> s107 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s107 -> s107 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s108 -> s108 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s108 -> s108 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s108 -> s14 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s108 -> s78 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s108 -> s38 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s108 -> s108 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s108 -> s118 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s108 -> s108 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s108 -> s91 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s108 -> s108 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s108 -> s108 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s108 -> s0 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s108 -> s79 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s108 -> s108 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s108 -> s108 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s108 -> s108 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s108 -> s108 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s108 -> s108 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s108 -> s108 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s108 -> s122 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s109 -> s109 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s109 -> s123 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s109 -> s2 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s109 -> s109 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s109 -> s46 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s109 -> s109 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s109 -> s109 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s109 -> s109 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s109 -> s53 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s109 -> s109 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s109 -> s109 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s109 -> s138 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s109 -> s151 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s109 -> s22 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s109 -> s109 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s109 -> s70 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s109 -> s48 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s109 -> s8 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s109 -> s28 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s109 -> s109 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s109 -> s109 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s109 -> s109 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s109 -> s109 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s110 -> s110 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s110 -> s110 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s110 -> s107 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s110 -> s83 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s110 -> s110 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s110 -> s62 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s110 -> s110 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s110 -> s110 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s110 -> s79 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s110 -> s110 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s110 -> s110 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s110 -> s110 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s110 -> s110 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s110 -> s110 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s110 -> s110 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s111 -> s111 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s111 -> s111 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s111 -> s34 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s111 -> s178 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s111 -> s111 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s111 -> s26 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s111 -> s111 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s111 -> s111 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s111 -> s111 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s111 -> s82 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s111 -> s156 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s111 -> s111 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s111 -> s35 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s111 -> s154 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s111 -> s111 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s111 -> s111 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s111 -> s18 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s111 -> s5 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s111 -> s111 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s111 -> s111 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s111 -> s111 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (Central_Locking_System and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s112 -> s112 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s112 -> s112 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s112 -> s112 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s112 -> s112 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s112 -> s149 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s112 -> s112 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s112 -> s86 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s112 -> s63 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s112 -> s112 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s112 -> s112 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s112 -> s112 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s112 -> s112 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s112 -> s2 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s112 -> s112 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s112 -> s101 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s112 -> s101 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s112 -> s73 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s112 -> s5 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s112 -> s112 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s112 -> s112 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s112 -> s59 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s112 -> s39 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s112 -> s112 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s112 -> s112 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s112 -> s104 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s113 -> s113 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s113 -> s113 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s113 -> s113 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s113 -> s113 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s113 -> s116 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s113 -> s117 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s113 -> s113 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s113 -> s14 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s113 -> s113 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s113 -> s43 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s113 -> s0 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s113 -> s113 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s113 -> s113 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s113 -> s113 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s113 -> s54 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s114 -> s114 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s114 -> s114 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s114 -> s116 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s114 -> s0 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s114 -> s114 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s114 -> s49 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s114 -> s114 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s114 -> s118 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s114 -> s114 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s114 -> s119 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s114 -> s114 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s114 -> s114 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s114 -> s114 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s114 -> s114 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s114 -> s45 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s115 -> s10 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s115 -> s115 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s115 -> s54 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s115 -> s115 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s115 -> s45 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s115 -> s76 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s115 -> s115 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s115 -> s122 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s115 -> s115 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s115 -> s121 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s115 -> s115 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s115 -> s115 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s115 -> s115 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s115 -> s115 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s115 -> s115 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s116 -> s116 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s116 -> s116 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s116 -> s116 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s116 -> s113 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s116 -> s116 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s116 -> s123 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s116 -> s116 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s116 -> s77 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s116 -> s116 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s116 -> s37 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s116 -> s114 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s116 -> s116 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s116 -> s116 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s116 -> s116 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s116 -> s124 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s117 -> s117 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s117 -> s117 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s117 -> s117 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s117 -> s117 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s117 -> s123 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s117 -> s117 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s117 -> s113 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s117 -> s103 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s117 -> s117 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s117 -> s31 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s117 -> s19 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s117 -> s117 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s117 -> s117 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s117 -> s117 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s117 -> s127 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s118 -> s118 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s118 -> s118 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s118 -> s77 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s118 -> s108 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s118 -> s118 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s118 -> s93 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s118 -> s118 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s118 -> s118 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s118 -> s114 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s118 -> s118 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s118 -> s118 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s118 -> s118 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s118 -> s118 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s118 -> s118 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s118 -> s126 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s119 -> s119 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s119 -> s119 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s119 -> s37 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s119 -> s51 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s119 -> s119 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s119 -> s94 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s119 -> s119 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s119 -> s119 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s119 -> s114 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s119 -> s119 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s119 -> s119 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s119 -> s119 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s119 -> s119 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s119 -> s119 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s119 -> s15 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s120 -> s120 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s120 -> s120 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s120 -> s31 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s120 -> s120 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s120 -> s94 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s120 -> s120 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s120 -> s51 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s120 -> s120 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s120 -> s19 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s120 -> s120 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s120 -> s120 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s120 -> s120 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s120 -> s120 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s120 -> s120 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s120 -> s128 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s121 -> s11 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s121 -> s121 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s121 -> s130 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s121 -> s121 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s121 -> s15 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s121 -> s128 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s121 -> s121 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s121 -> s121 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s121 -> s115 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s121 -> s121 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s121 -> s121 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s121 -> s121 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s121 -> s121 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s121 -> s121 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s121 -> s121 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s122 -> s102 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s122 -> s122 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s122 -> s89 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s122 -> s122 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s122 -> s126 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s122 -> s129 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s122 -> s122 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s122 -> s122 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s122 -> s115 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s122 -> s122 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s122 -> s122 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s122 -> s122 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s122 -> s122 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s122 -> s122 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s122 -> s122 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s123 -> s123 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s123 -> s123 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s123 -> s123 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s123 -> s117 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s123 -> s123 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s123 -> s123 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s123 -> s116 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s123 -> s131 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s123 -> s123 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s123 -> s132 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s123 -> s49 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s123 -> s123 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s123 -> s123 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s123 -> s123 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s123 -> s133 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s124 -> s138 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s124 -> s124 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s124 -> s124 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s124 -> s54 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s124 -> s124 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s124 -> s133 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s124 -> s124 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s124 -> s137 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s124 -> s124 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s124 -> s85 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s124 -> s45 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s124 -> s124 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s124 -> s124 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s124 -> s124 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s124 -> s124 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s125 -> s135 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s125 -> s125 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s125 -> s133 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s125 -> s76 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s125 -> s125 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s125 -> s125 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s125 -> s45 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s125 -> s136 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s125 -> s125 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s125 -> s134 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s125 -> s125 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s125 -> s125 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s125 -> s125 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s125 -> s125 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s125 -> s125 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s126 -> s82 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s126 -> s126 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s126 -> s137 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s126 -> s122 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s126 -> s126 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s126 -> s136 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s126 -> s126 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s126 -> s126 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s126 -> s45 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s126 -> s126 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s126 -> s126 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s126 -> s126 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s126 -> s126 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s126 -> s126 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s126 -> s126 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s127 -> s46 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s127 -> s127 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s127 -> s127 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s127 -> s127 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s127 -> s133 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s127 -> s127 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s127 -> s54 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s127 -> s139 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s127 -> s127 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s127 -> s56 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s127 -> s76 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s127 -> s127 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s127 -> s127 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s127 -> s127 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s127 -> s127 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s128 -> s13 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s128 -> s128 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s128 -> s56 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s128 -> s128 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s128 -> s134 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s128 -> s128 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s128 -> s121 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s128 -> s128 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s128 -> s76 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s128 -> s128 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s128 -> s128 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s128 -> s128 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s128 -> s128 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s128 -> s128 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s128 -> s128 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s129 -> s52 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s129 -> s129 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s129 -> s139 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s129 -> s129 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s129 -> s136 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s129 -> s129 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s129 -> s122 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s129 -> s129 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s129 -> s76 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s129 -> s129 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s129 -> s129 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s129 -> s129 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s129 -> s129 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s129 -> s129 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s129 -> s129 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s130 -> s30 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s130 -> s130 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s130 -> s130 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s130 -> s130 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s130 -> s85 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s130 -> s56 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s130 -> s130 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s130 -> s130 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s130 -> s54 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s130 -> s130 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s130 -> s121 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s130 -> s130 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s130 -> s130 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s130 -> s130 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s130 -> s130 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s131 -> s131 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s131 -> s131 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s131 -> s131 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s131 -> s103 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s131 -> s131 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s131 -> s131 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s131 -> s77 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s131 -> s131 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s131 -> s123 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s131 -> s131 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s131 -> s93 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s131 -> s131 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s131 -> s131 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s131 -> s131 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s131 -> s140 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s132 -> s132 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s132 -> s132 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s132 -> s132 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s132 -> s31 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s132 -> s132 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s132 -> s132 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s132 -> s37 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s132 -> s132 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s132 -> s123 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s132 -> s132 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s132 -> s94 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s132 -> s132 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s132 -> s132 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s132 -> s132 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s132 -> s142 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s133 -> s109 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s133 -> s133 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s133 -> s133 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s133 -> s127 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s133 -> s133 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s133 -> s133 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s133 -> s124 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s133 -> s140 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s133 -> s133 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s133 -> s142 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s133 -> s125 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s133 -> s133 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s133 -> s133 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s133 -> s133 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s133 -> s133 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s134 -> s42 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s134 -> s134 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s134 -> s142 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s134 -> s128 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s134 -> s134 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s134 -> s134 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s134 -> s15 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s134 -> s134 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s134 -> s125 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s134 -> s134 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s134 -> s134 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s134 -> s134 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s134 -> s134 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s134 -> s134 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s134 -> s134 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s135 -> s135 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s135 -> s49 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s135 -> s109 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s135 -> s9 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s135 -> s135 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s135 -> s135 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s135 -> s16 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s135 -> s141 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s135 -> s135 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s135 -> s42 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s135 -> s28 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s135 -> s135 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s135 -> s135 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s135 -> s135 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s135 -> s135 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s136 -> s141 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s136 -> s136 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s136 -> s140 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s136 -> s129 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s136 -> s136 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s136 -> s136 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s136 -> s126 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s136 -> s136 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s136 -> s125 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s136 -> s136 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s136 -> s136 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s136 -> s136 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s136 -> s136 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s136 -> s136 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s136 -> s136 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s137 -> s143 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s137 -> s137 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s137 -> s137 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s137 -> s89 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s137 -> s137 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s137 -> s140 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s137 -> s137 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s137 -> s137 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s137 -> s124 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s137 -> s137 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s137 -> s126 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s137 -> s137 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s137 -> s137 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s137 -> s137 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s137 -> s137 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s138 -> s138 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s138 -> s116 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s138 -> s138 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s138 -> s44 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s138 -> s138 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s138 -> s109 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s138 -> s138 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s138 -> s143 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s138 -> s138 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s138 -> s25 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s138 -> s79 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s138 -> s138 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s138 -> s138 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s138 -> s138 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s138 -> s138 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s139 -> s70 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s139 -> s139 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s139 -> s139 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s139 -> s139 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s139 -> s140 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s139 -> s139 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s139 -> s89 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s139 -> s139 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s139 -> s127 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s139 -> s139 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s139 -> s129 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s139 -> s139 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s139 -> s139 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s139 -> s139 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s139 -> s139 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s140 -> s151 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s140 -> s140 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s140 -> s140 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s140 -> s139 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s140 -> s140 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s140 -> s140 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s140 -> s137 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s140 -> s140 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s140 -> s133 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s140 -> s140 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s140 -> s136 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s140 -> s140 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s140 -> s140 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s140 -> s140 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s140 -> s140 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s141 -> s141 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s141 -> s93 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s141 -> s151 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s141 -> s52 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s141 -> s141 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s141 -> s141 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s141 -> s82 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s141 -> s141 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s141 -> s135 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s141 -> s141 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s141 -> s69 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s141 -> s141 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s141 -> s141 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s141 -> s141 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s141 -> s141 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s142 -> s48 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s142 -> s142 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s142 -> s142 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s142 -> s56 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s142 -> s142 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s142 -> s142 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s142 -> s85 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s142 -> s142 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s142 -> s133 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s142 -> s142 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s142 -> s134 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s142 -> s142 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s142 -> s142 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s142 -> s142 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s142 -> s142 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s143 -> s143 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s143 -> s77 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s143 -> s143 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s143 -> s29 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s143 -> s143 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s143 -> s151 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s143 -> s143 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s143 -> s143 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s143 -> s138 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s143 -> s143 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s143 -> s101 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s143 -> s143 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s143 -> s143 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s143 -> s143 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s143 -> s143 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s144 -> s144 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s144 -> s144 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s144 -> s157 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s144 -> s95 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s144 -> s144 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s144 -> s154 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s144 -> s144 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s144 -> s155 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s144 -> s144 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s144 -> s156 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s144 -> s144 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s144 -> s60 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s144 -> s144 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s144 -> s144 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s144 -> s144 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s145 -> s145 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s145 -> s145 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s145 -> s59 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s145 -> s145 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s145 -> s152 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s145 -> s145 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s145 -> s88 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s145 -> s145 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s145 -> s7 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s145 -> s145 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s145 -> s145 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s145 -> s75 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s145 -> s26 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s145 -> s145 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s145 -> s145 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s146 -> s146 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s146 -> s146 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s146 -> s146 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s146 -> s146 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s146 -> s153 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s146 -> s146 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s146 -> s4 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s146 -> s159 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s146 -> s146 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s146 -> s59 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s146 -> s7 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s146 -> s162 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s146 -> s161 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s146 -> s146 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s146 -> s146 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s147 -> s147 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s147 -> s147 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s147 -> s162 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s147 -> s147 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s147 -> s81 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s147 -> s147 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s147 -> s86 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s147 -> s160 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s147 -> s147 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s147 -> s75 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s147 -> s7 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s147 -> s65 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s147 -> s147 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s147 -> s147 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s147 -> s147 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s148 -> s148 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s148 -> s148 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s148 -> s161 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s148 -> s148 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s148 -> s154 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s148 -> s148 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s148 -> s95 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s148 -> s66 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s148 -> s148 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s148 -> s26 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s148 -> s148 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s148 -> s65 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s148 -> s148 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s148 -> s148 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s148 -> s148 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s149 -> s149 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s149 -> s149 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s149 -> s149 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s149 -> s149 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s149 -> s112 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s149 -> s159 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s149 -> s149 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s149 -> s149 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s149 -> s4 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s149 -> s149 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s149 -> s6 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s149 -> s22 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s149 -> s163 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s149 -> s149 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s149 -> s149 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s150 -> s150 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s150 -> s150 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s150 -> s164 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s150 -> s150 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s150 -> s156 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s150 -> s26 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s150 -> s150 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s150 -> s150 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s150 -> s95 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s150 -> s150 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s150 -> s150 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s150 -> s165 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s150 -> s150 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s150 -> s150 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s150 -> s150 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s151 -> s151 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s151 -> s131 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s151 -> s151 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s151 -> s70 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s151 -> s151 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s151 -> s151 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s151 -> s143 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s151 -> s151 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s151 -> s109 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s151 -> s151 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s151 -> s69 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s151 -> s151 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s151 -> s151 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s151 -> s151 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s151 -> s151 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s152 -> s152 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s152 -> s152 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s152 -> s97 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s152 -> s145 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s152 -> s152 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s152 -> s152 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s152 -> s71 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s152 -> s152 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s152 -> s28 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s152 -> s152 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s152 -> s152 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s152 -> s68 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s152 -> s111 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s152 -> s152 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s152 -> s152 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s153 -> s153 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s153 -> s153 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s153 -> s153 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s153 -> s146 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s153 -> s153 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s153 -> s153 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s153 -> s2 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s153 -> s63 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s153 -> s153 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s153 -> s97 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s153 -> s28 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s153 -> s170 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s153 -> s168 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s153 -> s153 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s153 -> s153 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s154 -> s154 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s154 -> s154 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s154 -> s168 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s154 -> s148 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s154 -> s154 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s154 -> s154 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s154 -> s144 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s154 -> s167 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s154 -> s154 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s154 -> s111 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s154 -> s154 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s154 -> s169 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s154 -> s154 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s154 -> s154 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s154 -> s154 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s155 -> s155 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s155 -> s155 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s155 -> s39 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s155 -> s1 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s155 -> s155 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s155 -> s167 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s155 -> s155 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s155 -> s155 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s155 -> s144 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s155 -> s155 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s155 -> s155 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s155 -> s64 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s155 -> s155 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s155 -> s155 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s155 -> s155 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s156 -> s156 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s156 -> s156 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s156 -> s171 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s156 -> s150 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s156 -> s156 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s156 -> s111 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s156 -> s156 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s156 -> s156 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s156 -> s144 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s156 -> s156 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s156 -> s156 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s156 -> s87 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s156 -> s156 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s156 -> s156 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s156 -> s156 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s157 -> s157 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s157 -> s157 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s157 -> s157 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s157 -> s32 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s157 -> s157 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s157 -> s168 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s157 -> s157 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s157 -> s39 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s157 -> s157 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s157 -> s171 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s157 -> s144 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s157 -> s61 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s157 -> s157 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s157 -> s157 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s157 -> s157 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s158 -> s158 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s158 -> s158 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s158 -> s158 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s158 -> s106 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s158 -> s158 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s158 -> s170 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s158 -> s158 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s158 -> s5 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s158 -> s158 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s158 -> s172 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s158 -> s79 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s158 -> s61 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s158 -> s158 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s158 -> s158 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s158 -> s158 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s159 -> s159 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s159 -> s159 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s159 -> s159 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s159 -> s159 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s159 -> s63 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s159 -> s159 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s159 -> s149 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s159 -> s159 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s159 -> s146 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s159 -> s159 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s159 -> s83 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s159 -> s58 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s159 -> s104 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s159 -> s159 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s159 -> s159 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s160 -> s160 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s160 -> s160 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s160 -> s58 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s160 -> s160 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s160 -> s74 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s160 -> s160 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s160 -> s3 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s160 -> s160 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s160 -> s147 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s160 -> s160 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s160 -> s83 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s160 -> s173 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s160 -> s160 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s160 -> s160 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s160 -> s160 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s161 -> s161 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s161 -> s161 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s161 -> s161 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s161 -> s161 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s161 -> s168 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s161 -> s161 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s161 -> s32 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s161 -> s104 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s161 -> s161 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s161 -> s105 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s161 -> s148 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s161 -> s41 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s161 -> s161 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s161 -> s161 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s161 -> s161 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s162 -> s162 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s162 -> s162 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s162 -> s162 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s162 -> s162 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s162 -> s170 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s162 -> s162 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s162 -> s106 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s162 -> s58 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s162 -> s162 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s162 -> s175 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s162 -> s7 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s162 -> s41 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s162 -> s162 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s162 -> s162 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s162 -> s162 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s163 -> s163 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s163 -> s163 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s163 -> s163 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s163 -> s163 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s163 -> s39 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s163 -> s104 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s163 -> s163 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s163 -> s163 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s163 -> s32 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s163 -> s163 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s163 -> s1 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s163 -> s96 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s163 -> s163 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s163 -> s163 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s163 -> s163 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s164 -> s164 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s164 -> s164 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s164 -> s164 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s164 -> s164 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s164 -> s171 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s164 -> s105 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s164 -> s164 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s164 -> s164 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s164 -> s32 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s164 -> s164 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s164 -> s150 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s164 -> s84 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s164 -> s164 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s164 -> s164 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s164 -> s164 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s165 -> s165 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s165 -> s165 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s165 -> s84 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s165 -> s165 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s165 -> s176 [label="fp_on / pw_mv_stop,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s165 -> s174 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s165 -> s165 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s165 -> s165 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s165 -> s36 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s165 -> s165 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s165 -> s12 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s165 -> s165 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s165 -> s165 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s165 -> s11 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s165 -> s165 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s166 -> s166 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s166 -> s166 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s166 -> s166 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s166 -> s166 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s166 -> s172 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s166 -> s175 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s166 -> s166 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s166 -> s166 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s166 -> s106 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s166 -> s166 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s166 -> s88 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s166 -> s84 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s166 -> s166 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s166 -> s166 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s166 -> s166 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s167 -> s167 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s167 -> s167 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s167 -> s177 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s167 -> s66 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s167 -> s167 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s167 -> s167 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s167 -> s155 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s167 -> s167 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s167 -> s154 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s167 -> s167 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s167 -> s167 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s167 -> s24 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s167 -> s167 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s167 -> s167 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s167 -> s167 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s168 -> s168 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s168 -> s168 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s168 -> s168 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s168 -> s161 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s168 -> s168 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s168 -> s168 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s168 -> s157 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s168 -> s177 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s168 -> s168 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s168 -> s178 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s168 -> s154 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s168 -> s35 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s168 -> s168 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s168 -> s168 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s168 -> s168 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s169 -> s169 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s169 -> s169 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s169 -> s35 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s169 -> s65 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s169 -> s98 [label="fp_on / pw_mv_stop,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s169 -> s169 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s169 -> s60 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s169 -> s24 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s169 -> s169 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s169 -> s18 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s169 -> s81 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s169 -> s169 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s169 -> s169 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s169 -> s135 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s169 -> s169 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s170 -> s170 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s170 -> s170 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s170 -> s170 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s170 -> s162 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s170 -> s170 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s170 -> s170 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s170 -> s158 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s170 -> s55 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s170 -> s170 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s170 -> s179 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s170 -> s28 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s170 -> s35 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s170 -> s170 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s170 -> s170 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s170 -> s170 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s171 -> s171 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s171 -> s171 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s171 -> s171 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s171 -> s164 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s171 -> s171 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s171 -> s178 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s171 -> s171 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s171 -> s171 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s171 -> s157 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s171 -> s171 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s171 -> s156 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s171 -> s33 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s171 -> s171 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s171 -> s171 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s171 -> s171 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s172 -> s172 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s172 -> s172 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s172 -> s172 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s172 -> s166 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s172 -> s172 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s172 -> s179 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s172 -> s172 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s172 -> s172 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s172 -> s158 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s172 -> s172 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s172 -> s71 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s172 -> s33 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s172 -> s172 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s172 -> s172 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s172 -> s172 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s173 -> s173 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s173 -> s173 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s173 -> s57 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s173 -> s173 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s173 -> s50 [label="fp_on / pw_mv_stop,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s173 -> s173 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s173 -> s38 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s173 -> s173 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s173 -> s65 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s173 -> s173 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s173 -> s160 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s173 -> s173 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s173 -> s173 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s173 -> s52 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s173 -> s173 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s174 -> s174 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s174 -> s174 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s174 -> s73 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s174 -> s174 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s174 -> s180 [label="fp_on / pw_mv_stop,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s174 -> s174 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s174 -> s165 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s174 -> s174 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s174 -> s65 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s174 -> s174 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s174 -> s75 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s174 -> s174 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s174 -> s174 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s174 -> s13 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s174 -> s174 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s175 -> s175 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s175 -> s175 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s175 -> s175 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s175 -> s175 [label="fp_off / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s175 -> s179 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s175 -> s175 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s175 -> s166 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s175 -> s175 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s175 -> s162 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s175 -> s175 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s175 -> s145 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s175 -> s73 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s175 -> s175 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s175 -> s175 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s175 -> s175 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s176 -> s176 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s176 -> s176 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s176 -> s99 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s176 -> s88 [label="fp_off / pw_mv_dn,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s176 -> s176 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s176 -> s180 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s176 -> s176 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s176 -> s176 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s176 -> s21 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s176 -> s176 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s176 -> s176 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s176 -> s176 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s176 -> s176 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s176 -> s176 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s176 -> s176 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s177 -> s177 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s177 -> s177 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s177 -> s177 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s177 -> s104 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s177 -> s177 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s177 -> s177 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s177 -> s39 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s177 -> s177 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s177 -> s168 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s177 -> s177 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s177 -> s167 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s177 -> s53 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s177 -> s177 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s177 -> s177 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s177 -> s177 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s178 -> s178 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s178 -> s178 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s178 -> s178 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s178 -> s105 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s178 -> s178 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s178 -> s178 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s178 -> s171 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s178 -> s178 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s178 -> s168 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s178 -> s178 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s178 -> s111 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s178 -> s67 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s178 -> s178 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s178 -> s178 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s178 -> s178 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s179 -> s179 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s179 -> s179 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s179 -> s179 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s179 -> s175 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s179 -> s179 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s179 -> s179 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s179 -> s172 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s179 -> s179 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s179 -> s170 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s179 -> s179 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s179 -> s152 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s179 -> s67 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s179 -> s179 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s179 -> s179 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s179 -> s179 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s180 -> s180 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s180 -> s180 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s180 -> s183 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s180 -> s145 [label="fp_off / pw_mv_dn,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s180 -> s180 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s180 -> s180 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s180 -> s176 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s180 -> s180 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s180 -> s98 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s180 -> s180 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s180 -> s180 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s180 -> s180 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s180 -> s180 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s180 -> s180 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s180 -> s180 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s181 -> s181 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s181 -> s181 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s181 -> s181 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s181 -> s146 [label="fp_off / pw_mv_dn,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s181 -> s181 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s181 -> s181 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s181 -> s47 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s181 -> s80 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s181 -> s181 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s181 -> s183 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s181 -> s98 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s181 -> s181 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s181 -> s181 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s181 -> s181 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s181 -> s181 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s182 -> s182 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s182 -> s182 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s182 -> s182 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s182 -> s149 [label="fp_off / pw_mv_dn,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s182 -> s182 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s182 -> s80 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s182 -> s182 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s182 -> s182 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s182 -> s47 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s182 -> s182 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s182 -> s23 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s182 -> s182 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s182 -> s182 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s182 -> s182 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s182 -> s182 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s183 -> s183 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s183 -> s183 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s183 -> s183 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s183 -> s59 [label="fp_off / pw_mv_dn,led_fp_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s183 -> s183 [label="fp_on / 1,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s183 -> s183 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s183 -> s99 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s183 -> s183 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s183 -> s181 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s183 -> s183 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s183 -> s180 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s183 -> s183 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s183 -> s183 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s183 -> s183 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	s183 -> s183 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and LED_Finger_Protection))]"];
	__start0 [label="" shape="none" width="0" height="0"];
	__start0 -> s0;
}