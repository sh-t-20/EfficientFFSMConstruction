digraph g {
	edge [lblstyle="above, sloped"];
	s0 [shape="circle" label="0@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 [shape="circle" label="1@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 [shape="circle" label="2@[((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 [shape="circle" label="3@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 [shape="circle" label="4@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 [shape="circle" label="5@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 [shape="circle" label="6@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 [shape="circle" label="7@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 [shape="circle" label="8@[((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 [shape="circle" label="9@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s10 [shape="circle" label="10@[((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 [shape="circle" label="11@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 [shape="circle" label="12@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 [shape="circle" label="13@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 [shape="circle" label="14@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s15 [shape="circle" label="15@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s16 [shape="circle" label="16@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 [shape="circle" label="17@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 [shape="circle" label="18@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 [shape="circle" label="19@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 [shape="circle" label="20@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 [shape="circle" label="21@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 [shape="circle" label="22@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 [shape="circle" label="23@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 [shape="circle" label="24@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 [shape="circle" label="25@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 [shape="circle" label="26@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 [shape="circle" label="27@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 [shape="circle" label="28@[((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s29 [shape="circle" label="29@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s30 [shape="circle" label="30@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 [shape="circle" label="31@[((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 [shape="circle" label="32@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 [shape="circle" label="33@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 [shape="circle" label="34@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 [shape="circle" label="35@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 [shape="circle" label="36@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 [shape="circle" label="37@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 [shape="circle" label="38@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 [shape="circle" label="39@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 [shape="circle" label="40@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 [shape="circle" label="41@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 [shape="circle" label="42@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s43 [shape="circle" label="43@[((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 [shape="circle" label="44@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 [shape="circle" label="45@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s46 [shape="circle" label="46@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 [shape="circle" label="47@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 [shape="circle" label="48@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 [shape="circle" label="49@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 [shape="circle" label="50@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 [shape="circle" label="51@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 [shape="circle" label="52@[((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s53 [shape="circle" label="53@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s54 [shape="circle" label="54@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 [shape="circle" label="55@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s56 [shape="circle" label="56@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 [shape="circle" label="57@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s58 [shape="circle" label="58@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s59 [shape="circle" label="59@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 [shape="circle" label="60@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 [shape="circle" label="61@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s62 [shape="circle" label="62@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s63 [shape="circle" label="63@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s64 [shape="circle" label="64@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 [shape="circle" label="65@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 [shape="circle" label="66@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s67 [shape="circle" label="67@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s68 [shape="circle" label="68@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 [shape="circle" label="69@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 [shape="circle" label="70@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s71 [shape="circle" label="71@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s72 [shape="circle" label="72@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s73 [shape="circle" label="73@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s74 [shape="circle" label="74@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s75 [shape="circle" label="75@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s76 [shape="circle" label="76@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s77 [shape="circle" label="77@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s78 [shape="circle" label="78@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 [shape="circle" label="79@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s80 [shape="circle" label="80@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s81 [shape="circle" label="81@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s82 [shape="circle" label="82@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 [shape="circle" label="83@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 [shape="circle" label="84@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 [shape="circle" label="85@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s86 [shape="circle" label="86@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s87 [shape="circle" label="87@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s88 [shape="circle" label="88@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s89 [shape="circle" label="89@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 [shape="circle" label="90@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 [shape="circle" label="91@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 [shape="circle" label="92@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s93 [shape="circle" label="93@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s94 [shape="circle" label="94@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 [shape="circle" label="95@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s96 [shape="circle" label="96@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s97 [shape="circle" label="97@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s98 [shape="circle" label="98@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s99 [shape="circle" label="99@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s100 [shape="circle" label="100@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s101 [shape="circle" label="101@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s102 [shape="circle" label="102@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s103 [shape="circle" label="103@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s104 [shape="circle" label="104@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s105 [shape="circle" label="105@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s106 [shape="circle" label="106@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s107 [shape="circle" label="107@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s108 [shape="circle" label="108@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s109 [shape="circle" label="109@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s110 [shape="circle" label="110@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s111 [shape="circle" label="111@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s112 [shape="circle" label="112@[((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s0 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s0 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s4 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s0 -> s1 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s5 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s0 -> s3 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s97 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s2 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s0 -> s0 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s0 -> s0 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s4 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s0 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s8 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s0 -> s6 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s0 -> s7 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s0 -> s1 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s0 -> s9 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s41 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s10 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s11 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s0 -> s0 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s0 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s0 -> s0 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s0 -> s12 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s0 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s9 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s1 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s0 [label="pw_but_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s0 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s7 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s14 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s0 -> s13 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s0 -> s15 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s0 -> s9 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s13 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s0 -> s0 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s0 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s18 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s0 -> s16 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s0 -> s66 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s10 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s17 [label="receiveMsg / pw_activated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s9 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s7 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s0 -> s0 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s1 -> s1 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s1 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s19 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s1 -> s1 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s1 -> s99 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s20 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s1 -> s1 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s1 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s1 -> s23 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s21 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s1 -> s22 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s1 -> s1 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s24 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s1 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s1 -> s16 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s14 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s1 -> s0 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s1 -> s1 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s1 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s1 -> s25 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s1 -> s1 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s1 -> s24 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s1 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s0 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s1 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s26 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s1 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s27 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s1 -> s0 [label="pw_but_dn / fp_off,1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s1 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s9 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s1 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s1 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s1 -> s1 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s1 -> s1 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s1 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s29 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s1 -> s4 [label="receiveMsg / pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s10 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s1 -> s3 [label="receiveMsg / pw_activated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s1 -> s1 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s1 -> s28 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s71 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s30 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s1 -> s11 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s1 -> s3 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s2 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s2 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s2 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s31 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s32 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s2 -> s2 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s2 -> s2 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s2 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s2 -> s28 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s2 -> s33 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s2 -> s95 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s24 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s2 -> s34 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s2 -> s35 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s2 -> s49 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s2 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s2 -> s23 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s2 -> s2 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s36 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s2 -> s2 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s2 -> s2 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s2 -> s2 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s43 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s37 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s2 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s39 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s0 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s2 -> s41 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s2 -> s27 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s2 -> s40 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s2 -> s38 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s2 -> s54 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s42 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s2 -> s2 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s18 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s2 -> s43 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s2 -> s2 [label="pw_mv_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s2 -> s2 [label="pw_mv_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s2 -> s34 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s2 -> s24 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s2 -> s2 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s2 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s2 -> s36 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s2 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s30 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s2 -> s2 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s2 -> s44 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s32 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s31 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s3 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s3 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s3 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s3 -> s37 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s74 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s4 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s48 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s3 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s3 -> s3 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s50 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s51 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s3 -> s111 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s3 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s49 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s3 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s3 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s76 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s40 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s22 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s3 -> s32 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s21 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s4 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s3 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s25 [label="m_pw_msg / m_pw_activated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s52 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s3 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s2 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s3 -> s3 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s25 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s79 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s3 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s0 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s53 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s3 -> s107 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s14 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s6 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s38 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s3 -> s3 [label="pw_but_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s7 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s34 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s17 [label="pw_but_dn / fp_off,1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s3 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s54 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s55 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s3 -> s25 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s3 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s32 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s3 -> s8 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s22 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s56 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s25 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s3 -> s1 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s19 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s3 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s23 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s3 -> s22 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s91 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s3 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s3 -> s16 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s3 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s3 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s4 -> s33 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s4 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s31 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s4 -> s36 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s4 -> s4 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s4 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s49 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s4 -> s23 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s4 -> s57 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s4 -> s5 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s4 -> s0 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s4 -> s4 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s4 -> s58 [label="fp_off / pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s4 -> s4 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s17 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s4 -> s4 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s4 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s4 -> s3 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s4 -> s3 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s4 -> s41 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s4 -> s19 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s4 -> s39 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s4 -> s28 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s4 -> s4 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s105 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s4 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s4 -> s36 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s4 -> s33 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s4 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s4 -> s4 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s4 -> s28 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s18 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s4 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s50 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s59 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s14 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s4 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s4 -> s10 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s18 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s4 -> s17 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s4 -> s67 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s0 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s4 -> s42 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s4 -> s19 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s4 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s4 -> s60 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s4 -> s4 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s61 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s4 -> s4 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s41 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s4 -> s62 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s4 -> s4 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s4 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s63 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s4 -> s32 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s4 -> s4 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s16 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s4 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s5 -> s37 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s5 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s5 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s5 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s5 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s5 -> s5 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s4 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s5 -> s30 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s5 -> s5 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s5 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s5 -> s100 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s5 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s5 -> s5 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s5 -> s83 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s5 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s104 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s11 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s0 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s5 -> s45 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s5 -> s5 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s46 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s5 -> s47 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s5 -> s5 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s5 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s19 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s5 -> s5 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s5 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s6 -> s6 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s6 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s6 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s6 -> s21 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s6 -> s3 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s50 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s105 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s28 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s6 -> s19 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s32 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s6 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s6 -> s6 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s13 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s0 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s6 -> s41 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s6 -> s6 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s41 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s6 -> s6 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s6 -> s41 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s6 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s6 -> s67 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s56 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s41 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s6 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s65 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s6 -> s63 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s6 -> s6 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s6 -> s6 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s6 -> s84 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s6 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s17 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s6 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s68 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s6 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s6 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s38 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s6 -> s6 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s55 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s6 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s6 -> s63 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s70 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s45 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s6 -> s63 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s42 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s6 -> s8 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s6 -> s14 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s6 -> s6 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s6 -> s23 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s6 -> s6 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s6 -> s17 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s6 -> s67 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s6 -> s6 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s11 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s6 -> s23 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s63 [label="pw_pos_dn / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s18 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s6 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s44 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s6 -> s6 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s6 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s6 -> s41 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s16 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s52 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s7 -> s7 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s7 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s3 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s25 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s22 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s30 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s32 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s7 -> s7 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s7 -> s57 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s7 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s10 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s0 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s64 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s7 -> s7 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s7 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s44 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s7 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s7 -> s86 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s7 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s10 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s7 -> s7 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s13 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s9 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s7 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s52 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s65 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s7 -> s36 [label="m_pw_msg / m_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s7 -> s7 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s61 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s7 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s92 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s66 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s7 -> s7 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s31 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s7 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s7 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s7 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s6 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s7 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s7 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s4 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s7 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s27 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s66 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s11 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s7 -> s0 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s24 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s8 -> s8 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s8 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s38 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s21 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s67 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s8 -> s58 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s8 -> s37 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s8 -> s8 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s0 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s8 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s8 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s8 -> s107 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s8 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s8 -> s8 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s31 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s8 -> s68 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s8 -> s8 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s8 -> s8 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s8 -> s8 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s53 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s31 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s8 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s8 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s8 -> s92 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s6 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s8 -> s8 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s8 -> s8 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s42 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s54 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s8 -> s48 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s8 -> s69 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s8 -> s76 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s45 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s8 -> s8 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s8 -> s8 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s8 -> s31 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s8 -> s8 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s8 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s8 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s7 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s38 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s8 -> s3 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s9 -> s9 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s9 -> s17 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 -> s9 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 -> s24 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s34 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s9 -> s28 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s49 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s9 -> s1 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s87 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 -> s26 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s9 -> s9 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 -> s38 [label="fp_off / pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s9 -> s53 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s9 -> s9 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s63 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s9 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 -> s9 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s9 -> s13 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s9 -> s7 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s9 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s9 -> s44 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 -> s0 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s9 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 -> s61 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s9 -> s17 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s9 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s9 -> s9 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s9 -> s9 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 -> s0 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s66 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 -> s9 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 -> s9 [label="pw_but_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 -> s9 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 -> s45 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s9 -> s63 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s9 -> s9 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s9 -> s56 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s9 -> s9 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s9 -> s9 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 -> s9 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 -> s14 [label="receiveMsg / pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s17 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s9 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 -> s71 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s0 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s9 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s9 -> s39 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s10 -> s33 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s10 -> s36 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s10 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s10 -> s72 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s10 -> s52 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s10 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s10 -> s73 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s10 -> s4 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s46 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s10 -> s16 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s30 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s10 -> s49 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s10 -> s10 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s10 -> s10 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s10 -> s7 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s10 -> s31 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s10 -> s41 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s10 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s10 -> s17 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s56 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s10 -> s10 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s10 -> s0 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s10 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s10 -> s61 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s10 -> s7 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s10 -> s51 [label="m_pw_msg / m_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s10 -> s10 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s10 -> s36 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s10 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s10 -> s14 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s10 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s10 -> s86 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s10 -> s10 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s71 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s10 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s10 -> s10 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s10 -> s10 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s74 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s10 -> s56 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s10 -> s33 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s10 -> s10 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s10 -> s66 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s14 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s10 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s10 -> s10 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s10 -> s22 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s10 -> s10 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s10 -> s10 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s10 -> s7 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s10 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s40 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s10 -> s11 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s11 -> s11 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s25 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s11 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s23 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s30 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s11 -> s25 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s5 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s65 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s24 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s33 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s11 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s11 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s11 -> s38 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s63 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s11 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s11 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s18 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s11 -> s11 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s63 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s11 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s53 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s41 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s66 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s0 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s11 -> s11 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s11 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s11 -> s11 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s11 -> s44 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s11 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s53 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s11 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s27 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s11 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s41 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s34 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s11 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s11 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s19 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s17 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s11 -> s48 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s45 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s55 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s11 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s75 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s10 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s11 -> s11 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s1 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s11 -> s73 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s11 -> s11 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s7 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s11 -> s11 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s31 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s11 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s66 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s11 -> s11 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s43 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s11 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s12 -> s12 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 -> s12 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 -> s24 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s98 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 -> s12 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 -> s12 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 -> s101 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 -> s12 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 -> s12 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 -> s0 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 -> s12 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 -> s12 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 -> s12 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 -> s12 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 -> s12 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 -> s9 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 -> s14 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s13 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s13 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s37 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s47 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s13 -> s43 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s13 -> s34 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s35 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s23 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s13 -> s13 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s13 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s13 -> s13 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s13 -> s23 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s6 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s41 [label="fp_off / pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s53 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s13 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s14 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s13 -> s7 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s13 -> s13 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s9 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s13 -> s35 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s40 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s13 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s13 -> s28 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s38 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s13 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s13 -> s13 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s13 -> s13 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s90 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s13 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s40 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s13 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s89 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s14 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s13 [label="pw_but_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s13 -> s13 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s42 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s13 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s18 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s13 -> s13 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s13 -> s13 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s13 -> s37 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s13 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s13 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s13 [label="receiveMsg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s41 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s13 -> s34 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s13 -> s17 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s0 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s13 -> s0 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s14 -> s72 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s14 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 -> s14 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 -> s3 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s24 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s46 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s14 -> s4 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s35 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s14 -> s28 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s13 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 -> s14 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s17 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s14 -> s14 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s14 -> s86 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 -> s13 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s14 -> s31 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s14 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s14 -> s14 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 -> s1 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s14 -> s14 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 -> s37 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s17 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s35 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 -> s14 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s14 -> s31 [label="m_pw_msg / m_pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s76 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s14 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s14 -> s14 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s14 -> s14 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s94 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 -> s10 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s14 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 -> s111 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 -> s14 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s14 [label="pw_but_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 -> s14 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 -> s75 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s14 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s14 -> s14 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s14 -> s14 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 -> s14 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 -> s14 [label="receiveMsg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 -> s31 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s14 -> s66 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s14 -> s6 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s14 -> s0 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s14 -> s10 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s34 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s15 -> s15 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s15 -> s23 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s15 -> s15 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s15 -> s15 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s15 -> s15 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s15 -> s15 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s15 -> s15 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s15 -> s15 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s15 -> s15 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s15 -> s15 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s15 -> s27 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s15 -> s0 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s16 -> s16 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s16 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s26 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s16 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s16 -> s30 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s16 -> s16 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s16 -> s16 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s44 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s16 -> s32 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s16 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s16 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s1 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s82 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s16 -> s81 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s16 -> s16 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s16 -> s65 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s16 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s16 -> s16 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s41 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s16 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s10 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s16 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s78 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s16 -> s16 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s24 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s16 -> s41 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s16 -> s6 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s16 -> s49 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s27 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s16 -> s60 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s16 -> s4 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s37 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s16 -> s16 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s16 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s16 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s16 -> s30 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s27 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s16 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s17 -> s17 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s33 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s25 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s17 -> s12 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s17 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s17 -> s32 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s4 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s52 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s17 -> s28 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s36 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s45 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s17 -> s43 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s22 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s17 -> s3 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s17 -> s40 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s17 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s17 -> s17 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s41 [label="fp_off / pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s70 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s4 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s17 -> s9 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s17 -> s17 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s23 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s17 -> s51 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s52 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s14 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s38 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s17 -> s17 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s17 -> s10 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s17 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s63 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s17 -> s31 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s17 -> s33 [label="m_pw_msg / m_pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s32 [label="m_pw_msg / m_pw_activated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s17 -> s17 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s17 -> s11 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s17 -> s0 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s17 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s17 -> s17 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s6 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s40 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s17 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s17 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s41 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s61 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s53 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s17 -> s17 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s17 -> s78 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s17 -> s38 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s17 [label="pw_but_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s45 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s17 -> s17 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s17 -> s53 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s17 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s74 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s17 -> s72 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s17 -> s13 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s79 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s17 -> s35 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s80 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s17 -> s9 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s17 -> s18 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s17 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s17 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s81 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s17 -> s17 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s17 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s18 -> s18 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s18 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s25 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s4 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s18 -> s53 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s32 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s55 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s18 -> s19 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s18 -> s18 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s18 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s11 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s18 -> s18 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s37 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s18 -> s77 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s18 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s18 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s18 -> s18 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s66 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s18 -> s48 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s45 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s18 -> s63 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s34 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s47 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s18 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s18 -> s63 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s18 -> s18 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s18 -> s18 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s18 -> s63 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s18 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s4 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s18 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s34 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s18 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s38 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s18 [label="pw_but_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s18 -> s22 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s38 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s18 -> s18 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s48 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s18 -> s49 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s18 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s18 -> s54 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s70 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s18 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s45 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s18 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s31 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s18 -> s68 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s18 -> s34 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s18 -> s18 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s34 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s18 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s18 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s51 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s18 -> s43 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s18 [label="receiveMsg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s18 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s18 -> s41 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s19 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s19 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s21 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s19 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s19 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s20 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s19 -> s75 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s19 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s19 -> s19 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s19 -> s13 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s25 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s19 -> s56 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s19 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s19 -> s37 [label="fp_on / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s44 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s19 -> s19 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s45 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s25 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s19 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s19 -> s4 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s19 -> s43 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s19 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s19 -> s32 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s19 -> s19 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s19 -> s19 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s49 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s19 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s32 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s19 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s74 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s1 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s19 -> s11 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s18 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s19 -> s63 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s19 -> s41 [label="pw_but_dn / fp_off,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s19 -> s6 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s6 [label="pw_but_dn / fp_off,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s41 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s19 -> s85 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s19 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s70 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s19 -> s54 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s19 -> s45 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s52 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s19 -> s21 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s19 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s21 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s19 -> s19 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s19 -> s19 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s19 -> s23 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s19 -> s34 [label="pw_pos_dn / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s23 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s19 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s37 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s19 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s19 -> s21 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s70 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s19 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s49 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s19 -> s49 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s19 -> s25 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s19 [label="release_pw_but / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s20 -> s20 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 -> s102 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 -> s20 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s20 -> s20 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 -> s20 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 -> s3 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s20 -> s20 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s20 -> s20 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 -> s67 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s20 -> s20 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 -> s24 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s20 -> s46 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s20 -> s35 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s20 -> s36 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 -> s20 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s20 -> s20 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s20 -> s20 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 -> s37 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 -> s20 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 -> s1 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s20 -> s58 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s20 -> s37 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s20 -> s10 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 -> s20 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 -> s48 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s20 -> s70 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s20 -> s20 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s20 -> s20 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s20 -> s46 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s20 -> s20 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 -> s20 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 -> s43 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s20 -> s20 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 -> s93 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s20 -> s30 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s21 -> s21 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s21 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s21 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s32 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s1 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s21 -> s21 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s18 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s21 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s77 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s21 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s21 -> s43 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s21 -> s21 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s3 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s21 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s21 -> s60 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s65 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s52 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s21 -> s51 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s21 -> s21 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s19 [label="mpw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s22 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s21 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s21 -> s21 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s23 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s43 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s21 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s31 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s21 -> s38 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s39 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s11 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s87 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s21 -> s8 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s6 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s55 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s70 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s21 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s21 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s21 -> s32 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s21 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s21 -> s21 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s21 -> s23 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s50 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s21 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s21 -> s25 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s21 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s3 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s21 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s24 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s21 -> s65 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s19 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s22 -> s22 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s22 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s65 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s22 -> s18 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s22 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s22 -> s1 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s22 -> s36 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s22 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s32 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s22 -> s85 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s22 -> s22 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s22 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s22 -> s36 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s22 -> s3 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s22 -> s22 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s22 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s22 -> s25 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s84 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s22 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s22 -> s22 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s22 -> s47 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s22 -> s14 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s22 -> s32 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s22 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s67 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s22 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s8 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s22 -> s7 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s41 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s22 -> s17 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s22 -> s22 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s53 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s22 -> s22 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s22 -> s70 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s25 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s22 -> s22 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s22 -> s22 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s22 -> s22 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s34 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s22 -> s22 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s49 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s22 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s72 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s22 -> s32 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s22 -> s3 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s23 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s23 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s88 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s23 -> s34 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s23 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s46 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s1 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s17 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s23 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s15 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s23 -> s34 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s23 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s23 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s23 -> s32 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s23 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s25 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s2 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s23 -> s23 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s23 -> s57 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s34 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s23 -> s23 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s23 -> s22 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s23 -> s23 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s23 -> s23 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s30 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s25 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s23 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s21 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s23 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s34 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s23 -> s4 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s11 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s63 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s13 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s23 -> s23 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s23 -> s41 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s86 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s55 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s23 -> s70 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s23 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s23 -> s33 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s54 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s23 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s23 -> s23 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s23 -> s4 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s23 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s23 -> s23 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s23 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s87 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s23 -> s63 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s6 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s23 -> s19 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s24 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 -> s24 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 -> s24 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 -> s24 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 -> s24 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s30 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s24 -> s24 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s24 -> s35 [label="fp_on / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s84 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s24 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 -> s52 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 -> s24 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s20 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s24 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 -> s2 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s24 -> s1 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s48 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s51 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s24 -> s24 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s24 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s24 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 -> s1 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s106 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 -> s24 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 -> s12 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s44 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s24 -> s14 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s78 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s9 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s61 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 -> s11 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s24 -> s75 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s24 -> s2 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 -> s24 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s18 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s24 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s24 -> s7 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s24 -> s42 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s75 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s21 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s24 -> s24 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 -> s24 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 -> s52 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s24 -> s3 [label="receiveMsg / pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s28 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s24 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 -> s24 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s25 -> s25 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s25 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s41 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s19 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s0 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s25 -> s37 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s25 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s25 -> s32 [label="finger_detected / fp_on [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s25 -> s25 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s25 -> s19 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s25 -> s43 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s25 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s25 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s52 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s25 -> s25 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s40 [label="fp_on / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s25 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s22 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s47 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s25 -> s23 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s19 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s40 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s25 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s33 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s25 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s25 -> s23 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s25 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s25 -> s1 [label="mpw_stop / pw_inactivated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s25 -> s34 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s25 -> s51 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s23 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s25 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s91 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s3 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s78 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s25 -> s18 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s6 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s7 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s25 -> s41 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s25 -> s86 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s41 [label="pw_but_dn / fp_off,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s11 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s55 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s45 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s25 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s70 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s25 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s54 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s25 -> s19 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s25 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s25 -> s25 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s25 -> s45 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s25 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s32 [label="pw_pos_dn / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s25 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s65 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s2 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s25 -> s25 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s25 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s3 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s25 -> s30 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s26 -> s26 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s26 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s26 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s26 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s6 [label="fp_off / pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s26 -> s26 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s26 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s95 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s26 -> s99 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s26 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s26 -> s26 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s26 -> s26 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s1 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s64 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s26 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s16 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s9 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s26 -> s26 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s26 [label="pw_mv_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s26 -> s26 [label="pw_mv_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s26 -> s26 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s26 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s59 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s104 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s26 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s26 -> s35 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s27 -> s91 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s27 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s2 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s27 -> s1 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s27 -> s104 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s27 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s27 -> s27 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s27 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s87 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s27 -> s27 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s34 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s27 -> s71 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s80 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s27 -> s27 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s27 -> s27 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s11 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s27 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s27 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s27 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s27 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s27 -> s27 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s27 -> s27 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s27 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s27 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s66 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s27 -> s16 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s28 -> s36 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s28 -> s52 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s28 -> s28 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s28 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s28 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s57 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s28 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s28 -> s28 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s28 -> s2 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s28 -> s87 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s28 -> s28 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s28 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s28 -> s30 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s28 -> s28 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s28 -> s67 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s28 -> s13 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s4 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s28 -> s43 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s28 -> s28 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s28 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s28 -> s43 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s28 -> s28 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s28 -> s28 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s28 -> s95 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s28 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s4 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s28 -> s112 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s28 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s28 -> s6 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s28 -> s17 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s28 -> s68 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s28 -> s9 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s28 -> s35 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s14 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s28 -> s28 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s74 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s28 -> s67 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s28 -> s35 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s28 -> s28 [label="pw_mv_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s28 -> s88 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s28 -> s28 [label="pw_mv_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s28 -> s24 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s28 -> s28 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s28 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s24 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s28 -> s28 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s28 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s28 -> s84 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s43 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s29 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s29 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s29 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s31 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s72 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s29 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s29 [label="pw_but_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s29 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s29 [label="pw_mv_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s29 [label="pw_mv_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s29 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s29 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s29 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s29 -> s66 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s30 -> s30 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s30 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s30 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s30 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s30 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s30 -> s83 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s24 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s30 -> s30 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s30 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s28 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s5 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s30 -> s46 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s3 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s30 -> s36 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s30 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s30 -> s30 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s30 -> s30 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s23 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s30 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s7 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s10 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s11 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s30 -> s16 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s30 -> s52 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s30 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s30 -> s20 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s30 -> s64 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s30 -> s1 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s30 -> s25 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s30 -> s30 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s30 -> s18 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s30 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s30 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s44 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s30 -> s30 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s31 -> s31 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s1 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s31 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s21 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s31 -> s52 [label="finger_detected / fp_on [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s60 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s31 -> s31 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s106 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s84 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s21 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s31 -> s10 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s31 -> s31 [label="fp_off / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s36 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s31 -> s31 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s31 -> s14 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s31 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s31 -> s36 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s31 -> s31 [label="fp_on / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s8 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s29 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s31 -> s36 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s85 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s31 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s33 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s31 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s85 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s31 -> s31 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s31 -> s9 [label="mpw_stop / pw_inactivated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s0 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s31 -> s31 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s31 -> s31 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s54 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s31 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s32 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s31 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s8 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s41 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s41 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s7 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s31 [label="pw_but_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s31 -> s63 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s31 -> s41 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s31 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s31 -> s19 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s25 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s65 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s54 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s31 -> s63 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s32 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s31 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s31 -> s31 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s31 -> s53 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s31 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s43 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s3 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s31 [label="pw_pos_up / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s31 [label="receiveMsg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s18 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s31 -> s31 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s33 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s32 -> s32 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s32 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s1 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s32 -> s32 [label="finger_detected / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s25 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s32 -> s32 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s32 -> s32 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s16 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s21 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s32 -> s32 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s32 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s22 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s32 -> s65 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s32 -> s32 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s49 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s32 -> s3 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s52 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s32 -> s34 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s38 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s23 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s32 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s32 -> s32 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s32 -> s65 [label="m_pw_msg / m_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s32 -> s43 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s32 -> s5 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s32 -> s32 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s0 [label="mpw_stop / pw_inactivated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s32 -> s32 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s19 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s32 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s33 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s31 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s32 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s6 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s32 -> s7 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s32 -> s39 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s6 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s41 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s32 -> s58 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s32 -> s41 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s41 [label="pw_but_dn / 1,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s32 -> s18 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s17 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s43 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s55 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s74 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s23 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s19 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s32 -> s32 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s32 -> s19 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s51 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s32 -> s32 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s32 -> s22 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s32 -> s32 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s32 -> s34 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s32 -> s43 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s32 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s25 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s46 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s32 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s83 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s32 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s3 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s32 -> s32 [label="release_pw_but / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s32 -> s31 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s33 -> s33 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s4 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s33 -> s9 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s1 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s33 -> s33 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s0 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s33 -> s79 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s33 -> s33 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s36 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s52 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s33 -> s2 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s33 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s33 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s33 -> s55 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s33 -> s41 [label="fp_on / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s33 -> s52 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s33 -> s33 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s33 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s50 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s33 -> s33 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s31 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s25 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s33 -> s49 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s70 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s33 -> s106 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s52 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s33 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s33 -> s33 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s33 -> s0 [label="mpw_stop / pw_inactivated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s22 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s33 -> s33 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s33 -> s1 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s33 -> s52 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s33 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s32 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s76 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s33 -> s18 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s33 -> s17 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s33 -> s86 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s11 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s53 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s33 -> s6 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s33 -> s6 [label="pw_but_dn / 1,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s63 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s33 -> s33 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s33 -> s19 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s33 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s33 -> s21 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s33 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s33 -> s33 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s33 -> s33 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s84 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s52 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s33 -> s76 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s33 -> s33 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s33 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s42 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s33 -> s65 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s33 -> s55 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s34 -> s34 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s99 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s34 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s34 -> s11 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s3 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s34 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s23 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s34 -> s43 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s43 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s34 -> s34 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s34 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s34 -> s23 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s34 -> s49 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s34 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s34 -> s34 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s88 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s34 -> s18 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s34 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s32 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s65 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s23 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s34 -> s27 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s34 -> s2 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s34 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s76 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s34 -> s34 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s34 -> s34 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s34 -> s34 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s103 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s18 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s34 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s13 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s34 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s34 -> s23 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s34 -> s9 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s34 -> s15 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s34 -> s92 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s63 [label="pw_but_dn / fp_off,1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s70 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s34 -> s54 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s34 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s45 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s75 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s48 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s55 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s34 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s34 -> s34 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s34 -> s20 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s34 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s34 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s34 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s1 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s34 -> s63 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s2 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s34 -> s18 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s35 -> s35 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s35 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s40 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s28 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s35 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s35 -> s89 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s19 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s6 [label="fp_off / pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s18 [label="fp_off / pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s16 [label="fp_off / pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s35 -> s3 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s22 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s35 -> s43 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s35 -> s7 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s41 [label="fp_off / pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s35 -> s35 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s35 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s35 -> s13 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s35 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s35 -> s20 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s35 -> s14 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s2 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s57 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s35 -> s35 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s35 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s35 -> s35 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s35 -> s35 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s109 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s37 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s35 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s35 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s110 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s13 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s14 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s35 -> s35 [label="pw_but_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s39 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s35 -> s35 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s35 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s35 -> s26 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s35 -> s35 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s35 -> s90 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s35 -> s35 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s35 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s7 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s35 -> s35 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s28 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s35 -> s35 [label="release_pw_but / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s35 -> s17 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s36 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s24 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s36 -> s36 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s36 -> s98 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s1 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s36 -> s0 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s52 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s36 -> s65 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s36 -> s33 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s36 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s31 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s36 -> s36 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s80 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s36 -> s36 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s36 -> s36 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s31 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s36 -> s22 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s36 -> s36 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s36 -> s52 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s36 -> s36 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s36 -> s20 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s51 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s36 -> s43 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s36 -> s22 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s36 -> s31 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s36 -> s36 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s36 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s36 -> s16 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s36 -> s1 [label="mpw_stop / pw_inactivated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s36 -> s7 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s36 -> s25 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s36 -> s23 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s36 -> s0 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s36 -> s36 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s72 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s36 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s103 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s91 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s36 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s86 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s36 -> s61 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s6 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s36 -> s13 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s36 -> s41 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s6 [label="pw_but_dn / fp_off,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s36 -> s92 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s36 -> s17 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s36 -> s36 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s52 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s36 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s36 -> s36 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s36 -> s76 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s36 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s36 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s36 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s72 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s36 -> s36 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s52 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s37 -> s37 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s37 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s37 -> s64 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s20 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s37 -> s37 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s25 [label="fp_off / pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s37 -> s37 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s37 -> s93 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s37 -> s37 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s38 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s37 -> s32 [label="fp_off / pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s37 -> s37 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s37 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s37 -> s8 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s37 -> s37 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s14 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s37 -> s84 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s37 -> s103 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s40 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s37 -> s37 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s37 -> s37 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s37 -> s20 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s35 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s37 -> s37 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s65 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s2 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s37 -> s86 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s38 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s37 -> s37 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s37 -> s40 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s37 -> s13 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s37 -> s3 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s37 -> s24 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s37 -> s37 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s42 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s37 -> s37 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s37 -> s67 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s37 -> s50 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s37 -> s84 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s37 -> s37 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s37 -> s4 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s37 -> s37 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s37 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s37 [label="receiveMsg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s37 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s37 -> s40 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s38 -> s38 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s38 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s2 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s3 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s38 -> s37 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s38 -> s38 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s6 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s38 -> s38 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s38 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s53 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s38 -> s38 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s11 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s38 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s38 -> s38 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s38 -> s32 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s13 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s17 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s38 -> s38 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s86 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s38 -> s38 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s38 -> s38 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s38 -> s38 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s106 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s38 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s92 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s38 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s38 -> s18 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s38 -> s69 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s38 -> s75 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s48 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s38 [label="pw_mv_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s38 -> s8 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s38 -> s38 [label="pw_mv_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s38 -> s86 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s38 -> s13 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s38 -> s14 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s38 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s8 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s38 -> s18 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s38 -> s38 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s38 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s78 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s38 -> s38 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s39 -> s39 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s39 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s39 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s39 -> s35 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s39 -> s2 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s39 -> s21 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s41 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s39 -> s28 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s39 -> s39 [label="fp_off / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s78 [label="fp_off / pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s39 -> s39 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s39 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s92 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s4 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s39 -> s57 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s39 -> s39 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s39 -> s39 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s39 -> s39 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s86 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s40 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s39 -> s39 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s39 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s40 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s39 -> s107 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s39 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s39 -> s9 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s39 -> s94 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s39 -> s108 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s39 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s39 -> s39 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s39 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s39 [label="release_pw_but / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s40 -> s40 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s40 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s0 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s39 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s103 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s40 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s2 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s84 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s40 -> s37 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s31 [label="fp_off / pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s40 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s41 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s17 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s6 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s19 [label="fp_off / pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s40 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s40 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s3 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s40 -> s13 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s37 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s25 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s40 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s61 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s40 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s40 -> s40 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s40 -> s13 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s17 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s40 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s72 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s39 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s17 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s7 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s35 [label="pw_but_dn / fp_off,1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s40 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s40 -> s55 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s40 -> s40 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s37 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s68 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s40 -> s10 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s40 -> s89 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s40 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s40 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s40 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s40 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s41 -> s41 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 -> s41 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 -> s31 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s64 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 -> s89 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s41 -> s25 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s2 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s41 -> s19 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s41 -> s32 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s22 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s41 -> s10 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s6 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s41 -> s41 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s41 -> s41 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 -> s53 [label="fp_off / pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s41 -> s66 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s41 -> s41 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 -> s6 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s41 -> s41 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s6 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s94 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s41 -> s41 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 -> s11 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s41 -> s41 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s41 -> s4 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s6 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s0 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 -> s41 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s41 -> s85 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s41 -> s41 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s41 -> s101 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 -> s41 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s17 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s41 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 -> s41 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s16 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 -> s41 [label="pw_but_dn / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 -> s41 [label="pw_but_dn / 1,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s41 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 -> s54 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s41 -> s11 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s70 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s31 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s41 -> s55 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s41 -> s41 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s41 -> s6 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s41 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s41 -> s18 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s63 [label="pw_pos_dn / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s18 [label="pw_pos_dn / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s34 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s41 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 -> s23 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s41 -> s41 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 -> s41 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s41 -> s44 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s11 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 -> s41 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s4 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s41 -> s16 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s42 -> s42 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s42 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s48 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s55 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s42 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s42 -> s42 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s42 -> s42 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s45 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s42 -> s57 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s6 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s49 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s42 -> s26 [label="fp_on / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s42 -> s13 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s75 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s42 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s42 -> s74 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s42 -> s42 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s75 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s42 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s42 -> s42 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s42 -> s42 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s45 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s42 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s38 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s42 -> s8 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s31 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s13 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s42 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s42 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s42 -> s42 [label="pw_mv_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s42 -> s75 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s42 -> s42 [label="pw_mv_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s42 -> s33 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s42 -> s42 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s42 -> s52 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s72 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s51 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s42 -> s49 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s42 -> s33 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s42 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s42 -> s42 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s42 -> s24 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s43 -> s43 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 -> s43 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 -> s43 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 -> s43 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 -> s43 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s43 -> s35 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s43 -> s43 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s43 -> s28 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 -> s25 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s34 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s43 -> s28 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s43 -> s19 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 -> s43 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s43 -> s36 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s21 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s43 -> s43 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 -> s43 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s43 -> s49 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s43 -> s1 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s43 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s43 -> s2 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 -> s21 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s43 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 -> s48 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 -> s65 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s63 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s43 -> s13 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s43 -> s38 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s17 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s43 -> s29 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s43 -> s34 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s31 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 -> s17 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s70 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s54 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s43 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 -> s84 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s43 -> s25 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s43 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s43 -> s46 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s43 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s43 -> s11 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s43 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 -> s2 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s43 -> s43 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s43 -> s103 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 -> s64 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s43 -> s43 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 -> s43 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s44 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s43 -> s2 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s44 -> s51 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s44 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s44 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s44 -> s24 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s44 -> s83 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s7 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s44 -> s44 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s16 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s44 -> s44 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s44 -> s44 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s44 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s63 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s44 -> s9 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s19 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s44 -> s51 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s44 -> s72 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s44 -> s52 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s44 -> s44 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s44 -> s44 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s11 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s44 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s44 [label="pw_but_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s66 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s44 -> s44 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s43 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s44 -> s66 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s44 -> s2 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s44 -> s87 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s44 -> s44 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s44 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s44 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s44 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s45 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s45 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s3 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s70 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s45 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s45 -> s74 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s54 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s45 -> s45 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s45 -> s45 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s42 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s40 [label="fp_on / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s89 [label="fp_on / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s61 [label="fp_on / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s77 [label="fp_on / pw_mv_stop,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s45 -> s6 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s14 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s35 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s49 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s45 -> s56 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s45 -> s45 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s18 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s55 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s69 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s54 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s19 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s45 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s45 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s45 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s42 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s45 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s75 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s18 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s63 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s45 -> s53 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s45 -> s53 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s6 [label="pw_but_dn / fp_off,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s86 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s53 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s6 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s45 -> s63 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s17 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s45 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s45 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s70 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s45 -> s45 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s45 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s55 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s45 -> s45 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s36 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s3 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s45 -> s51 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s33 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s85 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s45 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s55 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s45 -> s25 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s45 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s46 -> s46 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s46 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s46 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s46 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s46 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s46 -> s46 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s60 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s46 -> s30 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s20 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s46 -> s46 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s46 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s46 -> s46 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s46 -> s46 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s57 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s46 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s14 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s46 -> s10 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s46 -> s61 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s23 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s46 -> s19 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s46 -> s24 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s46 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s46 -> s70 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s46 -> s46 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s46 -> s46 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s46 -> s46 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s46 -> s47 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s46 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s46 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s21 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s46 -> s43 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s46 -> s5 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s47 -> s47 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 -> s47 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 -> s47 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 -> s47 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s47 -> s47 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 -> s62 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s47 -> s47 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 -> s18 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 -> s25 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s47 -> s47 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 -> s47 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s47 -> s47 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s47 -> s47 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 -> s105 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 -> s47 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 -> s73 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s47 -> s84 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 -> s13 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s47 -> s2 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 -> s47 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s47 -> s55 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s47 -> s47 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s47 -> s47 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s47 -> s47 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 -> s47 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 -> s47 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 -> s23 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s47 -> s5 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s48 -> s48 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s48 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s75 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s48 -> s42 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s48 -> s48 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s48 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s17 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s48 -> s48 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s48 -> s50 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s48 -> s57 [label="fp_on / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s48 -> s40 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s48 -> s112 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s9 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s48 -> s74 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s48 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s48 -> s24 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s48 -> s54 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s48 -> s18 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s48 -> s48 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s48 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s48 -> s48 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s48 -> s48 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s43 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s48 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s8 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s48 -> s8 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s38 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s48 -> s58 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s48 -> s13 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s48 -> s48 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s48 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s48 -> s74 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s48 -> s54 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s48 -> s76 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s48 -> s79 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s48 -> s48 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s72 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s48 -> s32 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s48 -> s36 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s48 -> s34 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s48 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s48 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s49 -> s49 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s25 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s49 -> s49 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s49 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s3 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s49 -> s34 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s49 -> s49 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s93 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s49 -> s90 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s49 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s49 -> s49 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s49 -> s49 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s33 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s49 -> s32 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s49 -> s51 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s49 -> s2 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s21 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s49 -> s49 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s49 -> s33 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s49 -> s20 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s49 -> s49 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s49 -> s49 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s19 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s49 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s9 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s49 -> s38 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s49 -> s56 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s10 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s49 -> s66 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s49 -> s4 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s49 -> s53 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s49 -> s3 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s49 -> s49 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s19 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s49 -> s49 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s49 -> s50 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s49 -> s49 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s49 -> s67 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s49 -> s49 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s49 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s49 -> s20 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s49 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s16 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s49 -> s52 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s49 -> s49 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s50 -> s50 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s50 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s50 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s50 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s96 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s50 -> s34 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s50 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s50 -> s50 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s50 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s77 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s73 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s50 -> s82 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s50 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s50 -> s50 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s50 -> s50 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s4 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s50 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s6 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s56 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s50 -> s108 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s75 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s50 -> s50 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s50 -> s74 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s50 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s50 -> s50 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s50 -> s50 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s50 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s50 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s37 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s50 -> s49 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s51 -> s51 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s101 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s51 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s51 -> s22 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s51 -> s21 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s51 -> s20 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s51 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s51 -> s3 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s51 -> s51 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s52 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s51 -> s51 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s51 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s51 -> s49 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s51 -> s51 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s36 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s51 -> s51 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s51 -> s17 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s70 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s51 -> s51 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s51 -> s1 [label="mpw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s51 -> s41 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s51 -> s28 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s51 -> s46 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s51 -> s51 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s25 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s51 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s38 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s51 -> s86 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s51 -> s10 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s53 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s51 -> s38 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s51 -> s51 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s51 [label="pw_mv_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s51 -> s65 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s51 -> s52 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s51 -> s51 [label="pw_mv_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s51 -> s51 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s51 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s51 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s51 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s51 -> s32 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s52 -> s52 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s52 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s0 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s52 -> s24 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s8 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s52 -> s33 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s52 -> s31 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s21 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s36 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s52 [label="finger_detected / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s25 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s52 -> s33 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s52 -> s52 [label="fp_off / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s52 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s51 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s52 [label="fp_on / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s52 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s52 -> s33 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s52 -> s52 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s33 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s72 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s52 -> s17 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s36 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s32 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s52 -> s24 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s52 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s52 -> s52 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s52 -> s88 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s52 -> s10 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s7 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s30 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s52 -> s1 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s52 -> s52 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s52 -> s24 [label="mpw_stop / pw_inactivated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s52 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s33 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s52 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s6 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s78 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s52 -> s41 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s6 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s10 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s13 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s86 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s52 -> s63 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s52 -> s41 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s52 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s52 -> s49 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s55 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s52 -> s49 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s52 -> s52 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s52 -> s36 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s52 -> s52 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s52 -> s52 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s52 [label="pw_pos_up / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s52 [label="receiveMsg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s36 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s52 [label="release_pw_but / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s52 -> s51 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s53 -> s53 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s53 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s93 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s53 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s43 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s49 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s53 -> s53 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s53 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s53 -> s13 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s53 -> s38 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s53 -> s53 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s53 -> s53 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s53 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s53 -> s92 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s11 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s53 -> s53 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s53 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s53 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s8 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s53 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s11 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s17 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s53 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s18 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s33 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s17 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s53 -> s45 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s53 -> s58 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s53 -> s53 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s53 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s78 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s53 -> s11 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s53 -> s8 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s53 -> s53 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s10 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s53 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s53 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s53 -> s31 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s53 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s53 -> s58 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s54 -> s54 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s54 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s54 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s42 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s54 -> s55 [label="finger_detected / fp_on [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s54 -> s75 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s54 -> s45 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s24 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s54 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s74 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s54 -> s54 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s54 -> s70 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s54 -> s39 [label="fp_on / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s54 -> s35 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s13 [label="fp_on / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s54 -> s56 [label="fp_on / pw_mv_stop,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s54 -> s40 [label="fp_on / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s54 -> s54 [label="fp_on / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s56 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s54 -> s61 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s54 -> s2 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s63 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s54 -> s48 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s54 -> s56 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s45 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s54 -> s54 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s54 -> s55 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s54 -> s54 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s70 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s54 -> s54 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s54 -> s54 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s54 -> s54 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s31 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s70 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s54 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s18 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s78 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s54 -> s11 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s41 [label="pw_but_dn / fp_off,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s54 -> s41 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s54 -> s31 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s54 -> s8 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s54 -> s61 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s54 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s54 -> s54 [label="pw_but_up / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s54 -> s69 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s54 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s54 -> s69 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s54 -> s54 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s54 -> s70 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s54 -> s54 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s76 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s54 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s25 [label="pw_pos_up / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s54 -> s31 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s54 -> s52 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s54 -> s17 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s54 -> s22 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s54 -> s54 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s48 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s54 -> s54 [label="release_pw_but / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s54 -> s70 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s55 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s55 -> s55 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s55 -> s48 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s55 -> s54 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s55 -> s19 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s55 [label="finger_detected / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s55 -> s55 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s55 -> s55 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s55 -> s45 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s55 -> s37 [label="fp_on / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s55 -> s40 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s55 -> s13 [label="fp_on / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s77 [label="fp_on / pw_mv_stop,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s55 -> s4 [label="fp_on / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s55 -> s50 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s55 -> s35 [label="fp_on / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s20 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s55 -> s77 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s55 -> s54 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s55 -> s55 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s55 -> s70 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s55 -> s70 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s55 -> s55 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s55 -> s45 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s55 -> s55 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s55 -> s55 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s55 -> s55 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s70 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s55 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s31 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s55 -> s11 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s55 -> s8 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s41 [label="pw_but_dn / 1,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s55 -> s58 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s55 -> s38 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s55 -> s41 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s55 -> s6 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s78 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s55 -> s55 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s55 -> s55 [label="pw_but_up / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s55 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s55 -> s45 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s55 -> s55 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s55 -> s33 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s55 -> s55 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s55 -> s21 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s55 -> s32 [label="pw_pos_up / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s55 -> s63 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s55 -> s52 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s25 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s55 -> s55 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s55 -> s70 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s45 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s55 -> s55 [label="release_pw_but / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s56 -> s56 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s56 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s52 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s77 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s56 -> s56 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s56 -> s50 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s56 -> s56 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s38 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s56 -> s78 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s56 -> s41 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s56 -> s32 [label="fp_off / pw_mv_dn,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s56 -> s56 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s56 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s56 -> s56 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s6 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s56 -> s54 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s10 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s56 -> s56 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s56 -> s56 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s56 -> s56 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s56 -> s56 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s85 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s56 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s56 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s56 -> s77 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s56 -> s10 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s56 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s56 -> s70 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s56 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s56 -> s56 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s56 -> s56 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s56 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s56 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s3 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s56 -> s9 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s57 -> s57 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s57 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s57 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s82 [label="fp_off / pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s57 -> s43 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s57 -> s57 [label="fp_off / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s57 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s23 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s39 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s57 -> s35 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s57 -> s57 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s57 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s57 -> s57 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s57 -> s46 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s57 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s60 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s61 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s57 -> s4 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s57 -> s7 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s106 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s57 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s57 -> s95 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s57 -> s89 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s57 -> s57 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s57 -> s105 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s57 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s57 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s57 [label="release_pw_but / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s82 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s20 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s58 -> s58 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s58 -> s58 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s58 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s8 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s58 -> s78 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s58 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s58 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s58 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s58 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s55 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s74 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s58 -> s58 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s58 -> s86 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s58 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s58 -> s53 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s10 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s58 -> s40 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s58 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s58 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s58 [label="release_pw_but / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s58 -> s53 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s59 -> s76 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s59 -> s34 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 -> s59 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 -> s59 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 -> s59 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 -> s59 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 -> s104 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 -> s59 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 -> s59 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 -> s100 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 -> s4 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s59 -> s59 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 -> s71 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 -> s59 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 -> s59 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 -> s59 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 -> s59 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s60 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s60 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s60 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s60 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s46 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s60 -> s60 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s60 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s60 -> s60 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s60 -> s21 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s93 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s60 -> s60 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s60 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s60 -> s60 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s60 -> s60 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s57 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s60 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s92 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s60 -> s92 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s31 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s60 -> s75 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s60 -> s38 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s60 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s60 -> s60 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s60 -> s82 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s60 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s60 -> s50 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s60 -> s60 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s60 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s16 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s60 -> s4 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s61 -> s61 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 -> s61 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 -> s46 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 -> s57 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s95 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s61 -> s61 [label="fp_off / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 -> s86 [label="fp_off / pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s61 -> s63 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s61 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 -> s9 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s61 -> s10 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 -> s40 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s61 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 -> s61 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s61 -> s61 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s61 -> s61 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 -> s7 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 -> s61 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 -> s61 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 -> s54 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 -> s61 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s61 -> s61 [label="pw_mv_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s61 -> s61 [label="pw_mv_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s61 -> s84 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 -> s61 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s61 -> s61 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 -> s61 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 -> s4 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s62 -> s62 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s62 -> s47 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s62 -> s62 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s62 -> s62 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s62 -> s62 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s62 -> s68 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s62 -> s33 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s62 -> s62 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s62 -> s62 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s62 -> s62 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s62 -> s62 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s62 -> s62 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s62 -> s4 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s63 -> s63 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s63 -> s63 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s63 -> s25 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s63 -> s87 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s63 -> s23 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s19 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s63 -> s32 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s63 -> s34 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s63 -> s43 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s63 -> s63 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s63 -> s9 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s63 -> s58 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s63 -> s63 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s63 -> s11 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s63 -> s63 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s63 -> s63 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s63 -> s35 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s63 -> s44 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s63 -> s17 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s63 -> s79 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s63 -> s63 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s63 -> s6 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s63 -> s18 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s63 -> s11 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s63 -> s63 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s63 -> s63 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s63 -> s70 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s63 -> s63 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s63 -> s0 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s63 -> s69 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s63 -> s63 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s18 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s63 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s63 -> s76 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s63 -> s63 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s58 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s63 -> s31 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s63 -> s6 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s63 -> s63 [label="pw_but_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s63 -> s45 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s63 -> s31 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s63 -> s70 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s55 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s63 -> s63 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s63 -> s54 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s63 -> s42 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s23 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s63 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s63 -> s85 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s63 -> s63 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s63 -> s76 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s63 -> s34 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s41 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s63 -> s63 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s63 -> s40 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s63 -> s63 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s63 -> s63 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s63 -> s63 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s63 -> s9 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s64 -> s64 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s64 -> s64 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s64 -> s64 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s64 -> s64 [label="fp_off / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s64 -> s64 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s64 -> s64 [label="fp_on / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s64 -> s7 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s64 -> s64 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s64 -> s97 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s64 -> s32 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s64 -> s64 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s64 -> s102 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s64 -> s64 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s64 -> s26 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s64 -> s41 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s64 -> s64 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s64 -> s64 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s64 -> s64 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s64 -> s64 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s64 -> s64 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s64 -> s5 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s64 -> s64 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s64 -> s30 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s65 -> s65 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 -> s65 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s65 -> s26 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 -> s65 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 -> s65 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 -> s32 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s65 -> s65 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s65 -> s65 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 -> s21 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s65 -> s6 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s65 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 -> s65 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s34 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 -> s65 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s65 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s4 [label="mpw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s65 -> s3 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s65 -> s35 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s65 -> s65 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 -> s37 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 -> s43 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s65 -> s65 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 -> s86 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s8 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s65 -> s39 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 -> s41 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s65 -> s17 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s65 -> s74 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s54 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s65 -> s65 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 -> s65 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s21 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s65 -> s65 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s33 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s65 -> s28 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s65 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 -> s65 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 -> s65 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 -> s82 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s65 -> s65 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s65 -> s51 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s66 -> s40 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s66 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s7 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s66 -> s49 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s66 -> s100 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s44 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s66 -> s66 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s41 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s66 -> s66 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s66 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s66 -> s11 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s66 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s66 -> s18 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s66 -> s66 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s22 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s66 -> s52 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s66 -> s17 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s66 -> s66 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s66 -> s9 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s66 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s71 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s66 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s66 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s29 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s66 -> s66 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s66 -> s27 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s66 -> s66 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s66 -> s66 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s66 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s66 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s44 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s66 -> s66 [label="release_pw_but / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s66 -> s10 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s67 -> s67 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s67 -> s67 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s67 -> s4 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s67 -> s67 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s67 -> s67 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s67 -> s20 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s67 -> s67 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s67 -> s67 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s67 -> s67 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s67 -> s28 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s67 -> s84 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s67 -> s6 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s67 -> s67 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s67 -> s67 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s67 -> s22 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s67 -> s67 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s67 -> s108 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s67 -> s6 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s67 -> s67 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s67 -> s8 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s67 -> s8 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s67 -> s75 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s67 -> s79 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s67 -> s3 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s67 -> s42 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s67 -> s67 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s67 -> s67 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s67 -> s67 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s67 -> s60 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s67 -> s67 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s67 -> s67 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s67 -> s37 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s68 -> s68 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s68 -> s68 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s68 -> s82 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s68 -> s28 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s68 -> s62 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s68 -> s73 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s68 -> s68 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s68 -> s68 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s68 -> s68 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s68 -> s8 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s68 -> s108 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s68 -> s68 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s68 -> s68 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s68 -> s68 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s68 -> s68 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s68 -> s6 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s68 -> s68 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s68 -> s68 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s68 -> s76 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s68 -> s45 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s68 -> s68 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s68 -> s68 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s68 -> s68 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s68 -> s68 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s68 -> s68 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s68 -> s40 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s68 -> s18 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s69 -> s69 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s69 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s42 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s69 -> s2 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s69 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s109 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s9 [label="fp_on / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s69 -> s69 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s69 -> s70 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s45 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s69 -> s69 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s69 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s69 -> s69 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s69 -> s69 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s63 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s69 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s54 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s38 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s69 -> s69 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s69 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s69 -> s69 [label="pw_mv_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s69 -> s69 [label="pw_mv_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s69 -> s69 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s72 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s69 -> s17 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s69 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s54 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s70 -> s70 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 -> s70 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 -> s75 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s70 -> s70 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s70 -> s25 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s70 -> s49 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 -> s45 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s70 -> s17 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s70 -> s55 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s70 -> s70 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 -> s70 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s70 -> s13 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s70 -> s70 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s70 -> s56 [label="fp_on / pw_mv_stop,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s70 -> s77 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s70 -> s94 [label="fp_on / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 -> s37 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s70 -> s35 [label="fp_on / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s70 -> s19 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s70 -> s17 [label="fp_on / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s70 -> s55 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s70 -> s70 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 -> s51 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s70 -> s54 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s70 -> s55 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s70 -> s70 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s70 -> s33 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s70 -> s69 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 -> s70 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s70 -> s70 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s70 -> s4 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s70 -> s70 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 -> s55 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s70 -> s79 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 -> s70 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s70 -> s70 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 -> s54 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s70 -> s41 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s70 -> s58 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s70 -> s11 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s70 -> s17 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s70 -> s92 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s70 -> s63 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s70 -> s6 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s70 -> s56 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 -> s6 [label="pw_but_dn / 1,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s70 -> s53 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s70 -> s63 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s70 -> s70 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s70 -> s70 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 -> s55 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s70 -> s70 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s70 -> s70 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s70 -> s54 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s70 -> s70 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 -> s51 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 -> s65 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s70 -> s70 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s70 -> s36 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s70 -> s32 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s70 -> s33 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s70 -> s80 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s70 -> s70 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 -> s70 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s70 -> s45 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s70 -> s54 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s71 -> s72 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s71 -> s91 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s71 -> s71 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s71 -> s59 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s71 -> s71 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s71 -> s71 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s71 -> s27 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s71 -> s71 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s71 -> s71 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s71 -> s10 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s71 -> s66 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s71 -> s71 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s71 -> s71 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s71 -> s71 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s71 -> s71 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s71 -> s71 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s71 -> s71 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s72 -> s72 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s72 -> s12 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s72 -> s1 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s72 -> s51 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s72 -> s49 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s72 -> s34 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s72 -> s52 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s72 -> s25 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s72 -> s81 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s72 -> s72 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s72 -> s72 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s72 -> s72 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s72 -> s91 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s72 -> s72 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s72 -> s52 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s72 -> s72 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s72 -> s85 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s72 -> s72 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s72 -> s1 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s72 -> s6 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s72 -> s72 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s72 -> s72 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s72 -> s40 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s72 -> s36 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s72 -> s72 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s72 -> s92 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s72 -> s6 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s72 -> s38 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s72 -> s72 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s72 -> s22 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s72 -> s72 [label="pw_mv_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s72 -> s72 [label="pw_mv_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s72 -> s36 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s72 -> s72 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s72 -> s72 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s72 -> s72 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s72 -> s17 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s72 -> s72 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s73 -> s73 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s73 -> s47 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s73 -> s73 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s73 -> s73 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s73 -> s68 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s73 -> s73 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s73 -> s50 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s73 -> s73 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s73 -> s73 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s73 -> s73 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s73 -> s73 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s73 -> s10 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s73 -> s79 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s73 -> s73 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s73 -> s73 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s73 -> s73 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s73 -> s73 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s73 -> s73 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s73 -> s11 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s73 -> s84 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s74 -> s74 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s74 -> s74 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s74 -> s70 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s74 -> s74 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s74 -> s74 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s74 -> s74 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s74 -> s95 [label="fp_on / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s74 -> s63 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s74 -> s89 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s74 -> s42 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s74 -> s74 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s74 -> s74 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s74 -> s48 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s74 -> s74 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s74 -> s74 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s74 -> s74 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s74 -> s19 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s74 -> s74 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s74 -> s58 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s74 -> s86 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s74 -> s107 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s74 -> s74 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s74 -> s74 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s74 -> s74 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s74 -> s74 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s74 -> s74 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s74 -> s85 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s74 -> s51 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s74 -> s65 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s74 -> s74 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s74 -> s17 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s74 -> s48 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s75 -> s75 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s75 -> s75 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s75 -> s75 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s75 -> s18 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s75 -> s54 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s75 -> s75 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s75 -> s70 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s75 -> s75 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s75 -> s19 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s75 -> s39 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s75 -> s90 [label="fp_on / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s75 -> s56 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s75 -> s75 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s75 -> s42 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s75 -> s75 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s75 -> s42 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s75 -> s79 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s75 -> s75 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s75 -> s75 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s75 -> s75 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s75 -> s45 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s75 -> s75 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s75 -> s11 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s75 -> s8 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s75 -> s38 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s75 -> s8 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s75 -> s92 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s75 -> s75 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s75 -> s75 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s75 -> s75 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s75 -> s75 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s75 -> s75 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s75 -> s25 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s75 -> s91 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s75 -> s36 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s75 -> s17 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s75 -> s65 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s75 -> s75 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s75 -> s42 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s75 -> s24 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s76 -> s76 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 -> s26 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s76 -> s76 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 -> s22 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s76 -> s76 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s76 -> s48 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 -> s33 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s76 -> s79 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s76 -> s76 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 -> s110 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 -> s76 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s76 -> s56 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s76 -> s80 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s76 -> s3 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 -> s76 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 -> s76 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s76 -> s13 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s76 -> s76 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s76 -> s9 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s76 -> s76 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 -> s33 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s76 -> s63 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 -> s76 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 -> s18 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s76 -> s8 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 -> s41 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s76 -> s86 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s76 -> s53 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s76 -> s76 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 -> s76 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s76 -> s76 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s76 -> s76 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s76 -> s76 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 -> s72 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 -> s76 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s76 -> s36 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s76 -> s76 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 -> s36 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s76 -> s48 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s76 -> s63 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s77 -> s77 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s77 -> s77 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s77 -> s77 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s77 -> s56 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s77 -> s32 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s77 -> s6 [label="fp_off / pw_mv_dn,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s77 -> s2 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s77 -> s77 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s77 -> s50 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s77 -> s77 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s77 -> s77 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s77 -> s77 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s77 -> s56 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s77 -> s77 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s77 -> s77 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s77 -> s77 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s77 -> s77 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s77 -> s77 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s78 -> s96 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s78 -> s16 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s78 -> s78 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s78 -> s78 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s78 -> s78 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s78 -> s86 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s78 -> s78 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s78 -> s58 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s78 -> s78 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s78 -> s78 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s78 -> s78 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s78 -> s79 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s78 -> s54 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s78 -> s78 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s78 -> s38 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s78 -> s78 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s78 -> s92 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s78 -> s3 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s78 -> s73 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s78 -> s78 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s78 -> s78 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s78 -> s53 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s78 -> s78 [label="release_pw_but / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s79 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s79 -> s79 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s79 -> s19 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s79 -> s55 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s79 -> s79 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s79 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s79 -> s79 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s79 -> s14 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s79 -> s56 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s79 -> s89 [label="fp_on / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s75 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s79 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s79 -> s63 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s79 -> s79 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s79 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s79 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s70 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s79 -> s79 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s79 -> s3 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s79 -> s78 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s79 -> s53 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s85 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s79 -> s79 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s79 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s79 -> s79 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s79 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s79 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s79 -> s22 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s79 -> s25 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s79 -> s80 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s79 -> s79 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s79 -> s17 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s79 -> s48 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s25 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s80 -> s36 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s80 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s80 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s80 -> s80 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s36 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s80 -> s80 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s76 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s80 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s7 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s15 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s80 -> s92 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s78 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s80 -> s80 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s80 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s80 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s80 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s80 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s80 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s17 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s80 -> s81 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s81 -> s3 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s81 -> s81 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s81 -> s72 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s81 -> s81 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s81 -> s0 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s81 -> s53 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s81 -> s81 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s81 -> s85 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s81 -> s80 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s81 -> s81 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s81 -> s81 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s81 -> s81 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s81 -> s81 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s82 -> s82 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s82 -> s82 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s82 -> s82 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s82 -> s82 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s82 -> s82 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s82 -> s16 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s82 -> s50 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s82 -> s82 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s82 -> s82 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s82 -> s82 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s82 -> s82 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s82 -> s105 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s82 -> s82 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s82 -> s68 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s82 -> s58 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s82 -> s48 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s82 -> s65 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s82 -> s93 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s82 -> s82 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s82 -> s84 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s82 -> s82 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s82 -> s82 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s82 -> s82 [label="release_pw_but / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s83 -> s20 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 -> s83 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 -> s83 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 -> s83 [label="fp_off / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 -> s30 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s83 -> s83 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s83 -> s83 [label="fp_on / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 -> s83 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 -> s87 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 -> s22 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s83 -> s83 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s83 -> s83 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 -> s5 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 -> s83 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 -> s44 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 -> s83 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 -> s83 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 -> s83 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 -> s83 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s84 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s84 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s47 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s84 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s84 -> s24 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s84 -> s84 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s96 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s84 -> s84 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s84 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s84 -> s37 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s84 -> s22 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s67 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s84 -> s84 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s84 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s84 -> s84 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s84 -> s84 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s6 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s84 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s84 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s63 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s84 -> s31 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s84 -> s40 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s84 -> s86 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s84 -> s48 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s84 -> s69 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s21 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s84 -> s33 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s84 -> s42 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s84 -> s84 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s84 -> s28 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s84 -> s73 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s84 -> s84 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s84 -> s84 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s62 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s84 -> s84 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s84 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s84 [label="release_pw_but / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s84 -> s37 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s85 -> s85 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 -> s85 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 -> s51 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s85 -> s32 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s85 -> s33 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 -> s85 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s85 -> s85 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 -> s22 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s85 -> s85 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 -> s85 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 -> s72 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s85 -> s85 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s85 -> s31 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 -> s85 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s85 -> s14 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s85 -> s13 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s85 -> s56 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 -> s85 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 -> s107 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 -> s58 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s85 -> s86 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 -> s85 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s85 -> s79 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 -> s85 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s85 -> s85 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s85 -> s85 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 -> s85 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 -> s85 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 -> s63 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s85 -> s81 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s86 -> s86 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s86 -> s86 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s86 -> s65 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s86 -> s84 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s86 -> s23 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s86 -> s78 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s86 -> s86 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s86 -> s86 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s86 -> s86 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s86 -> s38 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s86 -> s86 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s86 -> s86 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s86 -> s7 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s86 -> s86 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s86 -> s86 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s86 -> s10 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s86 -> s86 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s86 -> s39 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s86 -> s86 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s86 -> s86 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s86 -> s85 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s86 -> s76 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s86 -> s45 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s86 -> s86 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s86 -> s86 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s86 -> s67 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s86 -> s68 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s86 -> s86 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s86 -> s86 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s86 -> s58 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s86 -> s38 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s87 -> s36 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s87 -> s87 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s87 -> s87 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s87 -> s21 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s87 -> s28 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s87 -> s27 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s87 -> s87 [label="fp_off / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s87 -> s87 [label="fp_on / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s87 -> s87 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s87 -> s83 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s87 -> s87 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s87 -> s25 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s87 -> s36 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s87 -> s87 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s87 -> s87 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s87 -> s100 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s87 -> s87 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s87 -> s63 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s87 -> s9 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s87 -> s87 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s87 -> s87 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s87 -> s87 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s87 -> s87 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s87 -> s87 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s87 -> s87 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s87 -> s87 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s87 -> s44 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s88 -> s88 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s88 -> s34 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s88 -> s88 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s88 -> s88 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s88 -> s88 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s88 -> s23 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s88 -> s88 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s88 -> s88 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s88 -> s88 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s88 -> s88 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s88 -> s88 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s88 -> s21 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s88 -> s28 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s89 -> s89 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s89 -> s89 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s89 -> s89 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s89 -> s53 [label="fp_off / pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s89 -> s21 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s89 -> s93 [label="fp_off / pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s89 -> s89 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s89 -> s90 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s89 -> s89 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s89 -> s89 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s89 -> s112 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s89 -> s89 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s89 -> s89 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s89 -> s89 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s89 -> s13 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s89 -> s89 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s89 -> s35 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s89 -> s111 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s89 -> s41 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s89 -> s89 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s89 -> s89 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s89 -> s89 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s89 -> s89 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s89 -> s89 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s89 -> s89 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s89 -> s40 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s89 -> s57 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s90 -> s90 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 -> s90 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 -> s90 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 -> s60 [label="fp_off / pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s90 -> s30 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 -> s90 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 -> s90 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 -> s89 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s90 -> s95 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 -> s90 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s90 -> s90 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s90 -> s90 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 -> s13 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 -> s90 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 -> s94 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 -> s90 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 -> s90 [label="pw_mv_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s90 -> s90 [label="pw_mv_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s90 -> s90 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 -> s90 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 -> s90 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 -> s35 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s91 -> s91 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 -> s16 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 -> s9 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s91 -> s65 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 -> s76 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s91 -> s91 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 -> s91 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 -> s91 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 -> s72 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 -> s91 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 -> s36 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s91 -> s25 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 -> s91 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 -> s39 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 -> s41 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s91 -> s91 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 -> s91 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 -> s91 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 -> s91 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s92 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s92 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s60 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s92 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s92 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s39 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s92 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s92 -> s53 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s92 -> s92 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s92 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s92 -> s92 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s92 -> s92 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s7 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s92 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s92 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s92 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s92 -> s70 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s92 -> s8 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s92 [label="pw_mv_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s92 -> s92 [label="pw_mv_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s92 -> s68 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s56 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s92 -> s92 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s92 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s78 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s93 -> s93 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s93 -> s93 [label="fp_off / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s93 -> s93 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s93 -> s37 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s93 -> s93 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s93 -> s60 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s93 -> s93 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s93 -> s93 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s93 -> s93 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s93 -> s53 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s93 -> s79 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s93 -> s45 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s93 -> s20 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s93 -> s93 [label="pw_mv_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s93 -> s93 [label="pw_mv_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s93 -> s96 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s93 -> s5 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s93 -> s73 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s93 -> s93 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s93 -> s93 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s93 -> s82 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s93 -> s93 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s94 -> s94 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 -> s94 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 -> s90 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 -> s92 [label="fp_off / pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s94 -> s10 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 -> s94 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 -> s94 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 -> s41 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s94 -> s109 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 -> s94 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s94 -> s94 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s94 -> s94 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 -> s14 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 -> s94 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 -> s94 [label="pw_but_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 -> s94 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 -> s94 [label="pw_mv_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s94 -> s94 [label="pw_mv_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s94 -> s94 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 -> s94 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 -> s94 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 -> s39 [label="release_pw_but / led_pw_up_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s95 -> s95 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 -> s95 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 -> s95 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 -> s65 [label="fp_off / pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s95 -> s46 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 -> s95 [label="fp_on / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 -> s26 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s95 -> s90 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 -> s95 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 -> s95 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s95 -> s95 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s95 -> s95 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 -> s28 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 -> s95 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 -> s109 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 -> s61 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s95 -> s95 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 -> s95 [label="pw_mv_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s95 -> s95 [label="pw_mv_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s95 -> s95 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 -> s95 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 -> s95 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))) or (Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 -> s57 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection)))))]"];
	s96 -> s96 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s96 -> s96 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s96 -> s84 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s96 -> s96 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s96 -> s96 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s96 -> s78 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s96 -> s55 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s96 -> s96 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s96 -> s96 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s96 -> s47 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s96 -> s96 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s96 -> s96 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s96 -> s93 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s97 -> s97 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s97 -> s97 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s97 -> s97 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s97 -> s97 [label="fp_off / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s97 -> s97 [label="fp_on / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s97 -> s64 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s97 -> s97 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s97 -> s98 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s97 -> s97 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s97 -> s99 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s97 -> s0 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s97 -> s97 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s97 -> s97 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s97 -> s97 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s97 -> s100 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s98 -> s98 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s98 -> s98 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s98 -> s98 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s98 -> s98 [label="fp_off / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s98 -> s98 [label="fp_on / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s98 -> s102 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s98 -> s98 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s98 -> s98 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s98 -> s97 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s98 -> s98 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s98 -> s12 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s98 -> s98 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s98 -> s98 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s98 -> s98 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s98 -> s87 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s99 -> s99 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s99 -> s99 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s99 -> s99 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s99 -> s99 [label="fp_off / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s99 -> s99 [label="fp_on / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s99 -> s26 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s99 -> s99 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s99 -> s99 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s99 -> s97 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s99 -> s99 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s99 -> s1 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s99 -> s99 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s99 -> s99 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s99 -> s99 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s99 -> s59 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s100 -> s103 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s100 -> s100 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s100 -> s100 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s100 -> s100 [label="fp_off / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s100 -> s100 [label="fp_on / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s100 -> s5 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s100 -> s100 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s100 -> s87 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s100 -> s100 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s100 -> s59 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s100 -> s66 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s100 -> s100 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s100 -> s100 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s100 -> s100 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s100 -> s100 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s101 -> s101 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s101 -> s101 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s101 -> s102 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s101 -> s101 [label="fp_off / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s101 -> s101 [label="fp_on / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s101 -> s101 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s101 -> s12 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s101 -> s101 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s101 -> s41 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s101 -> s101 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s101 -> s101 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s101 -> s101 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s101 -> s101 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s101 -> s101 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s101 -> s44 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s102 -> s102 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s102 -> s102 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s102 -> s102 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s102 -> s102 [label="fp_off / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s102 -> s102 [label="fp_on / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s102 -> s102 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s102 -> s98 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s102 -> s102 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s102 -> s64 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s102 -> s102 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s102 -> s101 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s102 -> s102 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s102 -> s102 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s102 -> s102 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s102 -> s83 [label="receiveMsg / pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s103 -> s103 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s103 -> s97 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s103 -> s103 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s103 -> s103 [label="fp_off / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s103 -> s103 [label="fp_on / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s103 -> s37 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s103 -> s103 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s103 -> s36 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s103 -> s103 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s103 -> s34 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s103 -> s7 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s103 -> s103 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s103 -> s103 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s103 -> s103 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s103 -> s103 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s104 -> s65 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s104 -> s104 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s104 -> s104 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s104 -> s104 [label="fp_off / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s104 -> s104 [label="fp_on / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s104 -> s104 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s104 -> s59 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s104 -> s104 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s104 -> s5 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s104 -> s104 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s104 -> s27 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s104 -> s104 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s104 -> s104 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s104 -> s104 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s104 -> s104 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s105 -> s105 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s105 -> s105 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s105 -> s105 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s105 -> s105 [label="fp_off / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s105 -> s105 [label="fp_on / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s105 -> s4 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s105 -> s105 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s105 -> s47 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s105 -> s105 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s105 -> s82 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s105 -> s6 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s105 -> s43 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s105 -> s105 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s105 -> s105 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s105 -> s105 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s106 -> s106 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s106 -> s106 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s106 -> s106 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s106 -> s106 [label="fp_off / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s106 -> s106 [label="fp_on / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s106 -> s33 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s106 -> s106 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s106 -> s24 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s106 -> s106 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s106 -> s38 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s106 -> s7 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s106 -> s43 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s106 -> s106 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s106 -> s106 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s106 -> s106 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s107 -> s107 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s107 -> s107 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s107 -> s32 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s107 -> s107 [label="fp_off / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s107 -> s107 [label="fp_on / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s107 -> s107 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s107 -> s8 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s107 -> s107 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s107 -> s85 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s107 -> s107 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s107 -> s39 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s107 -> s3 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s107 -> s107 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s107 -> s107 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s107 -> s107 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s108 -> s108 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s108 -> s108 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s108 -> s50 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s108 -> s108 [label="fp_off / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s108 -> s108 [label="fp_on / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s108 -> s108 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s108 -> s68 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s108 -> s108 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s108 -> s67 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s108 -> s108 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s108 -> s108 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s108 -> s3 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s108 -> s108 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s108 -> s108 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s108 -> s108 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s109 -> s109 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s109 -> s109 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s109 -> s95 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s109 -> s61 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s109 -> s109 [label="fp_on / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s109 -> s94 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s109 -> s109 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s109 -> s109 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s109 -> s35 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s109 -> s109 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s109 -> s109 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s109 -> s109 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s109 -> s109 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s109 -> s109 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s109 -> s109 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s110 -> s110 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s110 -> s110 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s110 -> s112 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s110 -> s92 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s110 -> s110 [label="fp_on / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s110 -> s111 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s110 -> s110 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s110 -> s110 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s110 -> s35 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s110 -> s110 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s110 -> s110 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s110 -> s110 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s110 -> s110 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s110 -> s110 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s110 -> s110 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s111 -> s111 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s111 -> s111 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s111 -> s89 [label="finger_detected / fp_on [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s111 -> s39 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s111 -> s111 [label="fp_on / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s111 -> s111 [label="key_pos_lock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s111 -> s110 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s111 -> s111 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s111 -> s14 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s111 -> s111 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s111 -> s111 [label="pw_but_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s111 -> s111 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s111 -> s111 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s111 -> s111 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s111 -> s111 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s112 -> s112 [label="a_pw_msg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s112 -> s112 [label="apw_stop / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s112 -> s112 [label="finger_detected / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s112 -> s60 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s112 -> s112 [label="fp_on / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s112 -> s89 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s112 -> s112 [label="key_pos_unlock / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s112 -> s112 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s112 -> s28 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s112 -> s112 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s112 -> s110 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s112 -> s112 [label="pw_but_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s112 -> s112 [label="pw_pos_dn / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s112 -> s112 [label="pw_pos_up / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	s112 -> s112 [label="receiveMsg / 1 [((Automatic_Power_Window and Status_LED and Central_Locking_System and LED_Power_Window and not LED_Finger_Protection))]"];
	__start0 [label="" shape="none" width="0" height="0"];
	__start0 -> s0;
}