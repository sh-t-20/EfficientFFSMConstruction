digraph g {
	edge [lblstyle="above, sloped"];
	s0 [shape="circle" label="0@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 [shape="circle" label="1@[((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 [shape="circle" label="2@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 [shape="circle" label="3@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 [shape="circle" label="4@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 [shape="circle" label="5@[((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 [shape="circle" label="6@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 [shape="circle" label="7@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 [shape="circle" label="8@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 [shape="circle" label="9@[((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s10 [shape="circle" label="10@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 [shape="circle" label="11@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s12 [shape="circle" label="12@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s13 [shape="circle" label="13@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 [shape="circle" label="14@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s15 [shape="circle" label="15@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 [shape="circle" label="16@[((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 [shape="circle" label="17@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 [shape="circle" label="18@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 [shape="circle" label="19@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 [shape="circle" label="20@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 [shape="circle" label="21@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 [shape="circle" label="22@[((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 [shape="circle" label="23@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s24 [shape="circle" label="24@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 [shape="circle" label="25@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 [shape="circle" label="26@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 [shape="circle" label="27@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 [shape="circle" label="28@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s29 [shape="circle" label="29@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s30 [shape="circle" label="30@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 [shape="circle" label="31@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 [shape="circle" label="32@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 [shape="circle" label="33@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 [shape="circle" label="34@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 [shape="circle" label="35@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 [shape="circle" label="36@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 [shape="circle" label="37@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 [shape="circle" label="38@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 [shape="circle" label="39@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 [shape="circle" label="40@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 [shape="circle" label="41@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 [shape="circle" label="42@[((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 [shape="circle" label="43@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 [shape="circle" label="44@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 [shape="circle" label="45@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 [shape="circle" label="46@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 [shape="circle" label="47@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 [shape="circle" label="48@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 [shape="circle" label="49@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 [shape="circle" label="50@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 [shape="circle" label="51@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 [shape="circle" label="52@[((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s53 [shape="circle" label="53@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s54 [shape="circle" label="54@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 [shape="circle" label="55@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 [shape="circle" label="56@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 [shape="circle" label="57@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s58 [shape="circle" label="58@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 [shape="circle" label="59@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 [shape="circle" label="60@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 [shape="circle" label="61@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s62 [shape="circle" label="62@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s63 [shape="circle" label="63@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s64 [shape="circle" label="64@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 [shape="circle" label="65@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 [shape="circle" label="66@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s67 [shape="circle" label="67@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s68 [shape="circle" label="68@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 [shape="circle" label="69@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 [shape="circle" label="70@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s71 [shape="circle" label="71@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s72 [shape="circle" label="72@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s73 [shape="circle" label="73@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s74 [shape="circle" label="74@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s75 [shape="circle" label="75@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 [shape="circle" label="76@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s77 [shape="circle" label="77@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s78 [shape="circle" label="78@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s79 [shape="circle" label="79@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s80 [shape="circle" label="80@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s81 [shape="circle" label="81@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s82 [shape="circle" label="82@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 [shape="circle" label="83@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 [shape="circle" label="84@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 [shape="circle" label="85@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s86 [shape="circle" label="86@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s87 [shape="circle" label="87@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s88 [shape="circle" label="88@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s89 [shape="circle" label="89@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 [shape="circle" label="90@[((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 [shape="circle" label="91@[((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 [shape="circle" label="92@[((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s93 [shape="circle" label="93@[((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 [shape="circle" label="94@[((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 [shape="circle" label="95@[((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s96 [shape="circle" label="96@[((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s0 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s0 -> s0 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s0 -> s2 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s1 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s0 -> s20 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s3 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s4 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s0 -> s0 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s0 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s0 -> s6 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s0 -> s5 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s0 -> s7 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s0 -> s4 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s0 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s8 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s2 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s0 -> s9 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s60 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s0 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s0 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s0 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s10 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s0 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s8 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s0 [label="pw_but_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s0 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s6 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s11 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s0 -> s26 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s11 [label="pw_mv_up / led_pw_up_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s12 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s0 -> s8 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s0 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s0 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s25 [label="receiveMsg / pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s0 -> s9 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s6 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s0 -> s8 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s14 [label="receiveMsg / pw_activated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s13 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s0 -> s0 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s1 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s1 -> s1 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s1 -> s1 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s1 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s31 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s16 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s1 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s1 -> s17 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s22 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s1 -> s1 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s48 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s45 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s34 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s1 -> s1 [label="key_pos_lock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s1 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s18 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s1 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s1 -> s15 [label="m_pw_msg / m_pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s1 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s1 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s49 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s1 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s37 [label="pw_but_dn / fp_off,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s0 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s1 -> s23 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s1 -> s50 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s51 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s44 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s27 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s1 -> s1 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s25 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s52 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s1 -> s1 [label="pw_mv_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s1 [label="pw_mv_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s45 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s1 -> s1 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s34 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s1 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s38 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s1 -> s1 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s1 -> s1 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s1 -> s54 [label="release_pw_but / led_pw_up_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s2 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s2 -> s2 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s2 -> s2 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s2 -> s21 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s2 -> s70 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s2 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s2 -> s2 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s33 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s2 -> s32 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s2 -> s18 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s2 -> s2 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s13 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s2 -> s34 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s2 -> s2 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s0 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s2 -> s2 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s2 -> s26 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s2 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s35 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s2 -> s2 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s34 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s2 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s36 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s37 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s2 -> s2 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s0 [label="pw_but_dn / fp_off,1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s2 -> s8 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s2 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s2 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s2 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s2 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s2 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s4 [label="receiveMsg / pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s9 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s2 -> s2 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s2 -> s3 [label="receiveMsg / pw_activated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s2 -> s22 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s2 -> s90 [label="receiveMsg / pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s2 -> s3 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s38 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s2 -> s60 [label="release_pw_but / led_pw_dn_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s31 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s16 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s3 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s3 -> s3 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s3 -> s3 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s3 -> s49 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s4 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s39 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s3 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s3 -> s3 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s3 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s41 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s19 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s3 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s40 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s3 -> s3 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s50 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s33 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s3 -> s4 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s32 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s31 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s3 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s35 [label="m_pw_msg / m_pw_activated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s42 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s1 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s3 -> s3 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s3 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s35 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s3 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s45 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s6 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s43 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s3 -> s0 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s44 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s3 -> s26 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s7 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s3 [label="pw_but_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s14 [label="pw_but_dn / fp_off,1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s47 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s3 -> s35 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s3 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s46 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s3 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s3 -> s5 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s31 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s3 -> s33 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s57 [label="pw_mv_up / led_pw_up_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s2 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s35 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s3 -> s18 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s3 -> s21 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s3 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s3 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s33 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s3 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s3 -> s13 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s3 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s4 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s4 -> s17 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s16 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s4 -> s15 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s4 -> s4 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s4 -> s19 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s4 -> s85 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s18 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s4 -> s4 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s4 -> s20 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s4 -> s4 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s4 -> s4 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s4 -> s62 [label="fp_off / pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s14 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s4 -> s0 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s4 -> s4 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s4 -> s4 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s3 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s4 -> s22 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s4 -> s3 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s4 -> s51 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s23 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s4 -> s21 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s4 -> s4 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s15 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s4 -> s4 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s17 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s4 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s22 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s4 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s24 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s26 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s14 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s4 -> s4 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s9 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s25 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s4 -> s0 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s4 -> s4 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s27 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s4 -> s4 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s28 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s4 -> s87 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s4 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s23 [label="pw_mv_up / led_pw_up_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s29 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s4 -> s4 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s4 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s30 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s4 -> s4 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s4 -> s31 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s4 -> s13 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s4 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s5 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s5 -> s5 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s5 -> s61 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s32 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s5 -> s5 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s0 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s5 -> s62 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s5 -> s49 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s5 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s5 -> s5 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s5 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s16 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s84 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s5 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s5 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s5 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s5 -> s43 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s5 -> s5 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s5 -> s5 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s5 -> s5 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s7 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s5 -> s5 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s5 -> s27 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s5 -> s93 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s59 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s39 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s5 -> s46 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s5 -> s5 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s5 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s16 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s5 -> s5 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s5 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s6 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s5 -> s5 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s3 [label="release_pw_but / led_pw_dn_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s5 -> s44 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s6 -> s42 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s6 -> s6 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s6 -> s33 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s38 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s3 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s6 -> s6 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s6 -> s35 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s31 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s6 -> s6 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s53 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s6 -> s0 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s6 -> s9 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s6 -> s6 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s54 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s6 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s6 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s6 -> s9 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s6 -> s6 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s6 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s6 -> s11 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s8 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s55 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s6 -> s15 [label="m_pw_msg / m_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s6 -> s6 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s42 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s6 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s6 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s56 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s6 -> s6 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s6 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s6 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s6 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s6 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s37 [label="receiveMsg / pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s56 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s4 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s6 -> s6 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s6 -> s60 [label="release_pw_but / led_pw_up_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s6 -> s34 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s6 -> s0 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s7 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s7 -> s7 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s7 -> s21 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s31 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s22 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s7 -> s32 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s7 [label="finger_detected / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s3 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s41 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s7 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s23 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s11 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s7 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s0 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s7 -> s7 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s7 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s7 -> s23 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s23 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s7 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s7 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s57 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s23 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s55 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s30 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s7 -> s7 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s7 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s7 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s14 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s7 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s7 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s7 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s7 -> s44 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s30 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s59 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s58 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s5 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s7 -> s27 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s47 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s7 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s7 -> s26 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s7 -> s7 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s18 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s7 -> s7 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s25 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s30 [label="pw_pos_dn / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s14 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s7 -> s61 [label="pw_pos_dn / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s18 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s7 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s7 -> s60 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s7 -> s7 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s54 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s7 -> s7 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s23 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s13 [label="release_pw_but / led_pw_dn_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s7 -> s7 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s8 -> s8 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s8 -> s8 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s8 -> s36 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s2 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s22 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s8 -> s45 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s8 -> s34 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s8 -> s19 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s8 -> s8 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s8 -> s43 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s8 -> s8 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s8 -> s44 [label="fp_off / pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s8 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s8 -> s8 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s30 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s8 -> s11 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s8 -> s6 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s8 -> s8 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s8 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s8 -> s0 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s8 -> s87 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s8 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s14 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s8 -> s8 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s8 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s0 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s8 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s8 [label="pw_but_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s8 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s59 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s8 -> s8 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s30 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s8 -> s57 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s8 -> s8 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s8 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s8 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s8 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s14 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s8 -> s26 [label="receiveMsg / pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s63 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s51 [label="release_pw_but / led_pw_dn_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s8 -> s8 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s8 -> s0 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s17 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s9 -> s15 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s42 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s64 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s9 -> s9 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s9 -> s13 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s4 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s65 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s9 -> s19 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s9 -> s89 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 -> s9 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 -> s9 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s9 -> s9 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 -> s23 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s6 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s9 -> s16 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s9 -> s9 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s57 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 -> s14 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s9 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 -> s6 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s9 -> s0 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s9 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 -> s15 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s40 [label="m_pw_msg / m_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s9 -> s9 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 -> s26 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s9 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s63 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s9 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 -> s17 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 -> s66 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s9 -> s9 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s56 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s9 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 -> s26 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s9 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 -> s9 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 -> s9 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 -> s6 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s9 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 -> s50 [label="release_pw_but / led_pw_up_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s9 -> s60 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s9 -> s9 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s10 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s10 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s34 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s10 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s10 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s10 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s0 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s10 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s10 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s10 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s10 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s10 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s26 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s11 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s11 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s48 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s45 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s83 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s18 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s52 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s11 -> s49 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s11 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s7 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s23 [label="fp_off / pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s11 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s11 -> s11 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s43 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s26 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s11 -> s11 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s6 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s44 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s8 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s50 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s11 [label="key_pos_unlock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s48 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s11 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s11 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s11 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s50 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s11 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s11 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s11 [label="pw_but_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s11 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s25 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s27 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s11 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s11 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s49 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s11 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s11 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s45 [label="receiveMsg / pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s11 [label="receiveMsg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s23 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s11 -> s0 [label="release_pw_but / led_pw_up_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s11 -> s0 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s11 -> s14 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s45 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s12 -> s12 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s12 -> s18 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s12 -> s12 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s12 -> s12 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s12 -> s12 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s12 -> s12 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s12 -> s12 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s12 -> s12 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s12 -> s12 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s12 -> s12 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s12 -> s37 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s12 -> s0 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s13 -> s38 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s13 -> s13 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s13 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s13 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s13 -> s13 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s54 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s13 -> s31 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s13 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s2 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s91 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s67 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s13 -> s13 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s55 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s13 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s13 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s13 -> s76 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s9 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s34 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s13 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s13 -> s23 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s13 -> s19 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s7 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s28 [label="pw_mv_up / led_pw_up_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s37 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s13 -> s4 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s49 [label="pw_pos_dn / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s13 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s13 -> s13 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s13 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s13 -> s38 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s13 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 -> s17 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s14 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s14 -> s35 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s14 -> s14 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s14 -> s50 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s22 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s4 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s31 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s3 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s14 -> s59 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s14 -> s52 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s33 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s14 -> s42 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 -> s23 [label="fp_off / pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s14 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s14 -> s14 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 -> s4 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s14 -> s14 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 -> s58 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s8 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s14 -> s18 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s14 -> s42 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s14 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 -> s44 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s14 -> s26 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s30 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 -> s14 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s9 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s14 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 -> s16 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s14 -> s31 [label="m_pw_msg / m_pw_activated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s14 -> s17 [label="m_pw_msg / m_pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s14 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s14 -> s0 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s60 [label="mpw_stop / pw_inactivated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 -> s7 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s14 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s23 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s14 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s14 -> s14 [label="pw_but_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s44 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s76 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 -> s43 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s14 -> s59 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s14 -> s43 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s14 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 -> s14 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s14 -> s64 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 -> s11 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s66 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s14 -> s77 [label="pw_mv_up / led_pw_up_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 -> s68 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s14 -> s48 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s25 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s8 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s14 -> s14 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 -> s67 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s14 -> s14 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 -> s14 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s14 -> s14 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s15 -> s15 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s15 -> s0 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s34 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s15 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s15 -> s2 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s55 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s15 -> s42 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s15 -> s15 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s15 -> s17 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s77 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s15 -> s15 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s15 -> s15 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s16 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s15 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s15 -> s15 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s15 -> s16 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s33 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s42 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s40 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s15 -> s15 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s15 -> s33 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s15 -> s16 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s15 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s15 -> s52 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s15 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s15 -> s13 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s2 [label="mpw_stop / pw_inactivated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s6 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s35 [label="mpw_stop / pw_inactivated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s15 -> s18 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s15 -> s0 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s15 -> s64 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s15 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s81 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s80 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s15 -> s14 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s15 -> s11 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s7 [label="pw_but_dn / fp_off,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s23 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s92 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s15 -> s7 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s15 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s15 -> s15 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s15 -> s42 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s15 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s15 -> s79 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s15 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s15 -> s15 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s15 -> s15 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s15 -> s64 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s15 -> s15 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s42 [label="release_pw_but / led_pw_up_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s16 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s16 -> s16 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s16 -> s32 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s16 -> s2 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s75 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s16 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s28 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s16 -> s42 [label="finger_detected / fp_on [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s32 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s15 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s16 -> s26 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s16 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s16 -> s9 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s16 -> s16 [label="fp_off / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s16 [label="fp_on / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s16 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s16 -> s15 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s16 -> s15 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s5 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s90 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s16 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s16 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s17 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s73 [label="m_pw_msg / m_pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s16 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s16 -> s8 [label="mpw_stop / pw_inactivated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s0 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s16 -> s16 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s16 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s31 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s16 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s23 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s16 [label="pw_but_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s23 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s23 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s30 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s16 -> s55 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s21 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s16 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s46 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s16 -> s35 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s31 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s16 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s16 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s43 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s52 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s3 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s16 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s16 [label="pw_pos_up / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s16 [label="receiveMsg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s25 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s16 -> s16 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s17 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s17 -> s8 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s0 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s17 -> s4 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s17 -> s2 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s68 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s17 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s17 -> s15 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s17 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s17 -> s17 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s42 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s17 -> s47 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s17 -> s1 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s17 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s41 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s17 -> s17 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s17 -> s42 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s17 -> s23 [label="fp_on / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s19 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s35 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s17 -> s16 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s17 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s58 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s17 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s42 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s17 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s17 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s33 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s17 -> s0 [label="mpw_stop / pw_inactivated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s2 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s42 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s17 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s79 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s80 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s17 -> s7 [label="pw_but_dn / 1,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s60 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s43 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s14 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s7 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s17 -> s25 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s30 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s17 -> s17 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s17 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s17 -> s32 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s17 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s17 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s17 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s75 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s79 [label="pw_pos_up / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s17 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s42 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s17 -> s17 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s47 [label="release_pw_but / led_pw_up_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s17 -> s27 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s17 -> s55 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s18 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s18 -> s18 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s18 -> s65 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s74 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s18 -> s45 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s18 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s12 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s18 -> s14 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s2 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s45 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s18 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s18 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s18 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s18 -> s35 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s1 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s31 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s18 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s18 -> s45 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s18 -> s18 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s18 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s18 -> s33 [label="m_pw_msg / m_pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s18 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s18 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s35 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s18 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s60 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s30 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s45 [label="pw_but_dn / fp_off,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s18 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s18 -> s11 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s18 -> s4 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s23 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s58 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s18 -> s47 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s18 -> s46 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s18 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s18 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s18 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s18 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s18 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s72 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s18 -> s18 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s18 -> s7 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s18 -> s30 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s21 [label="release_pw_but / led_pw_up_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s35 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s19 -> s19 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s19 -> s19 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s45 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s82 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s19 -> s3 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s19 -> s19 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s19 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s19 -> s19 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s19 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s31 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s19 -> s40 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s17 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s32 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s19 -> s19 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s17 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s19 -> s19 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s19 -> s70 [label="mpw_stop / pw_inactivated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s44 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s9 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s19 -> s4 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s19 -> s43 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s56 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s8 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s19 -> s19 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s3 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s21 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s19 -> s19 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s19 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s41 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s19 -> s19 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s61 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s19 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s19 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s42 [label="release_pw_but / led_pw_dn_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s19 -> s13 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s19 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s20 -> s20 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 -> s20 [label="fp_off / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 -> s20 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s20 -> s4 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s20 -> s20 [label="fp_on / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 -> s38 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 -> s20 [label="key_pos_unlock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 -> s20 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 -> s20 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 -> s0 [label="pw_but_dn / fp_off,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 -> s60 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s20 -> s59 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s20 -> s20 [label="pw_but_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 -> s65 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 -> s83 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 -> s20 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 -> s20 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 -> s20 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s20 -> s21 [label="receiveMsg / pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s20 -> s20 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s21 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s21 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s32 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s21 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s70 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s21 -> s21 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s21 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s69 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s21 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s21 -> s21 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s35 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s49 [label="fp_on / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s57 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s59 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s21 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s54 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s35 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s4 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s52 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s21 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s21 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s21 -> s31 [label="m_pw_msg / m_pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s21 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s21 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s31 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s21 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s7 [label="pw_but_dn / fp_off,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s23 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s30 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s21 -> s7 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s2 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s60 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s25 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s23 [label="pw_but_dn / fp_off,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s32 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s21 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s58 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s42 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s46 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s59 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s21 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s32 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s21 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s21 -> s18 [label="pw_mv_up / led_pw_up_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s21 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s21 -> s21 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s45 [label="pw_pos_dn / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s18 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s21 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s58 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s32 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s21 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s19 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s35 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s21 [label="release_pw_but / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s21 -> s19 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s22 -> s42 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s22 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s22 -> s15 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s22 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s22 -> s22 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s1 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s22 -> s22 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s22 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s22 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s22 -> s72 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s22 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s61 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s38 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s22 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s22 -> s22 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s4 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s52 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s22 -> s22 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s52 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s22 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s22 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s4 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s22 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s84 [label="pw_but_dn / fp_off,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s26 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s7 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s22 -> s8 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s14 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s22 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s22 -> s66 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s61 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s22 -> s48 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s22 -> s22 [label="pw_mv_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s74 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s22 -> s22 [label="pw_mv_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s22 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s34 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s22 -> s22 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s22 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s22 -> s34 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s22 -> s22 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s22 -> s75 [label="release_pw_but / led_pw_dn_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s23 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s23 -> s23 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s23 -> s31 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s33 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s88 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s35 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s21 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s16 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s53 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s23 -> s1 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s23 -> s23 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s23 -> s9 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s43 [label="fp_off / pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s7 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s23 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s23 -> s23 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s23 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s56 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s23 -> s7 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s94 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s60 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s23 -> s7 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s23 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s7 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s4 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s23 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s73 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s23 -> s23 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s23 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s23 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s14 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s23 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s23 [label="pw_but_dn / 1,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s23 [label="pw_but_dn / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s16 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s23 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s46 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s23 -> s60 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s47 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s58 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s23 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s7 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s23 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s25 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s45 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s30 [label="pw_pos_dn / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s18 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s23 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s25 [label="pw_pos_dn / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s23 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s54 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s23 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s23 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s4 [label="release_pw_but / led_pw_up_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s23 -> s13 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s24 -> s79 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s24 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s24 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s24 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s24 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s24 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s4 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s24 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s63 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s24 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s24 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s24 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s24 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s25 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s25 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s43 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s25 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s35 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s4 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s25 -> s47 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s21 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s31 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s25 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s25 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s60 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s25 -> s49 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s25 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s25 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s25 -> s71 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s39 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s25 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s56 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s59 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s45 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s30 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s25 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s25 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s25 -> s30 [label="m_pw_msg / m_pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s25 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s30 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s25 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s45 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s25 [label="pw_but_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s25 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s44 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s44 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s25 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s58 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s39 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s25 -> s46 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s25 [label="pw_but_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s59 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s16 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s25 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s84 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s25 -> s25 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s45 [label="pw_mv_up / led_pw_up_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s45 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s25 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s52 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s40 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s25 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s25 [label="receiveMsg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s25 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s25 -> s23 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s26 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s26 -> s64 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s26 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s26 -> s3 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s26 -> s4 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s65 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s34 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s26 -> s48 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s26 -> s22 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s11 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s26 -> s26 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s26 -> s26 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s14 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s26 -> s16 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s26 -> s26 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s26 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s26 -> s26 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s26 -> s2 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s49 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s26 -> s26 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s14 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s26 -> s79 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s26 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s16 [label="m_pw_msg / m_pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s26 -> s26 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s26 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s9 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s26 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s26 [label="pw_but_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s26 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s69 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s26 -> s26 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s26 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s26 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s26 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s26 [label="receiveMsg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s26 -> s16 [label="receiveMsg / pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s56 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s26 -> s0 [label="release_pw_but / led_pw_dn_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s26 -> s9 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s7 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s27 -> s27 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s27 -> s27 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s27 -> s47 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s27 -> s27 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s39 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s27 -> s59 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s27 -> s27 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s27 -> s27 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s7 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s27 -> s85 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s27 -> s19 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s27 -> s11 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s27 -> s36 [label="fp_on / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s69 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s27 -> s27 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s66 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s27 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s27 -> s69 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s27 -> s27 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s27 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s27 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s27 -> s59 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s27 -> s27 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s27 -> s16 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s27 -> s44 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s5 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s27 -> s11 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s27 -> s27 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s27 -> s27 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s69 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s27 -> s27 [label="pw_mv_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s17 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s27 -> s27 [label="pw_mv_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s27 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s40 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s27 -> s17 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s27 -> s42 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s27 -> s64 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s27 -> s19 [label="pw_pos_up / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s27 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s27 -> s27 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s27 -> s34 [label="release_pw_but / led_pw_dn_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s28 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s28 [label="fp_off / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s65 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s28 -> s28 [label="fp_on / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s28 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s28 -> s28 [label="key_pos_lock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s82 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s28 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s28 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s92 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s16 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s28 -> s69 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s28 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s28 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s41 [label="pw_pos_dn / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s28 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s28 -> s28 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s28 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s13 [label="release_pw_but / led_pw_up_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s28 -> s4 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s29 -> s29 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s29 -> s83 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s29 -> s29 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s29 -> s29 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s29 -> s29 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s29 -> s84 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s29 -> s17 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s29 -> s29 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s29 -> s29 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s29 -> s29 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s29 -> s29 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s29 -> s29 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s29 -> s4 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s30 -> s30 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s30 -> s30 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s30 -> s72 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s52 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s30 -> s18 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s31 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s35 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s21 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s30 -> s45 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s30 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s30 -> s62 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s30 -> s8 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s30 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s30 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s60 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s30 -> s30 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s30 -> s14 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s54 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s30 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s7 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s30 -> s25 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s30 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s60 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s58 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s30 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s0 [label="mpw_stop / pw_inactivated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s30 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s30 -> s30 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s25 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s30 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s62 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s7 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s30 [label="pw_but_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s30 -> s27 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s59 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s30 -> s16 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s30 -> s58 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s46 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s30 -> s30 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s47 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s30 -> s73 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s30 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s30 -> s18 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s45 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s30 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s30 -> s79 [label="pw_mv_up / led_pw_up_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s30 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s23 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s30 -> s30 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s30 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s30 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s30 -> s8 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s31 -> s17 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s31 -> s31 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s31 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s31 -> s2 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s31 -> s31 [label="finger_detected / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s35 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s31 -> s31 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s13 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s31 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s31 -> s33 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s31 -> s31 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s32 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s31 -> s55 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s31 -> s31 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s3 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s42 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s19 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s31 -> s31 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s18 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s45 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s31 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s55 [label="m_pw_msg / m_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s31 -> s31 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s31 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s0 [label="mpw_stop / pw_inactivated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s31 -> s52 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s31 -> s20 [label="mpw_stop / pw_inactivated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s21 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s31 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s16 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s14 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s25 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s7 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s6 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s31 -> s23 [label="pw_but_dn / 1,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s31 -> s23 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s31 -> s7 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s31 -> s62 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s23 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s21 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s21 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s31 -> s47 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s31 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s52 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s18 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s40 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s31 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s31 -> s31 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s31 -> s33 [label="pw_mv_up / led_pw_up_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s45 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s31 -> s65 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s52 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s35 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s31 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s31 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s31 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s78 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s16 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s31 [label="release_pw_but / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s31 -> s3 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s32 -> s32 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s32 -> s32 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s32 -> s32 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s31 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s32 -> s2 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s32 -> s32 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s25 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s32 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s32 -> s32 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s71 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s32 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s32 -> s52 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s3 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s55 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s32 -> s32 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s40 [label="m_pw_msg / m_pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s42 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s32 -> s32 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s21 [label="mpw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s32 -> s32 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s33 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s32 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s52 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s32 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s72 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s32 -> s44 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s32 -> s7 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s60 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s5 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s32 -> s16 [label="pw_but_dn / fp_off,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s32 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s47 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s32 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s58 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s32 -> s32 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s32 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s32 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s18 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s32 -> s32 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s35 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s3 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s32 -> s32 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s21 [label="release_pw_but / led_pw_dn_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s32 -> s55 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s34 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s33 -> s33 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s33 -> s33 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s33 -> s55 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s33 -> s33 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s31 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s33 -> s15 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s73 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s33 -> s2 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s33 -> s33 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s33 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s33 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s33 -> s33 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s3 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s33 -> s15 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s35 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s33 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s33 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s26 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s33 -> s33 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s33 -> s31 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s83 [label="mpw_stop / pw_inactivated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s43 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s6 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s33 -> s23 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s33 -> s14 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s33 -> s5 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s33 -> s33 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s58 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s33 -> s35 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s33 -> s33 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s33 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s33 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s45 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s33 -> s33 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s19 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s33 -> s33 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s3 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s33 -> s31 [label="release_pw_but / led_pw_up_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s33 -> s64 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s34 -> s34 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s34 -> s34 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s34 -> s34 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s34 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s38 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s34 -> s34 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s34 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s34 -> s48 [label="fp_on / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s34 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s34 -> s75 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s34 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s70 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s1 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s34 -> s2 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s39 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s34 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s40 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s34 -> s34 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s34 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s34 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s2 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s34 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s26 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s76 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s10 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s54 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s34 -> s60 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s34 -> s8 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s25 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s34 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s34 -> s34 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s69 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s34 -> s6 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s34 -> s27 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s69 [label="pw_mv_up / led_pw_up_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s32 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s34 -> s34 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s34 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s34 -> s42 [label="pw_pos_up / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s34 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s34 -> s22 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s3 [label="receiveMsg / pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s34 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s35 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s35 -> s35 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s0 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s35 -> s21 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s35 -> s35 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s31 [label="finger_detected / fp_on [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s35 -> s35 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s21 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s35 -> s35 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s35 -> s52 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s42 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s35 -> s35 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s35 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s50 [label="fp_on / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s33 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s35 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s18 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s83 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s17 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s35 -> s21 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s35 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s35 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s45 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s35 -> s2 [label="mpw_stop / pw_inactivated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s35 -> s35 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s18 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s18 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s35 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s3 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s6 [label="pw_but_dn / fp_off,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s23 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s35 -> s23 [label="pw_but_dn / fp_off,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s76 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s35 -> s60 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s7 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s35 -> s25 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s35 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s46 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s35 -> s47 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s59 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s35 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s58 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s35 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s21 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s59 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s35 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s31 [label="pw_pos_dn / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s35 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s35 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s55 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s1 [label="receiveMsg / pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s35 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s35 -> s38 [label="release_pw_but / led_pw_up_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s35 -> s3 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s35 -> s35 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s36 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s36 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s36 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s36 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s7 [label="fp_off / pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s36 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s36 [label="key_pos_lock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s95 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s36 [label="m_pw_msg / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s36 [label="mpw_stop / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s36 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s2 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s36 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s8 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s36 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s36 [label="pw_mv_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s36 [label="pw_mv_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s36 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s36 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s24 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s36 [label="receiveMsg / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s36 -> s48 [label="release_pw_but / led_pw_dn_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s1 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s2 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s37 -> s37 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s37 -> s37 [label="fp_off / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s72 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s37 -> s37 [label="fp_on / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s37 [label="key_pos_lock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s45 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s77 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s37 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s37 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s37 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s37 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s37 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s37 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s37 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s37 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s56 [label="release_pw_but / led_pw_up_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s37 -> s13 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s38 -> s38 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s38 [label="fp_off / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s38 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s38 -> s38 [label="fp_on / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s34 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s38 -> s78 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s38 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s22 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s20 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s3 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s38 -> s38 [label="m_pw_msg / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s15 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s38 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s6 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s13 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s38 -> s60 [label="pw_but_dn / fp_off,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s38 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s53 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s38 -> s70 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s2 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s38 -> s35 [label="pw_mv_up / led_pw_up_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s38 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s38 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s54 [label="receiveMsg / pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s38 -> s38 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s38 -> s38 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s39 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s39 -> s39 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s39 -> s27 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s39 -> s69 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s39 -> s39 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s14 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s39 -> s39 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s39 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s39 -> s50 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s39 -> s8 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s39 -> s41 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s39 -> s85 [label="fp_on / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s39 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s39 -> s34 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s39 [label="key_pos_unlock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s46 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s39 -> s25 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s39 -> s39 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s39 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s11 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s39 -> s5 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s39 -> s44 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s39 -> s62 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s39 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s39 -> s39 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s46 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s39 -> s66 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s79 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s39 -> s68 [label="pw_mv_up / led_pw_up_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s39 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s64 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s39 -> s15 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s39 -> s31 [label="pw_pos_up / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s39 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s39 -> s39 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s40 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s40 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s32 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s33 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s40 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s3 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s40 -> s40 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s42 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s40 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s40 -> s40 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s40 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s19 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s40 [label="key_pos_unlock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s15 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s58 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s40 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s2 [label="mpw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s22 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s40 -> s23 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s65 [label="mpw_stop / pw_inactivated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s44 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s43 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s80 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s44 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s40 -> s40 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s55 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s40 -> s40 [label="pw_mv_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s42 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s40 -> s40 [label="pw_mv_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s40 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s40 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s40 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s31 [label="release_pw_but / led_pw_dn_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s40 -> s40 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s41 -> s41 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 -> s86 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s41 -> s45 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s41 [label="fp_off / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 -> s41 [label="fp_on / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 -> s41 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s41 -> s41 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 -> s71 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s89 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 -> s41 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 -> s41 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 -> s7 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s57 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 -> s41 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s41 -> s69 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 -> s41 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 -> s41 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 -> s41 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 -> s41 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 -> s41 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s41 -> s19 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s41 -> s49 [label="release_pw_but / led_pw_up_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 -> s42 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s0 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s42 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s42 -> s5 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s42 -> s34 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s15 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s17 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s16 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s42 [label="finger_detected / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 -> s32 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s17 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s42 -> s35 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s42 -> s42 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s42 [label="fp_off / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 -> s17 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s42 -> s42 [label="fp_on / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 -> s42 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s42 -> s40 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s64 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s42 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 -> s17 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s15 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s14 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s31 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 -> s42 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s42 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 -> s34 [label="mpw_stop / pw_inactivated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s38 [label="mpw_stop / pw_inactivated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 -> s9 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s42 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s74 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s42 -> s2 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s42 -> s6 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s42 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s17 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s42 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s11 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s30 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s23 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s80 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s42 -> s7 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s76 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 -> s23 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s7 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s42 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 -> s47 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s42 -> s19 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 -> s42 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s42 -> s42 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s42 -> s15 [label="pw_mv_up / led_pw_up_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 -> s42 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 -> s42 [label="pw_pos_up / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 -> s42 [label="receiveMsg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 -> s42 [label="release_pw_but / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s42 -> s40 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s42 -> s15 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s43 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s43 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s43 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s52 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s19 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s82 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 -> s43 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s43 -> s43 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 -> s11 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s43 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s43 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 -> s44 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s43 -> s92 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 -> s43 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s60 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s43 [label="key_pos_unlock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 -> s43 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 -> s43 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 -> s5 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s43 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s60 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s43 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 -> s14 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s25 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s59 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s14 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s43 -> s17 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 -> s43 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 -> s62 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s43 -> s43 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 -> s76 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s43 -> s60 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s43 -> s43 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s9 [label="pw_pos_dn / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 -> s5 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s43 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 -> s43 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s43 -> s16 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s43 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s43 -> s62 [label="release_pw_but / led_pw_up_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s44 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s44 -> s44 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s44 -> s3 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s44 -> s7 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s49 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s44 -> s1 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s44 -> s44 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s44 -> s43 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s44 -> s44 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s44 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s44 -> s60 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s44 -> s44 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s11 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s44 -> s44 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s14 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s44 -> s44 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s44 -> s80 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s44 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s44 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s44 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s69 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s44 -> s39 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s44 -> s93 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s25 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s44 -> s5 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s44 -> s44 [label="pw_mv_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s80 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s44 -> s44 [label="pw_mv_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s26 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s44 -> s5 [label="pw_pos_dn / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s11 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s44 -> s25 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s44 -> s44 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s44 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s44 -> s44 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s44 -> s76 [label="release_pw_but / led_pw_dn_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 -> s45 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s45 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s45 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s45 -> s52 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s18 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 -> s60 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s3 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s52 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s45 -> s45 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 -> s45 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s45 -> s19 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s45 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s45 -> s45 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 -> s18 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s45 -> s74 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s45 -> s37 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 -> s18 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s25 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s45 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s31 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s45 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 -> s1 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s45 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s45 -> s79 [label="m_pw_msg / m_pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 -> s45 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 -> s45 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s25 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s45 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s8 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s18 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s45 -> s30 [label="pw_but_dn / fp_off,1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s11 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s45 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 -> s12 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s45 -> s59 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s69 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s58 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s46 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s45 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 -> s39 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s47 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s45 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 -> s45 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 -> s70 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s45 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 -> s45 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 -> s45 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s45 -> s2 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s45 -> s1 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s45 -> s30 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s25 [label="release_pw_but / led_pw_up_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s46 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s46 -> s46 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s46 -> s59 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s46 -> s69 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s46 -> s27 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s46 -> s47 [label="finger_detected / fp_on [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s46 -> s46 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s46 -> s34 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s46 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s66 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s46 -> s46 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s46 -> s58 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s46 -> s87 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s46 -> s51 [label="fp_on / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s57 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s46 -> s11 [label="fp_on / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s46 -> s50 [label="fp_on / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s46 -> s48 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s46 -> s30 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s46 -> s57 [label="fp_on / pw_mv_stop,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s46 -> s1 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s46 -> s59 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s46 -> s46 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s39 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s46 -> s58 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s46 -> s46 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s46 -> s47 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s46 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s46 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s46 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s46 -> s58 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s46 -> s46 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s46 -> s5 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s46 -> s76 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s23 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s46 -> s23 [label="pw_but_dn / fp_off,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s46 -> s25 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s46 -> s16 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s46 -> s60 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s46 -> s46 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s46 [label="pw_but_up / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s46 -> s46 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s46 -> s93 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s58 [label="pw_mv_up / led_pw_up_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s46 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s46 -> s46 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s16 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s46 -> s42 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s46 -> s33 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s46 -> s14 [label="pw_pos_up / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s79 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s46 -> s35 [label="pw_pos_up / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s46 -> s46 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s39 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s46 -> s46 [label="release_pw_but / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s46 -> s58 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s47 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s47 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s39 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 -> s46 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s47 -> s47 [label="finger_detected / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s47 -> s21 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s47 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s47 -> s59 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s47 -> s47 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 -> s49 [label="fp_on / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s47 -> s4 [label="fp_on / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 -> s48 [label="fp_on / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s70 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s11 [label="fp_on / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s71 [label="fp_on / pw_mv_stop,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s47 -> s50 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s47 -> s41 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s47 -> s71 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s47 -> s46 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 -> s58 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s47 -> s47 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s47 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 -> s58 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s59 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s47 -> s47 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 -> s47 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 -> s47 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s58 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s47 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s16 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s47 -> s23 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s47 -> s44 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s76 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s47 -> s7 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s60 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s47 -> s62 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 -> s23 [label="pw_but_dn / 1,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s47 -> s5 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s47 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 -> s47 [label="pw_but_up / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s59 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 -> s47 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s47 -> s17 [label="pw_mv_up / led_pw_up_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 -> s47 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s47 -> s47 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 -> s32 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s42 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s30 [label="pw_pos_up / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 -> s35 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s47 -> s31 [label="pw_pos_up / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s47 -> s47 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 -> s47 [label="release_pw_but / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s47 -> s59 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s47 -> s58 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s48 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s48 -> s48 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s48 -> s50 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s48 -> s88 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s48 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s23 [label="fp_off / pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s48 -> s13 [label="fp_off / pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s33 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s48 -> s25 [label="fp_off / pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s52 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s48 -> s21 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s3 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s48 -> s7 [label="fp_off / pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s48 -> s48 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s48 -> s48 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s11 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s48 -> s70 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s48 -> s48 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s1 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s48 -> s85 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s48 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s48 -> s48 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s48 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s48 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s49 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s48 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s26 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s48 -> s11 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s48 [label="pw_but_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s51 [label="pw_but_dn / fp_off,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s48 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s48 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s48 -> s36 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s48 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s48 -> s96 [label="pw_mv_up / led_pw_up_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s48 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s48 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s6 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s48 -> s48 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s48 [label="release_pw_but / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s48 -> s14 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s22 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s49 -> s49 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s49 -> s49 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s49 -> s49 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s70 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s49 -> s44 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s49 -> s49 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s49 -> s49 [label="fp_off / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s82 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s49 -> s31 [label="fp_off / pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s49 -> s35 [label="fp_off / pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s49 -> s49 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s49 -> s5 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s49 -> s49 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s49 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s50 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s49 -> s26 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s49 -> s75 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s49 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s49 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s48 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s49 -> s49 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s49 -> s1 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s49 -> s50 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s49 -> s3 [label="pw_but_dn / fp_off,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s49 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s49 -> s11 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s49 -> s44 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s49 -> s34 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s27 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s49 -> s49 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s49 -> s49 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s49 -> s61 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s41 [label="pw_mv_up / led_pw_up_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s75 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s49 -> s49 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s49 -> s49 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s4 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s49 -> s49 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s49 [label="receiveMsg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s49 -> s50 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s49 -> s49 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s50 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s50 -> s50 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s50 -> s49 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s50 -> s50 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s50 -> s1 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s51 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s50 -> s75 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s50 [label="fp_off / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s7 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s50 -> s23 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s14 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s50 -> s21 [label="fp_off / pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s16 [label="fp_off / pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s50 -> s50 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s50 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s50 -> s11 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s49 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s3 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s50 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s87 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s50 -> s50 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s50 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s11 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s50 -> s50 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s50 -> s51 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s50 -> s48 [label="pw_but_dn / fp_off,1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s14 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s50 -> s50 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s47 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s50 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s50 -> s49 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s50 -> s84 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s9 [label="pw_mv_up / led_pw_up_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s88 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s50 -> s50 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s50 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s50 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s50 -> s50 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s51 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s51 -> s51 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s51 -> s51 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s51 -> s1 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s51 -> s48 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s22 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s51 -> s76 [label="fp_off / pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s23 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s51 -> s51 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s51 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s4 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s85 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s51 -> s51 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s51 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s51 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s51 -> s50 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s51 -> s51 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s51 -> s51 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s50 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s51 -> s51 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s8 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s94 [label="pw_mv_up / led_pw_up_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s51 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s51 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s51 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s51 -> s51 [label="release_pw_but / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s52 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s52 -> s52 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s52 -> s52 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s52 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s52 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s52 -> s48 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s52 -> s52 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s35 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s45 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s52 -> s15 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s22 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s52 -> s52 [label="key_pos_lock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s21 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s52 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s32 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s52 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s52 -> s19 [label="m_pw_msg / m_pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s2 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s52 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s32 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s52 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s55 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s14 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s52 -> s14 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s30 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s52 -> s11 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s52 -> s45 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s44 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s90 [label="pw_but_dn / fp_off,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s35 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s75 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s52 -> s52 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s58 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s46 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s65 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s52 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s52 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s60 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s1 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s52 -> s52 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s52 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s52 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s53 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s52 -> s52 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s54 [label="release_pw_but / led_pw_dn_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s52 -> s1 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s53 -> s53 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s53 -> s53 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s53 -> s6 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s53 -> s31 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s53 -> s53 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s53 -> s23 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s53 -> s53 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s53 -> s53 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s53 -> s53 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s53 -> s53 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s53 -> s53 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s53 -> s53 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s53 -> s38 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s54 -> s78 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s54 -> s34 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s54 -> s54 [label="finger_detected / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s54 [label="fp_off / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s6 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s54 -> s13 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s54 -> s54 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s54 -> s54 [label="fp_on / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s54 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s21 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s30 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s54 -> s40 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s54 -> s42 [label="m_pw_msg / m_pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s64 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s54 -> s54 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s54 [label="pw_but_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s54 -> s56 [label="pw_but_dn / fp_off,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s54 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s52 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s56 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s54 -> s1 [label="pw_mv_up / led_pw_up_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s72 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s54 -> s54 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s54 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s54 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s54 -> s54 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 -> s55 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s55 -> s55 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s55 -> s55 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 -> s55 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 -> s31 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s55 -> s55 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 -> s55 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s55 -> s7 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 -> s32 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s55 -> s55 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 -> s55 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 -> s3 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s55 [label="mpw_stop / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 -> s4 [label="mpw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s55 -> s48 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s55 -> s55 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s52 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s55 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s23 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s14 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s55 -> s5 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s55 -> s80 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 -> s46 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s66 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 -> s55 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s55 -> s32 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s55 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 -> s17 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s55 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 -> s22 [label="pw_pos_dn / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 -> s55 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s55 -> s55 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 -> s55 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 -> s40 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s55 -> s91 [label="release_pw_but / led_pw_dn_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s55 -> s55 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s56 -> s19 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s56 -> s6 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s56 -> s54 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s23 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s56 -> s56 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s56 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s56 -> s56 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s56 [label="key_pos_lock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s25 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s33 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s56 -> s42 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s56 -> s14 [label="m_pw_msg / m_pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s56 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s56 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s56 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s56 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s56 -> s90 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s56 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s56 -> s37 [label="pw_mv_up / led_pw_up_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s56 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s56 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s56 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s56 -> s9 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s56 -> s54 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s56 -> s56 [label="release_pw_but / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s57 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s57 -> s57 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s57 -> s57 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s57 -> s41 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s71 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s57 -> s57 [label="fp_off / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s44 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s57 -> s76 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s57 -> s23 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s57 -> s31 [label="fp_off / pw_mv_dn,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s57 -> s57 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s57 -> s57 [label="fp_on / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s7 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s57 -> s57 [label="key_pos_lock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s9 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s57 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s57 -> s57 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s57 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s57 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s71 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s57 -> s58 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s57 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s57 -> s57 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s57 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s57 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s57 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s57 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s3 [label="release_pw_but / led_pw_up_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s57 -> s8 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s58 -> s58 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s58 -> s58 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s58 -> s69 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s58 -> s35 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s58 -> s59 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s58 -> s58 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s58 -> s47 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s58 -> s58 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s58 -> s58 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s58 -> s14 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s58 -> s48 [label="fp_on / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s58 -> s94 [label="fp_on / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s58 -> s49 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s58 -> s57 [label="fp_on / pw_mv_stop,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s58 -> s58 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s58 -> s11 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s58 -> s71 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s58 -> s21 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s58 -> s14 [label="fp_on / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s58 -> s47 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s58 -> s40 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s58 -> s58 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s58 -> s46 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s58 -> s47 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s58 -> s58 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s58 -> s17 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s58 -> s58 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s58 -> s58 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s58 -> s4 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s58 -> s47 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s58 -> s58 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s58 -> s46 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s58 -> s30 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s58 -> s23 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s58 -> s14 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s58 -> s62 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s58 -> s43 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s58 -> s30 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s58 -> s7 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s58 -> s92 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s58 -> s7 [label="pw_but_dn / 1,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s58 -> s60 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s58 -> s58 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s58 -> s58 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s58 -> s58 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s58 -> s47 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s58 -> s46 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s58 -> s58 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s58 -> s58 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s58 -> s15 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s58 -> s58 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s58 -> s77 [label="pw_pos_up / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s58 -> s17 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s58 -> s31 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s58 -> s55 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s58 -> s58 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s58 -> s59 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s58 -> s58 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s58 -> s46 [label="release_pw_but / led_pw_up_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 -> s59 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s59 -> s59 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s59 -> s58 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s59 -> s59 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s59 -> s66 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 -> s3 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s59 -> s59 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 -> s59 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s59 -> s46 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s59 -> s27 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s59 -> s19 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s59 -> s57 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s59 -> s88 [label="fp_on / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s59 -> s48 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s59 -> s7 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s59 -> s50 [label="fp_on / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s59 -> s87 [label="fp_on / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 -> s26 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s59 -> s71 [label="fp_on / pw_mv_stop,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s59 -> s47 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s59 -> s25 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s59 -> s59 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s59 -> s93 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 -> s21 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s59 -> s46 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s59 -> s59 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 -> s59 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 -> s59 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 -> s27 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s59 -> s59 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s59 -> s69 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s59 -> s7 [label="pw_but_dn / fp_off,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s59 -> s80 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 -> s43 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s59 -> s25 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s59 -> s43 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s59 -> s43 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s59 -> s30 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s59 -> s7 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s59 -> s14 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s59 -> s30 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s59 -> s59 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s59 -> s59 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 -> s59 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 -> s58 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s59 -> s47 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s59 -> s59 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 -> s59 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 -> s3 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s59 -> s17 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s59 -> s15 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s59 -> s73 [label="pw_pos_up / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 -> s40 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s59 -> s59 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 -> s47 [label="release_pw_but / led_pw_dn_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s59 -> s59 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s59 -> s35 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s60 -> s60 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s60 -> s60 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s60 -> s55 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s60 -> s17 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s60 -> s38 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s60 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s60 -> s18 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s60 -> s34 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s60 -> s20 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s60 -> s35 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s60 -> s30 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s60 -> s44 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s60 -> s60 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s60 -> s60 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s60 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s60 -> s60 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s25 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s60 -> s60 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s30 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s60 -> s43 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s60 -> s60 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s60 -> s23 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s60 -> s0 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s60 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s60 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s60 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s60 -> s43 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s60 -> s60 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s60 -> s60 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s60 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s60 -> s45 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s60 -> s23 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s60 -> s14 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s60 -> s59 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s60 -> s60 [label="pw_but_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s47 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s60 -> s21 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s60 -> s69 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s60 -> s39 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s60 -> s2 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s60 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s60 -> s9 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s60 -> s6 [label="pw_mv_up / led_pw_up_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s89 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s60 -> s60 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s60 -> s16 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s60 -> s60 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s60 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s56 [label="receiveMsg / pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s60 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s60 -> s60 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s60 -> s52 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s61 -> s61 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s61 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s61 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 -> s61 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 -> s70 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s61 -> s61 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 -> s61 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s61 -> s61 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 -> s75 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s61 -> s22 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 -> s61 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 -> s61 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 -> s5 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s61 -> s5 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 -> s7 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s69 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s61 -> s3 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s61 -> s27 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 -> s61 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 -> s61 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 -> s28 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s61 -> s61 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 -> s61 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 -> s61 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s61 -> s49 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s62 -> s70 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s62 -> s91 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s62 -> s62 [label="fp_off / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s62 -> s62 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s62 -> s62 [label="fp_on / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s62 -> s5 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s62 -> s76 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s62 -> s62 [label="key_pos_unlock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s62 -> s62 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s62 -> s62 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s62 -> s62 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s62 -> s66 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s62 -> s47 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s62 -> s80 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s62 -> s62 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s62 -> s62 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s62 -> s43 [label="pw_mv_up / led_pw_up_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s62 -> s50 [label="pw_pos_dn / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s62 -> s9 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s62 -> s62 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s62 -> s62 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s62 -> s62 [label="release_pw_but / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s62 -> s43 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s63 -> s81 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s63 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s24 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s63 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s63 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s63 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s9 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s63 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s63 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s63 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s63 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s63 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s63 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s64 -> s64 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s64 -> s2 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s64 -> s10 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s64 -> s42 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s64 -> s40 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s64 -> s35 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s64 -> s19 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s64 -> s67 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s64 -> s64 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s64 -> s64 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s64 -> s64 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s64 -> s64 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s64 -> s73 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s64 -> s42 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s64 -> s64 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s64 -> s7 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s64 -> s2 [label="mpw_stop / pw_inactivated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s64 -> s64 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s64 -> s64 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s64 -> s15 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s64 -> s64 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s64 -> s7 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s64 -> s44 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s64 -> s64 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s64 -> s64 [label="pw_mv_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s64 -> s33 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s64 -> s15 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s64 -> s64 [label="pw_mv_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s64 -> s64 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s64 -> s64 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s64 -> s64 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s64 -> s64 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s64 -> s14 [label="release_pw_but / led_pw_dn_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 -> s65 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 -> s65 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 -> s65 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s65 -> s65 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 -> s28 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s65 -> s70 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 -> s65 [label="key_pos_unlock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 -> s65 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 -> s65 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 -> s26 [label="pw_but_dn / fp_off,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 -> s9 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s65 -> s18 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s65 -> s65 [label="pw_but_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 -> s58 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s65 -> s21 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s65 -> s65 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 -> s65 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 -> s65 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 -> s65 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 -> s65 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s65 -> s32 [label="receiveMsg / pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s65 -> s52 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s65 -> s20 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s58 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s66 -> s66 [label="finger_detected / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s66 [label="fp_off / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s66 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s66 -> s30 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s66 -> s95 [label="fp_on / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s27 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s66 [label="key_pos_unlock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s66 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s66 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s80 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s62 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s66 -> s66 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s66 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s66 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s66 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s40 [label="pw_pos_up / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s73 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s66 -> s66 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s39 [label="release_pw_but / led_pw_dn_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s66 -> s14 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s67 -> s3 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s67 -> s67 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s67 -> s64 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s67 -> s67 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s67 -> s0 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s67 -> s43 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s67 -> s67 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s67 -> s73 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s67 -> s77 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s67 -> s67 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s67 -> s67 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s67 -> s67 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s67 -> s67 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s68 -> s68 [label="finger_detected / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s68 -> s47 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s68 -> s68 [label="fp_off / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s68 -> s68 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s68 -> s88 [label="fp_on / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s68 -> s57 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s68 -> s69 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s68 -> s68 [label="key_pos_unlock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s68 -> s68 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s68 -> s68 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s68 -> s43 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s68 -> s76 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s68 -> s68 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s68 -> s68 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s68 -> s68 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s68 -> s68 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s68 -> s77 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s68 -> s33 [label="pw_pos_up / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s68 -> s68 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s68 -> s14 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s68 -> s39 [label="release_pw_but / led_pw_up_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s69 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s69 -> s69 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s69 -> s25 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s69 -> s69 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s46 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s69 -> s58 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s69 -> s69 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s69 -> s69 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s21 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s69 -> s51 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s69 -> s96 [label="fp_on / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s57 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s69 -> s69 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s27 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s69 -> s68 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s69 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s69 -> s27 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s69 -> s69 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s69 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s69 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s69 -> s59 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s69 -> s69 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s69 -> s60 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s69 -> s92 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s5 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s69 -> s44 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s69 -> s5 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s69 -> s69 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s69 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s69 -> s69 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s69 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s69 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s81 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s69 -> s55 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s69 -> s15 [label="pw_pos_up / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s14 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s69 -> s35 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s69 -> s69 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s34 [label="release_pw_but / led_pw_up_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s69 -> s27 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s70 -> s70 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s70 -> s70 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s70 -> s70 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 -> s70 [label="fp_off / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 -> s70 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s70 -> s3 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s70 -> s70 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 -> s61 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s70 -> s70 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 -> s34 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s70 -> s48 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s70 -> s65 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 -> s70 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 -> s70 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 -> s62 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s70 -> s49 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s70 -> s2 [label="pw_but_dn / fp_off,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 -> s39 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s70 -> s70 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 -> s58 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s70 -> s70 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 -> s70 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 -> s70 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 -> s65 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s70 -> s70 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 -> s52 [label="receiveMsg / pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s70 -> s70 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s70 -> s82 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s70 -> s38 [label="release_pw_but / led_pw_dn_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s71 -> s71 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s71 -> s71 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s71 -> s71 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s71 -> s57 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s71 -> s31 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s71 -> s1 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s71 -> s7 [label="fp_off / pw_mv_dn,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s71 -> s71 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s71 -> s41 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s71 -> s71 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s71 -> s71 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s71 -> s71 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s71 -> s57 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s71 -> s71 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s71 -> s71 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s71 -> s71 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s71 -> s71 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s71 -> s71 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s72 -> s32 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s72 -> s72 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s72 -> s22 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s72 -> s37 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s72 -> s72 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s72 -> s78 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s72 -> s72 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s72 -> s35 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s72 -> s15 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s72 -> s72 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s72 -> s72 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s72 -> s30 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s72 -> s72 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s72 -> s72 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s72 -> s72 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s72 -> s72 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s72 -> s72 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s72 -> s72 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s72 -> s54 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s73 -> s31 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s73 -> s40 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s73 -> s73 [label="fp_off / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s73 -> s73 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s73 -> s73 [label="fp_on / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s73 -> s33 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s73 -> s64 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s73 -> s73 [label="key_pos_unlock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s73 -> s73 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s73 -> s26 [label="mpw_stop / pw_inactivated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s73 -> s11 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s73 -> s80 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s73 -> s62 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s73 -> s73 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s73 -> s73 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s73 -> s73 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s73 -> s73 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s73 -> s73 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s73 -> s73 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s73 -> s67 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s73 -> s30 [label="release_pw_but / led_pw_dn_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s74 -> s74 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s74 -> s45 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s74 -> s74 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s74 -> s74 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s74 -> s74 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s74 -> s18 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s74 -> s74 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s74 -> s74 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s74 -> s74 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s74 -> s74 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s74 -> s74 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s74 -> s32 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s74 -> s22 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s75 -> s75 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s75 -> s75 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s75 -> s75 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s75 -> s34 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s75 -> s86 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s75 -> s75 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s75 -> s75 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s75 -> s75 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s75 -> s49 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s75 -> s61 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s75 -> s75 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s75 -> s75 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s75 -> s75 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s75 -> s16 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s75 -> s30 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s75 -> s50 [label="pw_but_dn / fp_off,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s75 -> s80 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s75 -> s32 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s75 -> s17 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s75 -> s27 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s75 -> s39 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s75 -> s22 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s75 -> s75 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s75 -> s89 [label="pw_mv_up / led_pw_up_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s75 -> s75 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s75 -> s29 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s75 -> s75 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s75 -> s75 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s75 -> s75 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s75 -> s75 [label="release_pw_but / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s75 -> s49 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s76 -> s13 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 -> s86 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s76 -> s76 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s76 -> s76 [label="fp_off / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 -> s76 [label="fp_on / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 -> s80 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s76 -> s76 [label="key_pos_lock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 -> s62 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 -> s76 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 -> s76 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 -> s76 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 -> s46 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 -> s68 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s76 -> s76 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s76 -> s44 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 -> s76 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s76 -> s92 [label="pw_mv_up / led_pw_up_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 -> s3 [label="pw_pos_dn / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 -> s89 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s76 -> s76 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 -> s76 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 -> s76 [label="release_pw_but / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s76 -> s43 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s77 -> s35 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s77 -> s15 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s77 -> s77 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s77 -> s77 [label="fp_off / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s77 -> s15 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s77 -> s77 [label="fp_on / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s77 -> s77 [label="key_pos_lock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s77 -> s79 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s77 -> s77 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s77 -> s12 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s77 -> s6 [label="mpw_stop / pw_inactivated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s77 -> s76 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s77 -> s92 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s77 -> s77 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s77 -> s77 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s77 -> s77 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s77 -> s77 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s77 -> s77 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s77 -> s77 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s77 -> s14 [label="release_pw_but / led_pw_up_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s77 -> s67 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s78 -> s78 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s78 -> s38 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s78 -> s78 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s78 -> s78 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s78 -> s72 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s78 -> s33 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s78 -> s78 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s78 -> s54 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s78 -> s78 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s78 -> s78 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s78 -> s78 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s78 -> s78 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s79 -> s79 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s79 -> s36 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s79 -> s79 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s79 -> s33 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s79 -> s17 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s79 -> s79 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s79 -> s68 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s79 -> s57 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s79 -> s79 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s79 -> s77 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s79 -> s79 [label="key_pos_unlock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s79 -> s79 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s79 -> s8 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s79 -> s11 [label="mpw_stop / pw_inactivated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s79 -> s79 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s79 -> s79 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s79 -> s17 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s79 -> s79 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s79 -> s25 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s79 -> s80 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s79 -> s23 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s79 -> s43 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s79 -> s79 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s79 -> s79 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s79 -> s79 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s79 -> s79 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s79 -> s79 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s79 -> s15 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s79 -> s79 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s79 -> s79 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s79 -> s39 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s79 -> s15 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s79 -> s30 [label="release_pw_but / led_pw_up_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s80 -> s75 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s80 -> s55 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s80 -> s76 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s80 -> s80 [label="fp_off / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s80 -> s80 [label="fp_on / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s80 -> s80 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s80 -> s44 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s80 -> s80 [label="key_pos_unlock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s80 -> s80 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s80 -> s80 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s80 -> s80 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s80 -> s79 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s80 -> s59 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s80 -> s80 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s80 -> s80 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s80 -> s84 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s80 -> s80 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s80 -> s80 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s80 -> s62 [label="release_pw_but / led_pw_dn_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s80 -> s44 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s81 -> s81 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s81 -> s8 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s81 -> s79 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s81 -> s81 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s81 -> s81 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s81 -> s81 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s81 -> s15 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s81 -> s81 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s81 -> s23 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s81 -> s81 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s81 -> s81 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s81 -> s81 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s81 -> s81 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s82 -> s82 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s82 -> s82 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s82 -> s82 [label="fp_off / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s82 -> s82 [label="fp_on / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s82 -> s49 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s82 -> s28 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s82 -> s82 [label="key_pos_unlock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s82 -> s82 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s82 -> s82 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s82 -> s43 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s82 -> s59 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s82 -> s68 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s82 -> s82 [label="pw_mv_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s82 -> s70 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s82 -> s82 [label="pw_mv_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s82 -> s86 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s82 -> s89 [label="pw_pos_dn / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s82 -> s20 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s82 -> s82 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s82 -> s82 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s82 -> s82 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s82 -> s91 [label="release_pw_but / led_pw_up_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 -> s83 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 -> s83 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s83 -> s83 [label="fp_off / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 -> s83 [label="fp_on / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 -> s29 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s83 -> s35 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 -> s83 [label="key_pos_unlock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 -> s83 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 -> s83 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 -> s11 [label="pw_but_dn / fp_off,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 -> s89 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s83 -> s47 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s83 -> s83 [label="pw_but_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 -> s83 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 -> s83 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 -> s83 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 -> s83 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 -> s83 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s83 -> s18 [label="receiveMsg / pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s83 -> s20 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s29 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s84 -> s22 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s89 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s84 -> s84 [label="fp_off / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s84 [label="fp_on / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s84 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s84 -> s5 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s84 [label="key_pos_unlock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s84 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s84 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s84 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s59 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s79 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s84 -> s84 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s84 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s84 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s84 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s84 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s84 -> s25 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s84 -> s50 [label="release_pw_but / led_pw_dn_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 -> s85 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s85 -> s85 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s85 -> s85 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 -> s52 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s85 -> s91 [label="fp_off / pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 -> s85 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 -> s48 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 -> s51 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s85 -> s85 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 -> s85 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 -> s85 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 -> s4 [label="pw_but_dn / fp_off,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 -> s87 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s85 -> s85 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 -> s95 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 -> s88 [label="pw_mv_up / led_pw_up_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 -> s85 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 -> s85 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 -> s85 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s85 -> s85 [label="release_pw_but / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s86 -> s86 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s86 -> s86 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s86 -> s75 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s86 -> s86 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s86 -> s86 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s86 -> s76 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s86 -> s47 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s86 -> s86 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s86 -> s86 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s86 -> s83 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s86 -> s86 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s86 -> s86 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s86 -> s82 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s87 -> s87 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s87 -> s87 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s87 -> s95 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s87 -> s85 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s87 -> s80 [label="fp_off / pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s87 -> s30 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s87 -> s87 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s87 -> s50 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s87 -> s8 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s87 -> s87 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s87 -> s87 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s87 -> s87 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s87 -> s87 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s87 -> s87 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s87 -> s87 [label="pw_mv_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s87 -> s87 [label="pw_mv_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s87 -> s87 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s87 -> s87 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s87 -> s87 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s87 -> s4 [label="release_pw_but / led_pw_dn_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s88 -> s88 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s88 -> s82 [label="fp_off / pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s88 -> s43 [label="fp_off / pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s88 -> s88 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s88 -> s96 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s88 -> s88 [label="key_pos_unlock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s88 -> s88 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s88 -> s88 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s88 -> s48 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s88 -> s23 [label="pw_but_dn / fp_off,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s88 -> s88 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s88 -> s88 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s88 -> s88 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s88 -> s88 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s88 -> s88 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s88 -> s88 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s88 -> s85 [label="release_pw_but / led_pw_up_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s88 -> s50 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s89 -> s89 [label="finger_detected / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s89 -> s83 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s89 -> s89 [label="fp_off / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s89 -> s89 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s89 -> s84 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s89 -> s89 [label="fp_on / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s89 -> s41 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s89 -> s89 [label="key_pos_unlock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s89 -> s89 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s89 -> s89 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s89 -> s9 [label="pw_but_dn / fp_off,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s89 -> s89 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s89 -> s68 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s89 -> s89 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s89 -> s89 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s89 -> s89 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s89 -> s89 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s89 -> s89 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s89 -> s60 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and LED_Finger_Protection))))]"];
	s89 -> s75 [label="release_pw_but / led_pw_up_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 -> s52 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 -> s90 [label="fp_off / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 -> s90 [label="fp_on / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 -> s90 [label="key_pos_lock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 -> s16 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 -> s64 [label="m_pw_msg / m_pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 -> s90 [label="mpw_stop / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 -> s90 [label="pw_but_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 -> s90 [label="pw_but_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 -> s90 [label="pw_mv_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 -> s90 [label="pw_mv_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 -> s90 [label="pw_pos_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 -> s90 [label="pw_pos_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 -> s90 [label="receiveMsg / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s90 -> s56 [label="release_pw_but / led_pw_dn_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 -> s91 [label="finger_detected / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 -> s91 [label="fp_off / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 -> s91 [label="fp_on / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 -> s13 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 -> s91 [label="key_pos_unlock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 -> s91 [label="m_pw_msg / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 -> s91 [label="mpw_stop / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 -> s62 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 -> s39 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 -> s55 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 -> s82 [label="pw_mv_up / led_pw_up_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 -> s75 [label="pw_pos_dn / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 -> s91 [label="pw_pos_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 -> s91 [label="receiveMsg / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s91 -> s91 [label="release_pw_but / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s28 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s92 [label="fp_off / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s92 [label="fp_on / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s92 [label="key_pos_lock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s43 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s92 [label="m_pw_msg / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s92 [label="mpw_stop / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s92 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s58 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s92 [label="pw_mv_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s92 [label="pw_mv_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s57 [label="pw_pos_dn / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s92 [label="pw_pos_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s92 [label="receiveMsg / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s92 -> s76 [label="release_pw_but / led_pw_up_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s93 -> s27 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s93 -> s93 [label="fp_off / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s93 -> s8 [label="fp_on / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s93 -> s93 [label="key_pos_lock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s93 -> s59 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s93 -> s93 [label="m_pw_msg / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s93 -> s93 [label="mpw_stop / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s93 -> s44 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s93 -> s93 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s93 -> s93 [label="pw_mv_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s93 -> s93 [label="pw_mv_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s93 -> s93 [label="pw_pos_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s93 -> s64 [label="pw_pos_up / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s93 -> s93 [label="receiveMsg / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s93 -> s46 [label="release_pw_but / led_pw_dn_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 -> s96 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 -> s92 [label="fp_off / pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 -> s94 [label="fp_on / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 -> s94 [label="key_pos_lock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 -> s23 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 -> s94 [label="m_pw_msg / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 -> s94 [label="mpw_stop / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 -> s94 [label="pw_but_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 -> s94 [label="pw_but_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 -> s94 [label="pw_mv_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 -> s94 [label="pw_mv_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 -> s94 [label="pw_pos_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 -> s94 [label="pw_pos_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 -> s94 [label="receiveMsg / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s94 -> s51 [label="release_pw_but / led_pw_up_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 -> s95 [label="finger_detected / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 -> s55 [label="fp_off / pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 -> s95 [label="fp_on / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 -> s36 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 -> s95 [label="key_pos_unlock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 -> s95 [label="m_pw_msg / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 -> s95 [label="mpw_stop / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 -> s87 [label="pw_but_dn / fp_off,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 -> s95 [label="pw_but_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 -> s95 [label="pw_mv_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 -> s95 [label="pw_mv_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 -> s95 [label="pw_pos_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 -> s95 [label="pw_pos_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 -> s95 [label="receiveMsg / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s95 -> s85 [label="release_pw_but / led_pw_dn_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s96 -> s96 [label="finger_detected / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s96 -> s28 [label="fp_off / pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s96 -> s96 [label="fp_on / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s96 -> s96 [label="key_pos_lock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s96 -> s88 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s96 -> s96 [label="m_pw_msg / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s96 -> s96 [label="mpw_stop / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s96 -> s94 [label="pw_but_dn / fp_off,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s96 -> s96 [label="pw_but_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s96 -> s96 [label="pw_mv_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s96 -> s96 [label="pw_mv_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s96 -> s96 [label="pw_pos_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s96 -> s96 [label="pw_pos_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s96 -> s96 [label="receiveMsg / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	s96 -> s48 [label="release_pw_but / led_pw_up_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Power_Window and not LED_Finger_Protection))]"];
	__start0 [label="" shape="none" width="0" height="0"];
	__start0 -> s0;
}