digraph g {
	edge [lblstyle="above, sloped"];
	s0 [shape="circle" label="0@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s1 [shape="circle" label="1@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s2 [shape="circle" label="2@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s3 [shape="circle" label="3@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s4 [shape="circle" label="4@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s5 [shape="circle" label="5@[((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s6 [shape="circle" label="6@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s7 [shape="circle" label="7@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 [shape="circle" label="8@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s9 [shape="circle" label="9@[((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s10 [shape="circle" label="10@[((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s11 [shape="circle" label="11@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s12 [shape="circle" label="12@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s13 [shape="circle" label="13@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s14 [shape="circle" label="14@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s15 [shape="circle" label="15@[((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s16 [shape="circle" label="16@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s17 [shape="circle" label="17@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s18 [shape="circle" label="18@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s19 [shape="circle" label="19@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s20 [shape="circle" label="20@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 [shape="circle" label="21@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s22 [shape="circle" label="22@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s23 [shape="circle" label="23@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s24 [shape="circle" label="24@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s25 [shape="circle" label="25@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s26 [shape="circle" label="26@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s27 [shape="circle" label="27@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s28 [shape="circle" label="28@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s29 [shape="circle" label="29@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s30 [shape="circle" label="30@[((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s31 [shape="circle" label="31@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 [shape="circle" label="32@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s33 [shape="circle" label="33@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s34 [shape="circle" label="34@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s35 [shape="circle" label="35@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s36 [shape="circle" label="36@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s37 [shape="circle" label="37@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s38 [shape="circle" label="38@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s39 [shape="circle" label="39@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 [shape="circle" label="40@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s41 [shape="circle" label="41@[((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s42 [shape="circle" label="42@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s43 [shape="circle" label="43@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s44 [shape="circle" label="44@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s45 [shape="circle" label="45@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s46 [shape="circle" label="46@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s47 [shape="circle" label="47@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s48 [shape="circle" label="48@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s49 [shape="circle" label="49@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s50 [shape="circle" label="50@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s51 [shape="circle" label="51@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s52 [shape="circle" label="52@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s53 [shape="circle" label="53@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 [shape="circle" label="54@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s55 [shape="circle" label="55@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s56 [shape="circle" label="56@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s57 [shape="circle" label="57@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s58 [shape="circle" label="58@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s59 [shape="circle" label="59@[((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s60 [shape="circle" label="60@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s61 [shape="circle" label="61@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s62 [shape="circle" label="62@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 [shape="circle" label="63@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s64 [shape="circle" label="64@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s65 [shape="circle" label="65@[((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s66 [shape="circle" label="66@[((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s67 [shape="circle" label="67@[((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s68 [shape="circle" label="68@[((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s69 [shape="circle" label="69@[((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s0 -> s0 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s0 -> s0 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s0 -> s1 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s0 -> s2 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s0 -> s3 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s0 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s0 -> s0 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s0 -> s4 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s0 -> s1 [label="fp_on / 1,led_fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s0 -> s5 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s0 -> s0 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s0 -> s9 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s0 -> s6 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s2 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s0 -> s0 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s0 -> s0 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s0 -> s0 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s0 -> s7 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s0 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s6 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s0 [label="pw_but_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s0 -> s0 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s0 -> s4 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s6 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s0 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s0 -> s0 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s0 -> s9 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s8 [label="receiveMsg / pw_activated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s6 [label="receiveMsg / pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s0 -> s4 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s0 -> s0 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s29 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s1 -> s1 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s1 -> s28 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s10 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s1 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s1 -> s22 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s1 -> s1 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s1 -> s12 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s1 -> s8 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s1 -> s1 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s1 -> s1 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s1 -> s0 [label="fp_off / 1,led_fp_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s1 -> s3 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s1 -> s1 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s1 -> s1 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s1 -> s42 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s1 -> s30 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s3 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s23 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s1 -> s1 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s1 -> s1 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s1 -> s28 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s29 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s1 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s1 -> s30 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s1 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s31 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s8 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s0 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s1 -> s1 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s1 -> s9 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s18 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s1 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s1 -> s1 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s1 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s1 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s1 -> s1 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s1 -> s50 [label="receiveMsg / pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s1 -> s1 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s11 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s1 -> s24 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s2 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s2 -> s2 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s2 -> s2 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s2 -> s23 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s2 -> s2 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s2 -> s2 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s2 -> s2 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s2 -> s13 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s2 -> s25 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s2 -> s22 [label="fp_on / 1,led_fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s2 -> s24 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s2 -> s26 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s2 -> s2 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s2 -> s0 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s2 -> s2 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s2 -> s2 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s2 -> s2 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s2 -> s26 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s2 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s27 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s6 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s2 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s2 -> s0 [label="pw_but_dn / fp_off,1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s2 -> s2 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s2 -> s2 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s2 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s2 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s2 -> s2 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s2 -> s30 [label="receiveMsg / pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s2 -> s3 [label="receiveMsg / pw_activated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s2 -> s1 [label="receiveMsg / pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s9 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s2 -> s3 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s3 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s3 -> s10 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s11 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s3 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s3 -> s3 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s3 -> s3 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s3 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s3 -> s35 [label="fp_off / 1,led_fp_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s3 -> s1 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s3 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s3 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s3 -> s69 [label="fp_on / pw_mv_stop,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s3 -> s12 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s3 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s3 -> s13 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s3 -> s25 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s3 -> s11 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s1 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s3 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s3 -> s15 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s14 [label="m_pw_msg / m_pw_activated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s3 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s3 -> s3 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s14 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s3 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s4 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s19 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s0 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s8 [label="pw_but_dn / fp_off,1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s17 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s3 -> s16 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s18 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s34 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s3 -> s3 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s3 -> s14 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s3 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s21 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s3 -> s20 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s13 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s2 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s23 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s22 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s3 -> s3 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s3 -> s13 [label="pw_pos_up / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s3 -> s3 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s3 -> s24 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s3 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s3 -> s3 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s15 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s4 -> s4 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s4 -> s11 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s4 -> s3 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s4 -> s13 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s67 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s4 -> s4 [label="fp_off / 1,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s4 -> s4 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s4 -> s0 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s4 -> s9 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s4 -> s4 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s4 -> s4 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s4 -> s66 [label="fp_on / 1,led_fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s4 -> s9 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s4 -> s4 [label="key_pos_lock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s4 -> s4 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s4 -> s6 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s4 -> s29 [label="m_pw_msg / m_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s4 -> s15 [label="m_pw_msg / m_pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s4 -> s4 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s4 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s4 -> s4 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s4 -> s4 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s4 -> s4 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s4 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s4 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s4 -> s4 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s4 -> s32 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s4 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s4 -> s1 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s4 -> s0 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s5 -> s5 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s5 -> s5 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s5 -> s33 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s5 -> s25 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s5 -> s0 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s5 -> s52 [label="fp_off / 1,led_fp_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s5 -> s5 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s5 -> s5 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s5 -> s5 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s5 -> s5 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s5 -> s10 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s5 -> s5 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s5 -> s5 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s5 -> s5 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s5 -> s34 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s5 -> s5 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s5 -> s5 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s5 -> s16 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s5 -> s5 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s5 -> s36 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s5 -> s38 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s5 -> s35 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s5 -> s5 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s5 -> s5 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s5 -> s4 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s5 -> s5 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s6 -> s6 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s6 -> s6 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s6 -> s26 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s30 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s6 -> s27 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s19 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s6 -> s2 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s6 [label="fp_off / 1,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s6 -> s6 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s6 -> s50 [label="fp_on / 1,led_fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s6 -> s6 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s6 -> s4 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s6 -> s37 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s6 -> s6 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s0 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s6 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s6 -> s6 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s6 -> s8 [label="m_pw_msg / m_pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s6 -> s6 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s6 -> s6 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s0 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s6 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s6 [label="pw_but_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s6 -> s6 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s6 -> s38 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s6 -> s6 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s6 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s6 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s6 -> s6 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s6 -> s8 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s39 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s6 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s6 -> s18 [label="receiveMsg / pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s0 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s7 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s7 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s26 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s7 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s7 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s7 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s0 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s7 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s7 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s7 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s7 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s7 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s18 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s28 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s8 -> s8 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s8 -> s14 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s8 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s8 -> s3 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s41 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s8 -> s11 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s1 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s8 -> s40 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s13 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s8 -> s30 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s8 -> s42 [label="fp_off / pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s8 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s8 -> s8 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s8 -> s22 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s1 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s8 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s8 -> s51 [label="fp_on / 1,led_fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s8 -> s18 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s8 -> s17 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s8 -> s15 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s8 -> s8 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s8 -> s9 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s8 -> s8 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s8 -> s11 [label="m_pw_msg / m_pw_activated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s8 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s8 -> s28 [label="m_pw_msg / m_pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s8 -> s10 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s8 -> s8 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s8 -> s0 [label="mpw_stop / pw_inactivated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s8 -> s16 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s8 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s42 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s8 [label="pw_but_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s8 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s8 -> s17 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s8 -> s38 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s8 -> s8 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s8 -> s34 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s37 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s43 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s6 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s8 -> s8 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s8 -> s44 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s8 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s8 -> s8 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s8 -> s8 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s28 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s9 -> s15 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s29 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s45 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s9 -> s9 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s9 -> s1 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s12 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s9 -> s24 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s9 -> s9 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s9 -> s9 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s9 -> s9 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s9 -> s4 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s9 -> s42 [label="fp_on / 1,led_fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s9 -> s8 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s9 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s9 -> s0 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s9 -> s9 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s4 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s9 -> s9 [label="m_pw_msg / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s9 -> s46 [label="m_pw_msg / m_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s9 -> s29 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s9 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s9 -> s18 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s9 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s39 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s9 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s9 -> s9 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s9 -> s32 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s18 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s9 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s9 -> s9 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s9 -> s9 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s9 -> s4 [label="receiveMsg / pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s9 -> s9 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s10 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s10 -> s10 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s10 -> s25 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s10 -> s2 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s10 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s15 [label="finger_detected / fp_on [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s49 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s10 -> s18 [label="fp_off / 1,led_fp_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s10 -> s29 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s10 -> s10 [label="fp_off / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s10 -> s10 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s10 -> s10 [label="fp_on / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s10 -> s29 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s10 -> s10 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s10 -> s10 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s29 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s5 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s10 -> s28 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s10 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s10 -> s10 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s10 -> s6 [label="mpw_stop / pw_inactivated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s0 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s10 -> s10 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s10 -> s10 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s11 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s10 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s42 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s42 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s10 [label="pw_but_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s10 -> s50 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s10 -> s42 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s20 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s10 -> s23 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s10 -> s47 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s14 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s10 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s11 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s34 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s41 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s3 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s10 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s10 -> s10 [label="pw_pos_up / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s10 -> s10 [label="receiveMsg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s10 -> s10 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s11 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s28 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s2 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s11 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s14 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s11 [label="finger_detected / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s11 -> s11 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s24 [label="fp_off / 1,led_fp_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s11 -> s11 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s11 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s13 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s25 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s11 [label="fp_on / 1,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s11 -> s11 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s11 -> s12 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s3 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s11 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s19 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s22 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s11 -> s11 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s11 -> s47 [label="m_pw_msg / m_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s0 [label="mpw_stop / pw_inactivated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s11 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s11 -> s23 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s11 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s10 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s42 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s42 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s11 -> s4 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s16 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s8 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s42 [label="pw_but_dn / 1,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s16 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s44 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s11 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s11 -> s23 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s41 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s22 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s23 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s21 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s11 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s11 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s41 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s11 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s11 -> s48 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s14 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s19 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s11 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s11 -> s11 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s68 [label="receiveMsg / pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s11 -> s10 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s14 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s12 -> s12 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s12 -> s12 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s12 -> s3 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s12 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s12 -> s19 [label="fp_off / 1,led_fp_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s12 -> s12 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s12 -> s12 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s12 -> s12 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s12 -> s11 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s12 -> s28 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s12 -> s28 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s25 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s12 -> s12 [label="m_pw_msg / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s12 -> s12 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s12 -> s1 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s34 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s12 -> s32 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s9 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s12 -> s12 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s12 -> s3 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s12 -> s12 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s12 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s12 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s12 -> s33 [label="pw_pos_dn / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s12 -> s12 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s12 -> s12 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s12 -> s24 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s13 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s13 -> s13 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s13 -> s13 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s13 -> s11 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s13 -> s13 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s13 -> s2 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s13 -> s29 [label="fp_off / 1,led_fp_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s13 -> s13 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s13 -> s13 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s13 -> s13 [label="key_pos_lock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s13 -> s3 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s13 -> s13 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s13 -> s14 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s13 -> s13 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s13 -> s13 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s13 -> s11 [label="mpw_stop / pw_inactivated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s13 -> s4 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s34 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s13 -> s8 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s13 -> s42 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s13 -> s14 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s13 -> s13 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s13 -> s51 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s13 -> s13 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s13 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s19 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s13 -> s13 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s13 -> s13 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s13 -> s12 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s13 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s13 -> s3 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s14 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s14 -> s23 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s14 -> s14 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s0 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s14 -> s11 [label="finger_detected / fp_on [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s14 -> s14 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s14 -> s23 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s14 -> s14 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s14 -> s41 [label="fp_off / 1,led_fp_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s14 -> s14 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s14 -> s40 [label="fp_on / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s14 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s14 -> s14 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s14 -> s13 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s14 -> s28 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s14 -> s23 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s22 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s14 [label="key_pos_unlock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s14 -> s14 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s14 -> s2 [label="mpw_stop / pw_inactivated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s14 -> s14 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s14 -> s22 [label="mpw_stop / pw_inactivated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s14 -> s22 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s14 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s3 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s42 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s14 -> s42 [label="pw_but_dn / fp_off,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s16 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s14 -> s44 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s54 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s14 -> s20 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s14 -> s38 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s14 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s51 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s14 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s14 -> s21 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s23 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s38 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s11 [label="pw_pos_dn / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s14 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s14 -> s14 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s14 -> s47 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s14 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s14 -> s14 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s15 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s15 -> s5 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s15 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s0 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s15 -> s26 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s25 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s29 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s15 -> s15 [label="finger_detected / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s28 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s15 -> s10 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s28 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s15 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s15 -> s15 [label="fp_off / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s15 -> s46 [label="fp_on / 1,led_fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s15 -> s15 [label="fp_on / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s15 -> s28 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s15 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s15 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s15 -> s45 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s15 -> s28 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s8 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s15 -> s29 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s15 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s15 -> s15 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s15 -> s9 [label="mpw_stop / pw_inactivated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s15 -> s2 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s15 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s15 -> s26 [label="mpw_stop / pw_inactivated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s4 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s15 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s28 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s15 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s16 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s16 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s37 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s15 -> s50 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s15 -> s42 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s42 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s15 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s15 -> s21 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s15 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s15 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s15 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s15 -> s15 [label="pw_pos_up / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s15 -> s15 [label="receiveMsg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s15 -> s29 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s16 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s16 -> s16 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s16 -> s30 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s16 -> s25 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s16 -> s3 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s11 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s69 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s16 -> s23 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s42 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s16 -> s37 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s16 -> s16 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s16 -> s16 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s16 -> s42 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s16 -> s16 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s16 -> s16 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s16 -> s42 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s16 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s16 -> s60 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s16 -> s16 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s42 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s50 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s16 -> s16 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s16 -> s16 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s16 -> s16 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s8 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s16 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s16 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s16 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s16 -> s16 [label="pw_but_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s16 -> s38 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s16 -> s50 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s21 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s51 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s5 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s16 -> s16 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s16 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s22 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s54 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s16 -> s16 [label="pw_pos_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s16 -> s8 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s16 -> s50 [label="pw_pos_dn / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s44 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s16 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s16 -> s16 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s16 -> s42 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s17 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s17 -> s17 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s17 -> s3 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s17 -> s59 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s17 -> s17 [label="fp_off / 1,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s17 -> s17 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s17 -> s17 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s17 -> s54 [label="fp_on / 1,led_fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s17 -> s17 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s17 -> s37 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s17 -> s8 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s17 -> s17 [label="key_pos_unlock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s17 -> s17 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s17 -> s17 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s17 -> s17 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s17 -> s55 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s17 -> s44 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s17 -> s37 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s17 -> s18 [label="pw_pos_dn / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s17 -> s17 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s17 -> s17 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s18 -> s18 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s18 -> s45 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s18 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s18 -> s26 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s18 -> s43 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s18 -> s30 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s1 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s3 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s8 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s18 -> s18 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s18 [label="fp_off / 1,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s18 -> s10 [label="fp_on / 1,led_fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s18 -> s18 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s18 -> s18 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s52 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s18 -> s18 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s18 -> s8 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s53 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s10 [label="m_pw_msg / m_pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s18 -> s18 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s18 -> s18 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s18 -> s18 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s9 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s18 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s18 [label="pw_but_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s18 -> s18 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s18 -> s55 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s18 -> s18 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s18 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s18 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s18 -> s18 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s18 -> s18 [label="receiveMsg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s18 -> s9 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s19 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s19 -> s19 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s19 -> s19 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s19 -> s3 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s54 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s41 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s19 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s19 -> s19 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s19 -> s41 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s19 -> s22 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s19 -> s19 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s19 -> s12 [label="fp_on / 1,led_fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s19 -> s19 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s19 -> s19 [label="key_pos_lock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s19 -> s44 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s11 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s22 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s19 -> s19 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s19 -> s59 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s19 -> s19 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s19 -> s19 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s19 -> s19 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s44 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s19 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s19 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s22 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s19 -> s50 [label="pw_but_dn / fp_off,1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s6 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s19 -> s37 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s19 -> s20 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s38 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s51 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s19 -> s35 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s19 -> s21 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s55 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s19 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s19 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s19 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s19 -> s56 [label="pw_pos_dn / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s19 -> s19 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s19 -> s19 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s19 -> s50 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s20 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s20 -> s20 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s20 -> s36 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s20 -> s20 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s21 [label="finger_detected / fp_on [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s20 -> s38 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s20 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s20 -> s51 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s20 -> s20 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s20 -> s60 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s20 -> s59 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s37 [label="fp_on / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s20 -> s43 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s60 [label="fp_on / pw_mv_stop,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s20 -> s58 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s20 -> s40 [label="fp_on / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s20 -> s35 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s20 -> s20 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s20 -> s38 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s20 -> s51 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s20 -> s20 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s20 -> s20 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s20 -> s20 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s20 -> s20 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s51 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s20 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s42 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s20 -> s54 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s42 [label="pw_but_dn / fp_off,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s20 -> s44 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s10 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s20 -> s20 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s20 [label="pw_but_up / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s20 -> s20 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s20 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s20 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s20 -> s53 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s15 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s20 -> s10 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s20 -> s14 [label="pw_pos_up / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s20 -> s20 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s20 -> s51 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s21 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s21 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s23 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s20 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s21 [label="finger_detected / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s21 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s21 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s38 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s40 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s37 [label="fp_on / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s57 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s43 [label="fp_on / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s52 [label="fp_on / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s57 [label="fp_on / pw_mv_stop,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s56 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s21 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s51 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s38 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s51 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s21 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s21 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s21 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s21 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s51 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s21 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s16 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s54 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s10 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s42 [label="pw_but_dn / 1,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s42 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s5 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s17 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s21 [label="pw_but_up / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s21 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s21 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s21 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s21 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s15 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s11 [label="pw_pos_up / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s25 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s21 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s51 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s22 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s22 -> s22 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s22 -> s22 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s22 -> s19 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s22 -> s48 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s22 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s22 -> s19 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s22 -> s8 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s22 -> s2 [label="fp_off / 1,led_fp_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s22 -> s22 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s22 -> s22 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s22 -> s11 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s22 -> s14 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s22 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s22 -> s19 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s22 -> s22 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s22 -> s22 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s22 -> s22 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s22 -> s22 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s14 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s22 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s1 [label="pw_but_dn / fp_off,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s22 -> s54 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s22 -> s22 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s50 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s37 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s22 -> s42 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s20 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s21 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s22 -> s51 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s22 -> s22 [label="pw_but_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s22 -> s22 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s22 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s22 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s22 -> s22 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s22 -> s65 [label="receiveMsg / pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s22 -> s22 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s22 -> s50 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s23 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s23 -> s23 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s23 -> s25 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s23 -> s23 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s23 -> s23 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s23 -> s55 [label="fp_off / 1,led_fp_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s23 -> s23 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s52 [label="fp_on / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s23 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s23 -> s60 [label="fp_on / pw_mv_stop,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s23 -> s14 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s14 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s38 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s23 -> s23 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s23 -> s23 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s23 -> s41 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s1 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s23 -> s23 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s23 -> s23 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s23 -> s23 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s11 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s23 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s2 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s23 -> s42 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s16 [label="pw_but_dn / fp_off,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s16 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s44 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s54 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s23 -> s42 [label="pw_but_dn / fp_off,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s15 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s38 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s23 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s23 -> s51 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s25 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s23 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s23 -> s20 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s23 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s23 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s23 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s23 -> s19 [label="pw_pos_dn / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s22 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s23 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s23 -> s25 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s51 [label="pw_pos_up / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s23 -> s23 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s23 -> s12 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s23 -> s14 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s24 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s24 -> s24 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s24 [label="fp_off / 1,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s24 -> s11 [label="fp_on / 1,led_fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s24 -> s24 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s24 [label="key_pos_lock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s24 -> s2 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s24 -> s24 [label="m_pw_msg / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s24 -> s47 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s24 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s24 -> s9 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s24 -> s24 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s24 -> s12 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s1 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s24 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s24 -> s24 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s24 -> s24 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s67 [label="receiveMsg / pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s24 -> s24 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s25 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s25 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s25 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s25 -> s44 [label="fp_off / 1,led_fp_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s25 -> s11 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s25 -> s25 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s2 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s25 -> s25 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s25 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s25 -> s57 [label="fp_on / pw_mv_stop,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s25 -> s3 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s25 -> s25 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s47 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s25 [label="key_pos_unlock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s25 -> s25 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s25 -> s23 [label="mpw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s25 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s25 -> s13 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s25 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s41 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s25 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s54 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s25 -> s5 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s25 -> s17 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s16 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s25 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s51 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s25 -> s21 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s25 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s25 -> s25 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s25 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s22 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s25 -> s25 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s25 -> s14 [label="pw_pos_up / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s25 -> s25 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s3 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s25 -> s25 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s25 -> s47 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s26 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s26 -> s26 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s26 -> s26 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s26 -> s26 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s26 -> s26 [label="fp_off / 1,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s26 -> s26 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s26 -> s49 [label="fp_on / 1,led_fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s26 -> s26 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s26 -> s56 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s26 -> s2 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s26 -> s26 [label="key_pos_unlock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s26 -> s59 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s26 -> s26 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s26 -> s26 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s26 -> s26 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s2 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s26 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s6 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s26 -> s18 [label="pw_but_dn / fp_off,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s26 -> s7 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s54 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s26 -> s26 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s44 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s26 -> s55 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s26 -> s26 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s26 -> s26 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s26 -> s30 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s3 [label="receiveMsg / pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s26 -> s26 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s27 -> s27 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s27 -> s27 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s27 -> s27 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s27 -> s27 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s27 -> s27 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s27 -> s27 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s27 -> s2 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s27 -> s27 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s27 -> s6 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s27 -> s27 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s27 -> s27 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s27 -> s27 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s27 -> s31 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s28 -> s28 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s28 -> s6 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s28 -> s1 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s28 -> s2 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s28 -> s0 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s28 -> s29 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s28 -> s28 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s28 -> s28 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s28 -> s15 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s28 -> s59 [label="fp_off / 1,led_fp_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s28 -> s28 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s28 -> s28 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s28 -> s15 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s28 -> s28 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s28 -> s28 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s28 -> s14 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s28 -> s10 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s28 -> s12 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s28 -> s15 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s28 -> s28 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s28 -> s28 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s28 -> s2 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s28 -> s28 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s28 -> s0 [label="mpw_stop / pw_inactivated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s28 -> s13 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s28 -> s15 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s28 -> s28 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s28 -> s53 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s28 -> s8 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s28 -> s16 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s28 -> s16 [label="pw_but_dn / 1,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s28 -> s54 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s28 -> s50 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s28 -> s44 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s28 -> s28 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s28 -> s25 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s28 -> s28 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s28 -> s28 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s28 -> s49 [label="pw_pos_dn / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s28 -> s28 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s28 -> s28 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s28 -> s28 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s28 -> s47 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s29 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s29 -> s26 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s29 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s29 -> s0 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s2 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s47 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s29 -> s29 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s29 -> s28 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s29 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s29 -> s10 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s29 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s29 -> s10 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s29 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s13 [label="fp_on / 1,led_fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s29 -> s29 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s29 -> s29 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s29 -> s15 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s46 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s29 -> s41 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s29 -> s29 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s29 -> s10 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s29 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s29 -> s2 [label="mpw_stop / pw_inactivated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s0 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s29 -> s4 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s24 [label="mpw_stop / pw_inactivated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s29 -> s45 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s29 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s62 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s42 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s16 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s37 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s29 -> s16 [label="pw_but_dn / fp_off,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s8 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s29 -> s29 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s29 -> s15 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s53 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s29 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s29 -> s29 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s29 -> s29 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s29 -> s29 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s29 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s30 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s30 -> s15 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s30 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s30 -> s30 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s30 -> s30 [label="fp_off / 1,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s30 -> s30 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s30 -> s65 [label="fp_on / 1,led_fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s30 -> s30 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s30 -> s67 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s30 -> s30 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s30 -> s1 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s30 [label="key_pos_unlock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s30 -> s41 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s30 -> s41 [label="m_pw_msg / m_pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s30 -> s30 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s30 -> s30 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s30 -> s30 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s1 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s30 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s16 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s30 -> s18 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s8 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s6 [label="pw_but_dn / fp_off,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s30 -> s33 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s30 -> s30 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s30 -> s30 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s30 -> s26 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s30 -> s30 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s30 -> s30 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s31 -> s53 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s31 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s31 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s31 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s31 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s31 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s1 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s31 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s39 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s31 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s31 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s31 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s31 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s12 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s32 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s32 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s15 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s32 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s32 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s32 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s32 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s32 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s32 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s32 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s32 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s9 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s33 -> s33 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s33 -> s33 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s33 -> s33 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s33 -> s33 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s33 -> s56 [label="fp_off / 1,led_fp_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s33 -> s33 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s33 -> s33 [label="fp_on / 1,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s33 -> s33 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s33 -> s49 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s33 -> s33 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s33 -> s33 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s33 -> s5 [label="pw_but_dn / fp_off,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s33 -> s16 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s33 -> s55 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s33 -> s3 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s33 -> s33 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s33 -> s33 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s33 -> s33 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s34 -> s34 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s34 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s41 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s34 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s12 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s34 -> s37 [label="fp_off / 1,led_fp_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s34 -> s34 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s34 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s34 [label="fp_on / 1,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s34 -> s34 [label="key_pos_lock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s34 -> s54 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s34 -> s34 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s34 -> s34 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s34 -> s5 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s34 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s54 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s8 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s34 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s34 -> s44 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s38 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s34 -> s34 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s34 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s54 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s5 [label="pw_pos_dn / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s34 -> s34 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s34 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s34 -> s34 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s34 -> s10 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s35 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s35 -> s35 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s35 -> s35 [label="finger_detected / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s35 -> s55 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s35 -> s35 [label="fp_off / 1,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s35 -> s35 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s35 -> s69 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s35 -> s40 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s35 -> s35 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s35 -> s20 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s35 -> s44 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s35 -> s35 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s35 -> s35 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s35 -> s37 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s35 -> s5 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s35 -> s35 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s35 -> s35 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s35 -> s35 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s35 -> s45 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s35 -> s29 [label="pw_pos_up / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s35 -> s35 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s36 -> s36 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s36 -> s36 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s36 -> s21 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s35 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s36 -> s36 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s36 -> s36 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s36 -> s36 [label="fp_off / 1,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s36 -> s37 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s16 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s36 -> s61 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s36 -> s55 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s36 -> s36 [label="key_pos_lock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s36 -> s55 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s36 -> s36 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s36 -> s36 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s36 -> s36 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s36 -> s36 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s38 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s36 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s5 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s37 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s36 -> s10 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s36 -> s36 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s36 -> s36 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s36 -> s36 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s36 -> s45 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s15 [label="pw_pos_up / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s36 -> s28 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s36 -> s36 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s37 -> s37 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s37 -> s37 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s37 -> s52 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s37 -> s43 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s37 -> s22 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s37 -> s19 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s37 -> s37 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s37 -> s16 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s37 -> s42 [label="fp_off / pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s37 -> s37 [label="fp_off / 1,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s37 -> s34 [label="fp_on / 1,led_fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s37 -> s37 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s37 -> s37 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s37 -> s40 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s37 -> s6 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s37 -> s17 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s37 -> s43 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s37 -> s37 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s37 -> s37 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s37 -> s37 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s37 -> s40 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s37 -> s37 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s37 -> s37 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s37 -> s37 [label="pw_but_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s37 -> s36 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s37 -> s37 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s37 -> s44 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s37 -> s37 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s37 -> s37 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s37 -> s37 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s37 -> s52 [label="pw_pos_dn / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s37 -> s37 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s37 -> s37 [label="receiveMsg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s37 -> s8 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s38 -> s38 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s38 -> s38 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s38 -> s3 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s38 -> s38 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s38 -> s51 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s38 -> s36 [label="fp_off / 1,led_fp_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s38 -> s38 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s38 -> s20 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s38 -> s38 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s38 -> s60 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s38 -> s16 [label="fp_on / pw_mv_stop,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s38 -> s43 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s40 [label="fp_on / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s38 -> s18 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s38 -> s63 [label="fp_on / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s38 -> s57 [label="fp_on / pw_mv_stop,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s38 -> s21 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s38 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s38 -> s44 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s38 -> s20 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s23 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s38 -> s38 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s38 -> s38 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s38 -> s38 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s38 -> s36 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s38 -> s38 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s38 -> s55 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s38 -> s34 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s38 -> s50 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s38 -> s34 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s38 -> s16 [label="pw_but_dn / fp_off,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s8 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s38 -> s16 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s38 -> s44 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s38 -> s50 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s38 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s38 -> s38 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s38 -> s38 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s38 -> s38 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s38 -> s38 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s38 -> s28 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s38 -> s46 [label="pw_pos_up / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s38 -> s29 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s38 -> s38 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s38 -> s14 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s39 -> s62 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s39 -> s39 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s39 -> s31 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s39 -> s39 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s39 -> s39 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s39 -> s39 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s39 -> s9 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s39 -> s39 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s39 -> s39 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s39 -> s39 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s39 -> s39 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s39 -> s39 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s39 -> s39 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s40 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s40 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s52 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s59 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s64 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s40 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s16 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s10 [label="fp_off / pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s23 [label="fp_off / pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s8 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s42 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s40 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s40 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s37 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s52 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s58 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s40 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s40 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s40 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s37 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s40 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s64 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s8 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s40 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s43 [label="pw_but_dn / fp_off,1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s40 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s52 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s63 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s40 -> s40 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s40 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s40 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s40 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s41 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s41 -> s41 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s41 -> s41 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s41 -> s41 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s41 -> s41 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s41 -> s19 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s41 -> s14 [label="fp_on / 1,led_fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s41 -> s41 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s41 -> s29 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s41 -> s23 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s30 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s41 -> s41 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s41 -> s41 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s41 -> s2 [label="mpw_stop / pw_inactivated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s41 -> s41 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s41 -> s25 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s41 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s47 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s8 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s41 -> s17 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s41 -> s50 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s41 -> s8 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s19 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s51 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s20 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s41 [label="pw_but_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s41 -> s14 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s49 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s41 -> s48 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s54 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s41 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s41 -> s59 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s41 -> s41 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s41 -> s41 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s41 -> s41 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s42 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s42 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s23 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s42 -> s11 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s42 -> s14 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s10 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s59 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s13 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s42 -> s9 [label="fp_off / 1,led_fp_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s42 -> s42 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s42 -> s42 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s16 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s42 -> s16 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s42 -> s42 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s42 -> s42 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s16 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s54 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s42 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s42 -> s1 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s42 -> s16 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s42 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s42 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s42 -> s42 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s42 -> s42 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s8 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s42 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s42 [label="pw_but_dn / 1,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s42 [label="pw_but_dn / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s42 -> s54 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s51 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s20 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s10 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s42 -> s42 [label="pw_but_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s42 -> s21 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s42 -> s16 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s44 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s22 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s42 -> s44 [label="pw_pos_dn / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s42 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s42 -> s50 [label="pw_pos_dn / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s19 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s42 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s42 -> s42 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s66 [label="receiveMsg / pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s42 -> s42 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s43 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s43 -> s43 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s43 -> s40 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s43 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s43 -> s63 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s42 [label="fp_off / pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s43 -> s3 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s16 [label="fp_off / pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s13 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s43 -> s44 [label="fp_off / pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s23 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s43 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s43 -> s56 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s43 -> s43 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s37 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s59 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s43 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s43 -> s43 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s43 -> s43 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s43 -> s43 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s52 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s43 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s18 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s43 -> s37 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s43 [label="pw_but_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s43 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s43 -> s43 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s43 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s43 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s43 -> s43 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s43 -> s43 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s43 -> s8 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s44 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s44 -> s44 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s44 -> s23 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s44 -> s44 [label="finger_detected / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s44 -> s14 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s11 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s44 -> s34 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s21 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s44 -> s44 [label="fp_off / 1,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s44 -> s44 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s44 -> s44 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s52 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s44 -> s57 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s44 -> s35 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s44 -> s44 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s44 -> s50 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s44 -> s38 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s44 -> s19 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s44 -> s44 [label="key_pos_unlock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s44 -> s44 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s44 -> s44 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s44 -> s50 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s44 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s19 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s17 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s44 -> s44 [label="pw_but_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s44 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s17 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s44 -> s38 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s20 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s51 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s44 -> s44 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s44 -> s44 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s44 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s44 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s44 -> s19 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s44 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s41 [label="pw_pos_up / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s44 -> s46 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s44 -> s44 [label="receiveMsg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s44 -> s42 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s45 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s7 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s2 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s15 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s14 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s45 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s45 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s45 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s15 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s45 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s45 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s45 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s29 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s45 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s45 -> s16 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s45 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s45 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s45 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s45 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s46 -> s46 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s46 -> s46 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s46 -> s13 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s46 -> s25 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s46 -> s46 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s46 -> s15 [label="fp_off / 1,led_fp_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s46 -> s46 [label="fp_on / 1,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s46 -> s46 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s46 -> s46 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s46 -> s29 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s46 -> s51 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s46 -> s46 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s46 -> s2 [label="mpw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s46 -> s42 [label="mpw_stop / pw_inactivated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s46 -> s17 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s46 -> s34 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s46 -> s46 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s46 -> s46 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s46 -> s46 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s46 -> s46 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s47 -> s47 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s47 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s47 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s47 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s47 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s25 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s47 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s47 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s1 [label="mpw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s3 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s47 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s41 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s47 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s42 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s8 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s20 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s47 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s25 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s28 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s47 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s47 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s47 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s47 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s48 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s48 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s48 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s48 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s48 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s22 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s23 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s48 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s48 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s48 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s48 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s48 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s41 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s49 -> s49 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s49 -> s49 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s49 -> s49 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s49 -> s26 [label="fp_off / 1,led_fp_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s49 -> s49 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s49 -> s49 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s49 -> s49 [label="fp_on / 1,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s49 -> s33 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s49 -> s49 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s49 -> s49 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s49 -> s49 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s49 -> s50 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s49 -> s10 [label="pw_but_dn / fp_off,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s49 -> s25 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s49 -> s36 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s49 -> s49 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s49 -> s49 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s49 -> s49 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s50 -> s50 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s50 -> s50 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s50 -> s23 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s50 -> s14 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s19 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s65 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s50 -> s22 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s50 -> s41 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s50 -> s50 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s50 -> s6 [label="fp_off / 1,led_fp_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s50 -> s50 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s50 -> s50 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s50 -> s54 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s50 -> s50 [label="fp_on / 1,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s50 -> s66 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s50 -> s44 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s50 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s16 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s50 -> s50 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s50 -> s54 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s50 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s50 -> s51 [label="m_pw_msg / m_pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s50 -> s50 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s50 -> s50 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s50 -> s44 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s50 -> s50 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s50 -> s50 [label="pw_but_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s50 -> s16 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s36 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s50 -> s21 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s50 -> s50 [label="pw_but_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s50 -> s38 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s50 -> s10 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s50 -> s51 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s50 -> s20 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s50 -> s22 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s50 -> s19 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s50 -> s42 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s50 -> s50 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s50 -> s50 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s50 -> s50 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s50 -> s50 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s51 -> s51 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s51 -> s51 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s51 -> s51 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s51 -> s38 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s51 -> s14 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s51 -> s21 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s51 -> s51 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s51 -> s51 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s51 -> s8 [label="fp_off / 1,led_fp_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s51 -> s60 [label="fp_on / pw_mv_stop,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s51 -> s8 [label="fp_on / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s51 -> s52 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s51 -> s51 [label="fp_on / 1,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s51 -> s37 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s51 -> s43 [label="fp_on / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s51 -> s57 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s51 -> s21 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s51 -> s20 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s51 -> s51 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s51 -> s46 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s51 -> s21 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s51 -> s51 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s51 -> s51 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s51 -> s1 [label="mpw_stop / pw_inactivated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s51 -> s51 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s51 -> s21 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s51 -> s51 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s51 -> s20 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s51 -> s16 [label="pw_but_dn / 1,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s51 -> s54 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s51 -> s50 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s51 -> s16 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s51 -> s34 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s51 -> s8 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s51 -> s42 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s51 -> s50 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s51 -> s51 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s51 -> s51 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s51 -> s21 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s51 -> s20 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s51 -> s51 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s51 -> s51 [label="pw_pos_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s51 -> s47 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s51 -> s28 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s51 -> s29 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s51 -> s51 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s51 -> s51 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s52 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s52 -> s52 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s52 -> s52 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s56 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s52 -> s52 [label="fp_off / 1,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s52 -> s11 [label="fp_off / pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s17 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s52 -> s14 [label="fp_off / pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s5 [label="fp_on / 1,led_fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s52 -> s52 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s52 -> s52 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s52 -> s18 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s52 -> s40 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s52 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s52 -> s52 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s52 -> s43 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s52 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s59 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s37 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s40 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s52 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s52 -> s52 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s52 -> s36 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s52 -> s52 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s52 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s52 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s52 -> s52 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s52 -> s52 [label="receiveMsg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s52 -> s40 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s53 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s27 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s28 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s53 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s53 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s53 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s53 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s6 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s53 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s28 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s53 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s42 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s44 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s53 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s53 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s53 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s53 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s53 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s53 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s29 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s54 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s54 -> s54 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s54 -> s22 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s54 -> s28 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s54 -> s14 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s54 -> s54 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s47 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s26 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s54 -> s17 [label="fp_off / 1,led_fp_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s54 -> s50 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s54 -> s54 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s54 -> s54 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s54 -> s54 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s54 -> s50 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s54 -> s54 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s54 -> s34 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s54 -> s42 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s54 -> s54 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s54 -> s54 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s54 -> s54 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s54 -> s54 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s34 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s54 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s54 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s54 -> s19 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s54 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s54 -> s42 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s55 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s35 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s54 -> s38 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s21 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s54 -> s23 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s54 -> s54 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s54 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s54 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s54 -> s10 [label="pw_pos_dn / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s54 -> s54 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s54 -> s54 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s54 -> s41 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s55 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s55 -> s55 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s55 -> s20 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s55 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s55 -> s44 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s55 -> s55 [label="fp_off / 1,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s55 -> s55 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s55 -> s60 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s55 -> s64 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s55 -> s55 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s55 -> s36 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s55 -> s55 [label="key_pos_unlock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s55 -> s36 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s55 -> s55 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s55 -> s55 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s55 -> s55 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s38 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s55 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s54 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s17 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s55 -> s5 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s55 -> s55 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s55 -> s55 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s55 -> s55 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s55 -> s14 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s55 -> s62 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s8 [label="pw_pos_up / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s55 -> s55 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s56 -> s56 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s56 -> s56 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s56 -> s56 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s56 -> s3 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s56 -> s56 [label="fp_off / 1,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s56 -> s56 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s56 -> s33 [label="fp_on / 1,led_fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s56 -> s56 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s56 -> s26 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s56 -> s43 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s56 -> s56 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s56 -> s56 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s56 -> s52 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s56 -> s56 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s56 -> s35 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s56 -> s56 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s56 -> s56 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s56 -> s56 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s57 -> s57 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s57 -> s57 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s57 -> s60 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s57 -> s57 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s57 -> s16 [label="fp_off / pw_mv_dn,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s57 -> s59 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s57 -> s11 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s57 -> s57 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s57 -> s69 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s57 -> s57 [label="key_pos_unlock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s57 -> s57 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s57 -> s57 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s57 -> s57 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s57 -> s60 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s57 -> s57 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s57 -> s57 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s57 -> s57 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s57 -> s57 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s58 -> s58 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s58 -> s58 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s58 -> s61 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s58 -> s50 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s58 -> s58 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s58 -> s40 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s58 -> s58 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s58 -> s58 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s58 -> s58 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s58 -> s58 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s58 -> s58 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s58 -> s58 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s58 -> s58 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s58 -> s58 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s59 -> s59 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s59 -> s59 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s59 -> s59 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s59 -> s59 [label="fp_off / 1,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s59 -> s59 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s59 -> s10 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s59 -> s11 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s59 -> s28 [label="fp_on / 1,led_fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s59 -> s59 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s59 -> s26 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s59 -> s19 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s59 -> s43 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s59 -> s59 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s59 -> s59 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s59 -> s59 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s59 -> s59 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s59 -> s52 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s59 -> s59 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s59 -> s17 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s59 -> s42 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s59 -> s64 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s59 -> s40 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s59 -> s44 [label="pw_but_up / pw_mv_up [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s59 -> s36 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s59 -> s59 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s59 -> s59 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s59 -> s26 [label="pw_pos_dn / pw_mv_stop [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s59 -> s59 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s59 -> s59 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s60 -> s60 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s60 -> s60 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s60 -> s60 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s60 -> s57 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s60 -> s17 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s60 -> s11 [label="fp_off / pw_mv_dn,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s60 -> s42 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s60 -> s60 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s60 -> s16 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s60 -> s60 [label="key_pos_unlock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s60 -> s60 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s60 -> s60 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s60 -> s60 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s60 -> s57 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s60 -> s60 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s60 -> s60 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s60 -> s60 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s60 -> s60 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s61 -> s61 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s61 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s61 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s41 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s61 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s64 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s61 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s61 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s61 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s58 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s61 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s61 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s61 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s61 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s62 -> s62 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s62 -> s6 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s62 -> s53 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s62 -> s62 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s62 -> s62 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s62 -> s62 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s62 -> s29 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s62 -> s62 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s62 -> s42 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s62 -> s62 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s62 -> s62 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s62 -> s62 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s62 -> s62 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s63 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s34 [label="fp_off / pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s63 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s63 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s63 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s43 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s63 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s63 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s63 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s63 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s63 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s63 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s63 -> s40 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s64 -> s64 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s64 -> s64 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s64 -> s64 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s64 -> s59 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s64 -> s30 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s64 -> s42 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s64 -> s64 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s64 -> s64 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s64 -> s61 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s64 -> s64 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s64 -> s64 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s64 -> s64 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s64 -> s40 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s64 -> s64 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s64 -> s40 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s64 -> s64 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s64 -> s64 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s64 -> s64 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s64 -> s64 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s64 -> s64 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s65 -> s65 [label="finger_detected / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s65 -> s30 [label="fp_off / 1,led_fp_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s65 -> s65 [label="fp_on / 1,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s65 -> s68 [label="key_pos_lock / cls_lock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s65 -> s65 [label="key_pos_unlock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s65 -> s14 [label="m_pw_msg / m_pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s65 -> s65 [label="mpw_stop / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s65 -> s50 [label="pw_but_dn / fp_off,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s65 -> s65 [label="pw_but_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s65 -> s65 [label="pw_pos_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s65 -> s65 [label="pw_pos_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s65 -> s65 [label="receiveMsg / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s66 -> s68 [label="finger_detected / fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s66 -> s4 [label="fp_off / 1,led_fp_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s66 -> s66 [label="fp_on / 1,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s66 -> s66 [label="key_pos_lock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s66 -> s50 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s66 -> s46 [label="m_pw_msg / m_pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s66 -> s66 [label="mpw_stop / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s66 -> s66 [label="pw_but_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s66 -> s66 [label="pw_but_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s66 -> s66 [label="pw_pos_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s66 -> s66 [label="pw_pos_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s66 -> s66 [label="receiveMsg / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s67 -> s67 [label="finger_detected / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s67 -> s67 [label="fp_off / 1,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s67 -> s68 [label="fp_on / 1,led_fp_on [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s67 -> s67 [label="key_pos_lock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s67 -> s30 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s67 -> s29 [label="m_pw_msg / m_pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s67 -> s67 [label="mpw_stop / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s67 -> s4 [label="pw_but_dn / fp_off,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s67 -> s67 [label="pw_but_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s67 -> s67 [label="pw_pos_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s67 -> s67 [label="pw_pos_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s67 -> s67 [label="receiveMsg / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s68 -> s68 [label="finger_detected / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s68 -> s67 [label="fp_off / 1,led_fp_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s68 -> s68 [label="fp_on / 1,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s68 -> s68 [label="key_pos_lock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s68 -> s65 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s68 -> s13 [label="m_pw_msg / m_pw_activated [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s68 -> s68 [label="mpw_stop / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s68 -> s66 [label="pw_but_dn / fp_off,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s68 -> s68 [label="pw_but_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s68 -> s68 [label="pw_pos_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s68 -> s68 [label="pw_pos_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s68 -> s68 [label="receiveMsg / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s69 -> s69 [label="finger_detected / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s69 -> s19 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s69 -> s69 [label="fp_on / 1,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s69 -> s69 [label="key_pos_lock / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s69 -> s57 [label="key_pos_unlock / cls_unlock [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s69 -> s69 [label="m_pw_msg / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s69 -> s69 [label="mpw_stop / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s69 -> s16 [label="pw_but_dn / fp_off,1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s69 -> s69 [label="pw_but_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s69 -> s69 [label="pw_pos_dn / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s69 -> s69 [label="pw_pos_up / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	s69 -> s69 [label="receiveMsg / 1 [((Status_LED and Central_Locking_System and Manual_Power_Window and LED_Finger_Protection and not LED_Power_Window))]"];
	__start0 [label="" shape="none" width="0" height="0"];
	__start0 -> s0;
}