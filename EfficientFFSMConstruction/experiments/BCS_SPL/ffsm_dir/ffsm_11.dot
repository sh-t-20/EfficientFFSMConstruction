digraph g {
	edge [lblstyle="above, sloped"];
	s0 [shape="circle" label="0@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s1 [shape="circle" label="1@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s2 [shape="circle" label="2@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s3 [shape="circle" label="3@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s4 [shape="circle" label="4@[((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s5 [shape="circle" label="5@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s6 [shape="circle" label="6@[((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s7 [shape="circle" label="7@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s8 [shape="circle" label="8@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 [shape="circle" label="9@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s10 [shape="circle" label="10@[((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s11 [shape="circle" label="11@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s12 [shape="circle" label="12@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s13 [shape="circle" label="13@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s14 [shape="circle" label="14@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s15 [shape="circle" label="15@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s16 [shape="circle" label="16@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s17 [shape="circle" label="17@[((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s18 [shape="circle" label="18@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 [shape="circle" label="19@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s20 [shape="circle" label="20@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s21 [shape="circle" label="21@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s22 [shape="circle" label="22@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s23 [shape="circle" label="23@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s24 [shape="circle" label="24@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s25 [shape="circle" label="25@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s26 [shape="circle" label="26@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s27 [shape="circle" label="27@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s28 [shape="circle" label="28@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s29 [shape="circle" label="29@[((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s30 [shape="circle" label="30@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s31 [shape="circle" label="31@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s32 [shape="circle" label="32@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s33 [shape="circle" label="33@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s34 [shape="circle" label="34@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s35 [shape="circle" label="35@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s36 [shape="circle" label="36@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s37 [shape="circle" label="37@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s38 [shape="circle" label="38@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s39 [shape="circle" label="39@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s40 [shape="circle" label="40@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s41 [shape="circle" label="41@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s42 [shape="circle" label="42@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s43 [shape="circle" label="43@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s44 [shape="circle" label="44@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s45 [shape="circle" label="45@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s46 [shape="circle" label="46@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 [shape="circle" label="47@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s48 [shape="circle" label="48@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s49 [shape="circle" label="49@[((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s50 [shape="circle" label="50@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s51 [shape="circle" label="51@[((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s52 [shape="circle" label="52@[((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s53 [shape="circle" label="53@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s54 [shape="circle" label="54@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 [shape="circle" label="55@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s56 [shape="circle" label="56@[((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s57 [shape="circle" label="57@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s58 [shape="circle" label="58@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s59 [shape="circle" label="59@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s60 [shape="circle" label="60@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s61 [shape="circle" label="61@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s62 [shape="circle" label="62@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s63 [shape="circle" label="63@[((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s64 [shape="circle" label="64@[((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s65 [shape="circle" label="65@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s66 [shape="circle" label="66@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s67 [shape="circle" label="67@[((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s68 [shape="circle" label="68@[((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s69 [shape="circle" label="69@[((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s70 [shape="circle" label="70@[((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s71 [shape="circle" label="71@[((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s72 [shape="circle" label="72@[((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s73 [shape="circle" label="73@[((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s74 [shape="circle" label="74@[((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s75 [shape="circle" label="75@[((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s76 [shape="circle" label="76@[((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s77 [shape="circle" label="77@[((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s78 [shape="circle" label="78@[((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s79 [shape="circle" label="79@[((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s80 [shape="circle" label="80@[((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s81 [shape="circle" label="81@[((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s82 [shape="circle" label="82@[((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s83 [shape="circle" label="83@[((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s84 [shape="circle" label="84@[((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s85 [shape="circle" label="85@[((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s86 [shape="circle" label="86@[((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s87 [shape="circle" label="87@[((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s88 [shape="circle" label="88@[((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s89 [shape="circle" label="89@[((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s0 -> s0 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s0 -> s0 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s0 -> s2 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s0 -> s1 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s3 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s56 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s0 -> s0 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s0 -> s0 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s0 -> s2 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s5 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s0 -> s32 [label="fp_on / 1,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s0 -> s4 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s0 -> s0 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s0 -> s1 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s0 -> s7 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s6 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s0 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s0 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s0 -> s0 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s0 -> s8 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s0 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s7 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s0 [label="pw_but_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s0 -> s0 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s0 -> s5 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s47 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s0 -> s7 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s70 [label="pw_mv_up / led_pw_up_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s0 -> s0 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s0 -> s0 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s0 -> s7 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s5 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s0 -> s22 [label="receiveMsg / pw_activated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s0 -> s9 [label="receiveMsg / pw_activated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s0 -> s6 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s0 -> s0 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s1 -> s1 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s1 -> s1 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s1 -> s16 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s1 -> s1 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s1 -> s1 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s1 -> s1 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s1 -> s1 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s1 -> s23 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s1 -> s24 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s1 -> s14 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s25 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s22 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s1 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s1 -> s1 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s0 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s1 -> s30 [label="m_pw_msg / m_pw_activated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s1 -> s1 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s1 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s1 -> s25 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s1 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s26 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s0 [label="pw_but_dn / fp_off,1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s7 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s1 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s1 -> s71 [label="pw_but_dn / fp_off,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s1 -> s1 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s1 -> s1 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s1 -> s1 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s1 -> s1 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s1 -> s1 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s1 -> s17 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s1 -> s2 [label="receiveMsg / pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s1 -> s6 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s1 -> s3 [label="receiveMsg / pw_activated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s1 -> s1 [label="receiveMsg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s1 -> s37 [label="release_pw_but / led_pw_up_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s1 -> s3 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s2 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s2 -> s12 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s10 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s2 -> s11 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s2 -> s2 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s2 -> s2 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s2 -> s14 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s2 -> s13 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s2 -> s2 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s2 -> s0 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s2 -> s85 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s2 -> s9 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s2 -> s2 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s2 -> s2 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s2 -> s2 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s2 -> s3 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s2 -> s17 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s2 -> s3 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s2 -> s16 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s2 -> s15 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s2 -> s2 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s2 -> s11 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s2 -> s12 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s2 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s2 -> s2 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s2 -> s17 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s2 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s18 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s2 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s2 -> s6 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s9 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s2 -> s52 [label="pw_but_dn / fp_off,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s2 -> s19 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s0 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s2 -> s2 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s2 -> s42 [label="pw_but_up / pw_mv_up [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s2 -> s2 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s88 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s2 -> s89 [label="pw_mv_up / led_pw_up_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s2 -> s2 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s2 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s2 -> s2 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s2 -> s2 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s2 -> s21 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s2 -> s20 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s2 -> s22 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s2 -> s2 [label="release_pw_but / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s3 -> s10 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s3 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s3 -> s21 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s3 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s3 -> s3 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s3 -> s2 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s27 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s3 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s3 -> s3 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s3 -> s3 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s3 -> s3 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s28 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s13 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s45 [label="fp_on / 1,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s3 -> s3 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s21 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s23 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s2 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s24 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s3 -> s29 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s30 [label="m_pw_msg / m_pw_activated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s3 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s3 -> s3 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s56 [label="mpw_stop / pw_inactivated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s3 -> s3 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s30 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s3 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s32 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s19 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s0 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s31 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s5 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s9 [label="pw_but_dn / fp_off,1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s3 -> s33 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s3 -> s34 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s3 -> s3 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s3 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s3 -> s35 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s3 -> s36 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s30 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s24 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s21 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s3 -> s30 [label="pw_mv_up / led_pw_up_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s3 -> s1 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s16 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s14 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s3 -> s3 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s3 -> s3 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s3 -> s24 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s3 -> s3 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s3 -> s22 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s3 -> s3 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s4 -> s4 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s4 -> s4 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s4 -> s23 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s40 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s4 -> s4 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s4 -> s41 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s4 -> s77 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s4 -> s0 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s4 -> s4 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s4 -> s4 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s4 -> s4 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s4 -> s10 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s4 -> s4 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s4 -> s4 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s4 -> s4 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s34 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s4 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s4 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s4 -> s32 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s4 -> s4 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s4 -> s42 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s4 -> s43 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s4 -> s27 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s4 -> s4 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s4 -> s36 [label="pw_but_up / pw_mv_up [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s4 -> s4 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s4 -> s4 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s4 -> s10 [label="pw_pos_dn / pw_mv_stop [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s4 -> s4 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s4 -> s4 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s4 -> s4 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s4 -> s5 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s4 -> s33 [label="release_pw_but / led_pw_dn_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s5 -> s29 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s5 -> s5 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s5 -> s5 [label="finger_detected / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s5 -> s24 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s5 -> s21 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s5 -> s3 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s5 -> s37 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s5 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s5 -> s0 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s5 -> s74 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s5 -> s5 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s6 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s5 -> s38 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s5 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s5 -> s5 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s5 -> s6 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s5 -> s5 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s7 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s5 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s5 -> s53 [label="m_pw_msg / m_pw_activated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s5 -> s11 [label="m_pw_msg / m_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s5 -> s5 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s5 -> s29 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s5 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s5 -> s39 [label="pw_but_dn / fp_off,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s5 -> s5 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s5 -> s5 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s5 -> s5 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s5 -> s5 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s5 -> s5 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s5 -> s5 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s5 -> s2 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s5 -> s39 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s5 -> s5 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s5 -> s0 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s5 -> s25 [label="release_pw_but / led_pw_dn_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s6 -> s11 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s29 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s44 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s6 -> s12 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s6 -> s6 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s6 -> s2 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s22 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s59 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s6 -> s13 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s6 -> s6 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s6 -> s6 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s6 -> s15 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s10 [label="fp_on / 1,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s6 -> s6 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s6 -> s5 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s6 -> s9 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s6 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s6 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s5 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s6 -> s0 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s11 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s6 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s6 -> s45 [label="m_pw_msg / m_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s6 -> s6 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s6 -> s19 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s6 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s46 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s6 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s6 -> s6 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s81 [label="pw_but_up / pw_mv_up [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s6 -> s39 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s6 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s6 -> s19 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s6 -> s6 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s6 -> s6 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s6 -> s6 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s6 -> s6 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s6 -> s5 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s6 -> s57 [label="release_pw_but / led_pw_dn_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s6 -> s6 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s7 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s7 -> s7 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s7 -> s31 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s7 -> s26 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s1 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s13 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s7 -> s17 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s25 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s7 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s7 -> s7 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s34 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s7 -> s7 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s7 -> s20 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s7 [label="fp_on / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s7 -> s47 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s7 -> s5 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s7 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s0 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s7 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s7 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s7 -> s9 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s7 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s7 -> s7 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s0 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s7 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s7 [label="pw_but_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s7 -> s7 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s7 -> s43 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s7 -> s7 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s20 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s7 -> s62 [label="pw_mv_up / led_pw_up_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s7 -> s7 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s7 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s7 -> s7 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s7 -> s19 [label="receiveMsg / pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s46 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s7 -> s7 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s7 -> s9 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s7 -> s7 [label="release_pw_but / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s7 -> s0 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s8 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s8 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s25 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s8 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s8 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s8 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s0 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s8 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s8 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s8 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s8 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s8 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s8 -> s19 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s30 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s9 -> s12 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s9 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s9 -> s9 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s9 -> s48 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s49 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s3 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s9 -> s24 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s9 -> s21 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s43 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s9 -> s17 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s2 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s9 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s9 -> s15 [label="fp_off / pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s9 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s9 -> s7 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s9 -> s50 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s14 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s9 -> s2 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s9 -> s9 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s9 -> s9 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s19 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s33 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s9 -> s29 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s6 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s9 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s21 [label="m_pw_msg / m_pw_activated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s9 -> s10 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s9 -> s12 [label="m_pw_msg / m_pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s9 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s9 -> s0 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s9 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s9 -> s32 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s9 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s15 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s9 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s9 -> s34 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s9 -> s33 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s9 [label="pw_but_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s9 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s9 [label="pw_but_up / pw_mv_up [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s9 -> s34 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s43 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s9 -> s47 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s81 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s9 -> s51 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s83 [label="pw_mv_up / led_pw_up_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s9 -> s52 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s9 -> s7 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s9 -> s9 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s9 -> s9 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s9 -> s72 [label="pw_pos_up / pw_mv_stop [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s9 -> s9 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s9 -> s9 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s10 -> s10 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s10 -> s1 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s10 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s10 -> s23 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s10 -> s58 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s29 [label="finger_detected / fp_on [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s88 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s10 -> s10 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s6 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s10 -> s10 [label="fp_off / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s10 -> s19 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s10 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s10 -> s11 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s10 -> s10 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s10 -> s10 [label="fp_on / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s10 -> s11 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s10 -> s4 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s10 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s11 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s10 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s12 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s10 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s10 -> s7 [label="mpw_stop / pw_inactivated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s10 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s10 -> s0 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s10 -> s10 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s21 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s10 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s15 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s15 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s10 [label="pw_but_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s10 -> s15 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s20 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s10 -> s16 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s53 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s30 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s36 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s10 -> s10 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s10 -> s21 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s10 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s10 -> s34 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s10 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s10 -> s10 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s10 -> s3 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s49 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s10 -> s10 [label="pw_pos_up / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s10 -> s10 [label="receiveMsg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s10 -> s52 [label="release_pw_but / led_pw_dn_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s10 -> s10 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s11 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s0 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s1 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s11 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s25 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s29 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s11 -> s11 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s53 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s12 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s11 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s11 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s10 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s76 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s11 -> s10 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s11 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s11 -> s24 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s11 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s29 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s45 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s11 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s11 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s10 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s49 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s11 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s11 -> s1 [label="mpw_stop / pw_inactivated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s14 [label="mpw_stop / pw_inactivated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s11 -> s0 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s22 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s5 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s44 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s11 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s54 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s32 [label="pw_but_dn / fp_off,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s15 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s9 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s11 -> s80 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s11 -> s32 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s11 -> s47 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s11 -> s11 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s11 -> s29 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s11 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s11 -> s11 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s11 -> s55 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s11 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s11 -> s11 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s11 -> s11 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s11 -> s11 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s11 -> s44 [label="release_pw_but / led_pw_up_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s12 -> s12 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s12 -> s2 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s12 -> s7 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s0 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s1 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s12 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s12 -> s11 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s12 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s29 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s12 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s12 -> s56 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s35 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s12 -> s29 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s28 [label="fp_on / pw_mv_stop,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s12 -> s12 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s12 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s12 -> s13 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s30 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s12 -> s10 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s12 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s29 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s12 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s12 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s12 -> s12 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s12 -> s1 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s0 [label="mpw_stop / pw_inactivated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s24 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s29 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s12 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s55 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s9 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s32 [label="pw_but_dn / 1,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s80 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s12 -> s20 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s12 -> s52 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s57 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s32 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s12 -> s12 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s12 -> s12 [label="pw_but_up / pw_mv_up [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s12 -> s23 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s12 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s12 -> s12 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s12 -> s12 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s12 -> s58 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s29 [label="pw_pos_up / pw_mv_stop [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s12 -> s12 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s12 -> s12 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s12 -> s53 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s12 -> s42 [label="release_pw_but / led_pw_up_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s13 -> s30 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s13 -> s13 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s13 -> s13 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s13 -> s79 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s13 -> s3 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s13 -> s13 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s13 -> s31 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s13 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s13 -> s13 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s13 -> s13 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s12 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s21 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s13 -> s23 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s13 -> s13 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s13 -> s12 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s13 -> s13 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s13 -> s2 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s13 -> s6 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s13 -> s39 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s7 [label="pw_but_dn / fp_off,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s13 -> s34 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s3 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s13 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s13 -> s16 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s13 -> s13 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s13 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s28 [label="pw_mv_up / led_pw_up_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s13 -> s40 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s13 -> s13 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s13 -> s13 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s13 -> s13 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s13 -> s22 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s13 -> s13 [label="release_pw_but / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s14 -> s14 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s14 -> s14 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s14 -> s59 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s73 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s14 -> s31 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s14 -> s14 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s1 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s9 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s14 -> s14 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s14 -> s31 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s14 -> s70 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s14 -> s14 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s14 -> s14 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s14 -> s21 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s14 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s14 -> s30 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s31 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s14 -> s14 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s14 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s14 -> s14 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s14 -> s14 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s30 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s14 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s47 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s14 -> s20 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s14 -> s2 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s57 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s14 -> s15 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s14 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s14 -> s14 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s14 -> s36 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s14 -> s35 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s14 -> s50 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s14 -> s14 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s14 -> s14 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s14 -> s14 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s14 -> s14 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s14 -> s60 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s14 -> s14 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s14 -> s32 [label="release_pw_but / led_pw_up_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s14 -> s20 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s15 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s15 -> s15 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s15 -> s16 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s21 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s56 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s15 -> s30 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s10 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s24 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s74 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s15 -> s15 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s15 -> s15 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s15 -> s6 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s32 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s15 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s15 -> s15 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s32 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s39 [label="fp_on / 1,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s15 -> s57 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s15 -> s15 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s32 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s15 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s15 -> s32 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s2 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s75 [label="m_pw_msg / m_pw_activated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s15 -> s15 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s15 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s15 -> s15 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s9 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s15 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s15 [label="pw_but_dn / 1,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s15 [label="pw_but_dn / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s15 -> s57 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s15 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s15 -> s50 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s10 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s35 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s36 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s15 -> s15 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s15 -> s32 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s15 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s15 -> s52 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s15 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s15 -> s52 [label="pw_pos_dn / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s20 [label="pw_pos_dn / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s31 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s14 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s15 -> s15 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s15 -> s15 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s15 -> s38 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s15 -> s15 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s15 -> s22 [label="release_pw_but / led_pw_dn_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s16 -> s16 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s16 -> s16 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s16 -> s23 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s16 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s16 -> s16 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s16 -> s61 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s65 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s16 -> s16 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s16 -> s16 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s16 -> s30 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s16 -> s16 [label="fp_on / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s16 -> s41 [label="fp_on / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s62 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s43 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s16 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s16 -> s30 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s49 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s16 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s2 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s16 -> s16 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s16 -> s16 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s16 -> s16 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s21 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s16 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s57 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s20 [label="pw_but_dn / fp_off,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s16 -> s1 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s16 -> s32 [label="pw_but_dn / fp_off,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s52 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s15 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s16 -> s32 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s15 [label="pw_but_dn / fp_off,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s16 -> s29 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s16 -> s16 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s16 -> s50 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s16 -> s23 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s43 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s36 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s16 -> s16 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s16 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s16 -> s16 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s16 -> s14 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s31 [label="pw_pos_dn / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s16 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s16 -> s50 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s16 -> s16 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s16 -> s23 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s16 -> s16 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s16 -> s13 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s16 -> s13 [label="release_pw_but / led_pw_dn_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s16 -> s30 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s29 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s17 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s17 -> s11 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s17 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s17 -> s17 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s17 -> s17 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s56 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s17 -> s17 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s17 -> s17 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s17 -> s60 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s17 [label="fp_on / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s17 -> s37 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s17 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s17 -> s2 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s17 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s49 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s17 -> s17 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s17 -> s49 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s17 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s17 -> s17 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s2 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s17 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s9 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s32 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s17 -> s19 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s17 -> s7 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s40 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s17 -> s17 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s17 -> s51 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s17 -> s73 [label="pw_mv_up / led_pw_up_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s17 -> s17 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s17 -> s25 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s17 -> s17 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s17 -> s25 [label="receiveMsg / pw_activated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s17 -> s17 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s17 -> s17 [label="release_pw_but / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s18 -> s55 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s18 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s18 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s18 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s18 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s18 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s2 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s18 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s46 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s18 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s18 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s18 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s18 -> s18 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s19 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s19 -> s44 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s19 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s19 -> s25 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s2 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s3 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s17 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s51 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s19 -> s9 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s19 -> s19 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s19 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s47 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s19 -> s19 [label="fp_on / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s19 -> s10 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s19 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s19 -> s41 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s19 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s19 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s9 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s55 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s19 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s19 -> s10 [label="m_pw_msg / m_pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s19 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s19 -> s19 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s6 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s19 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s19 -> s19 [label="pw_but_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s19 -> s61 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s19 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s19 -> s19 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s19 -> s19 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s19 -> s19 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s19 -> s19 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s19 -> s39 [label="receiveMsg / pw_activated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s19 -> s19 [label="receiveMsg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s19 -> s32 [label="release_pw_but / led_pw_dn_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s19 -> s6 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s20 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s20 -> s20 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s20 -> s14 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s16 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s20 -> s60 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s20 -> s49 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s20 -> s30 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s20 -> s31 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s20 -> s20 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s20 -> s77 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s20 -> s20 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s20 -> s7 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s20 -> s20 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s20 -> s20 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s20 -> s57 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s20 -> s32 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s20 -> s20 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s20 -> s52 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s20 -> s38 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s20 -> s57 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s20 -> s20 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s20 -> s20 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s20 -> s50 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s20 -> s20 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s20 -> s20 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s52 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s20 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s32 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s20 -> s20 [label="pw_but_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s20 -> s10 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s20 -> s42 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s20 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s20 -> s43 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s20 -> s35 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s20 -> s36 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s20 -> s50 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s20 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s20 -> s14 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s20 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s20 -> s31 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s20 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s20 -> s15 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s20 -> s20 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s20 -> s20 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s20 -> s20 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s20 -> s7 [label="release_pw_but / led_pw_dn_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s21 -> s12 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s21 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s21 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s1 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s30 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s21 [label="finger_detected / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s21 -> s21 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s22 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s21 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s21 -> s21 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s23 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s24 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s21 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s53 [label="fp_on / 1,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s21 -> s13 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s21 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s3 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s31 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s21 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s14 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s21 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s21 -> s53 [label="m_pw_msg / m_pw_activated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s49 [label="mpw_stop / pw_inactivated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s21 -> s21 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s0 [label="mpw_stop / pw_inactivated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s16 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s21 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s10 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s52 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s32 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s5 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s21 -> s15 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s15 [label="pw_but_dn / 1,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s15 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s9 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s32 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s77 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s21 -> s49 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s21 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s21 -> s35 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s16 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s16 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s14 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s21 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s21 -> s21 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s21 -> s59 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s21 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s21 -> s30 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s49 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s31 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s21 -> s21 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s21 -> s63 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s21 -> s21 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s21 -> s10 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s21 -> s3 [label="release_pw_but / led_pw_dn_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s22 -> s37 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s22 -> s22 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s22 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s22 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s22 -> s21 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s38 [label="fp_on / 1,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s22 -> s22 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s22 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s1 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s22 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s72 [label="m_pw_msg / m_pw_activated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s22 -> s53 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s22 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s22 -> s6 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s22 [label="pw_but_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s22 -> s22 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s22 -> s15 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s22 -> s13 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s71 [label="pw_mv_up / led_pw_up_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s22 -> s2 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s22 -> s22 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s22 -> s22 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s22 -> s37 [label="receiveMsg / pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s22 -> s22 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s22 -> s22 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s23 -> s23 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s23 -> s23 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s23 -> s23 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s23 -> s23 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s23 -> s52 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s21 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s1 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s23 -> s23 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s23 -> s23 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s23 -> s64 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s3 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s23 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s23 -> s53 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s23 -> s23 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s29 [label="m_pw_msg / m_pw_activated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s23 -> s23 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s16 [label="mpw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s23 -> s23 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s23 -> s24 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s23 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s49 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s23 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s32 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s57 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s4 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s33 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s23 -> s60 [label="pw_but_dn / fp_off,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s23 -> s50 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s35 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s23 -> s23 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s23 -> s23 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s23 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s23 -> s23 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s23 -> s14 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s23 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s23 -> s30 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s23 -> s23 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s23 -> s3 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s23 -> s23 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s23 -> s25 [label="release_pw_but / led_pw_up_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s23 -> s53 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s24 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s24 -> s24 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s24 -> s24 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s53 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s24 -> s1 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s24 -> s75 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s24 -> s11 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s21 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s24 -> s24 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s24 -> s24 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s24 -> s24 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s24 -> s24 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s3 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s24 -> s24 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s24 -> s30 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s24 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s24 -> s21 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s19 [label="mpw_stop / pw_inactivated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s24 -> s24 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s24 -> s34 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s24 -> s15 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s24 -> s4 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s24 -> s9 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s24 -> s5 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s24 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s24 -> s30 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s24 -> s50 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s24 -> s24 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s24 -> s24 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s24 -> s24 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s24 -> s31 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s24 -> s24 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s24 -> s13 [label="receiveMsg / pw_activated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s24 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s24 -> s3 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s24 -> s44 [label="release_pw_but / led_pw_dn_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s25 -> s25 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s25 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s25 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s25 -> s37 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s25 -> s25 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s25 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s25 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s58 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s25 [label="fp_on / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s25 -> s65 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s25 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s25 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s56 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s1 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s45 [label="m_pw_msg / m_pw_activated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s25 -> s25 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s25 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s25 -> s25 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s1 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s25 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s7 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s19 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s8 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s38 [label="pw_but_dn / fp_off,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s25 -> s57 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s52 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s61 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s25 -> s25 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s25 -> s5 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s25 -> s23 [label="pw_mv_up / led_pw_up_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s25 -> s25 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s25 -> s25 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s25 -> s25 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s25 -> s17 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s25 -> s3 [label="receiveMsg / pw_activated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s25 -> s25 [label="release_pw_but / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s26 -> s26 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s26 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s26 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s26 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s26 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s26 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s1 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s26 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s7 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s26 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s26 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s26 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s26 -> s18 [label="receiveMsg / pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s27 -> s27 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s27 -> s27 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s27 -> s61 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s27 -> s42 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s27 -> s27 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s27 -> s27 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s27 -> s27 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s27 -> s9 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s27 -> s48 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s27 -> s7 [label="fp_on / pw_mv_stop,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s27 -> s28 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s27 -> s27 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s27 -> s52 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s27 -> s36 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s27 -> s27 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s27 -> s27 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s27 -> s33 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s27 -> s47 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s27 -> s4 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s27 -> s27 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s27 -> s27 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s27 -> s36 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s27 -> s55 [label="pw_mv_up / led_pw_up_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s27 -> s27 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s27 -> s44 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s27 -> s11 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s27 -> s27 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s27 -> s27 [label="release_pw_but / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s28 -> s28 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s28 -> s82 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s28 -> s31 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s28 -> s28 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s28 -> s28 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s28 -> s64 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s28 -> s28 [label="m_pw_msg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s28 -> s28 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s28 -> s32 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s28 -> s62 [label="pw_but_dn / fp_off,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s28 -> s28 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s28 -> s28 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s28 -> s28 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s28 -> s28 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s28 -> s28 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s28 -> s28 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s28 -> s13 [label="release_pw_but / led_pw_up_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s29 -> s29 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s29 -> s25 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s29 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s4 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s0 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s29 -> s23 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s12 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s29 -> s11 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s29 [label="finger_detected / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s29 -> s10 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s30 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s29 -> s12 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s29 [label="fp_off / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s29 -> s29 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s29 [label="fp_on / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s29 -> s45 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s29 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s29 -> s12 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s12 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s29 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s44 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s29 -> s9 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s29 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s29 -> s11 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s29 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s29 -> s25 [label="mpw_stop / pw_inactivated [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s29 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s29 -> s73 [label="mpw_stop / pw_inactivated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s29 -> s6 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s5 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s1 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s29 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s12 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s29 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s20 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s29 -> s80 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s29 -> s32 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s15 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s47 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s15 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s29 -> s32 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s29 -> s35 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s29 -> s29 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s29 -> s29 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s29 -> s29 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s29 -> s29 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s29 -> s29 [label="pw_pos_up / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s29 -> s29 [label="receiveMsg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s29 -> s45 [label="release_pw_but / led_pw_up_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s29 -> s11 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s30 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s30 -> s0 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s30 -> s30 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s16 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s30 -> s21 [label="finger_detected / fp_on [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s30 -> s30 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s30 -> s30 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s30 -> s16 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s30 -> s49 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s30 [label="fp_off / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s30 -> s29 [label="fp_on / 1,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s30 -> s48 [label="fp_on / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s30 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s30 -> s30 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s24 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s30 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s30 -> s30 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s12 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s30 -> s14 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s16 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s30 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s30 -> s14 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s30 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s30 -> s31 [label="mpw_stop / pw_inactivated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s30 -> s1 [label="mpw_stop / pw_inactivated [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s30 -> s14 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s30 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s3 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s57 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s15 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s30 -> s52 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s32 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s30 -> s15 [label="pw_but_dn / fp_off,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s78 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s30 -> s50 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s35 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s43 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s36 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s30 -> s30 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s30 -> s30 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s16 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s30 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s30 -> s43 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s30 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s30 -> s30 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s30 -> s21 [label="pw_pos_dn / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s30 -> s30 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s30 -> s53 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s30 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s30 -> s30 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s30 -> s3 [label="release_pw_but / led_pw_up_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s31 -> s31 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s31 -> s31 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s31 -> s31 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s31 -> s3 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s57 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s49 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s49 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s31 -> s31 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s31 -> s31 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s31 -> s14 [label="fp_on / 1,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s31 -> s31 [label="fp_on / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s31 -> s13 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s73 [label="fp_on / 1,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s31 -> s31 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s31 -> s31 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s14 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s31 -> s21 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s52 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s31 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s31 -> s56 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s31 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s31 -> s31 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s31 -> s31 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s52 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s31 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s7 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s31 -> s31 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s20 [label="pw_but_dn / fp_off,1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s70 [label="pw_but_dn / fp_off,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s31 -> s47 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s14 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s31 -> s43 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s61 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s31 [label="pw_but_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s31 -> s50 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s31 -> s27 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s36 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s35 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s31 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s31 -> s31 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s31 -> s65 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s31 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s31 -> s31 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s31 -> s31 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s31 -> s1 [label="receiveMsg / pw_activated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s31 -> s20 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s31 -> s56 [label="release_pw_but / led_pw_up_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s32 -> s32 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s32 -> s32 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s32 -> s21 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s23 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s32 -> s3 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s16 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s17 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s32 -> s28 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s47 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s0 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s32 -> s15 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s32 -> s32 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s32 -> s32 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s32 -> s32 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s32 -> s15 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s32 -> s32 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s32 -> s32 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s15 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s20 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s32 -> s62 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s32 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s15 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s32 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s32 -> s32 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s32 -> s32 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s9 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s32 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s32 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s32 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s32 -> s35 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s32 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s32 -> s50 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s43 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s32 -> s4 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s32 -> s20 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s32 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s19 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s32 -> s32 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s14 [label="pw_mv_up / led_pw_up_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s32 -> s32 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s32 -> s57 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s32 -> s20 [label="pw_pos_dn / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s14 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s32 -> s9 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s32 -> s52 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s32 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s32 -> s32 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s32 -> s38 [label="receiveMsg / pw_activated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s32 -> s32 [label="release_pw_but / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s32 -> s15 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s33 -> s33 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s33 -> s33 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s33 -> s56 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s41 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s33 -> s3 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s33 -> s33 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s33 -> s34 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s33 -> s33 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s57 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s33 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s33 -> s33 [label="fp_on / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s33 -> s47 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s33 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s33 -> s9 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s33 -> s33 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s33 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s33 -> s33 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s33 -> s33 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s33 -> s27 [label="pw_but_up / pw_mv_up [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s33 -> s61 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s52 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s33 -> s4 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s33 -> s80 [label="pw_mv_up / led_pw_up_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s33 -> s19 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s33 -> s47 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s33 -> s52 [label="pw_pos_dn / pw_mv_stop [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s33 -> s33 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s33 -> s33 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s33 -> s33 [label="release_pw_but / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s34 -> s34 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s34 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s34 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s49 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s13 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s79 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s34 -> s34 [label="fp_off / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s34 -> s47 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s34 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s34 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s33 [label="fp_on / 1,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s34 -> s34 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s34 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s57 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s34 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s34 -> s34 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s34 -> s4 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s34 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s57 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s9 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s52 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s34 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s34 -> s43 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s9 [label="pw_but_up / pw_mv_up [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s34 -> s77 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s34 -> s34 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s78 [label="pw_mv_up / led_pw_up_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s34 -> s34 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s57 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s34 -> s34 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s4 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s34 -> s34 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s34 -> s34 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s34 -> s10 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s34 -> s34 [label="release_pw_but / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s35 -> s35 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s35 -> s35 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s35 -> s16 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s35 [label="finger_detected / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s35 -> s36 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s35 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s35 -> s35 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s35 -> s43 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s35 -> s64 [label="fp_on / pw_mv_stop,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s35 -> s48 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s47 [label="fp_on / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s65 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s35 -> s41 [label="fp_on / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s28 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s35 -> s64 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s35 -> s51 [label="fp_on / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s35 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s35 -> s50 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s50 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s35 -> s35 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s43 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s35 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s35 -> s35 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s35 -> s35 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s50 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s35 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s78 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s35 -> s33 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s35 -> s15 [label="pw_but_dn / 1,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s35 -> s15 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s4 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s10 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s35 -> s32 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s57 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s35 -> s35 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s35 -> s35 [label="pw_but_up / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s35 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s35 -> s35 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s35 -> s35 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s35 -> s29 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s35 -> s21 [label="pw_pos_up / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s35 -> s30 [label="pw_pos_up / pw_mv_stop [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s35 -> s23 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s35 -> s35 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s35 -> s43 [label="release_pw_but / led_pw_up_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s35 -> s50 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s36 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s36 -> s36 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s36 -> s43 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s35 [label="finger_detected / fp_on [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s36 -> s61 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s36 -> s36 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s42 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s36 -> s50 [label="fp_off / 1,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s36 -> s36 [label="fp_off / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s36 -> s81 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s36 -> s36 [label="fp_off / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s36 -> s51 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s66 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s36 -> s20 [label="fp_on / pw_mv_stop,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s36 -> s56 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s47 [label="fp_on / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s36 -> s62 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s36 -> s48 [label="fp_on / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s36 -> s62 [label="fp_on / pw_mv_stop,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s36 -> s27 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s36 -> s43 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s36 -> s36 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s36 -> s36 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s36 -> s50 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s36 -> s36 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s36 -> s36 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s36 -> s36 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s50 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s36 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s15 [label="pw_but_dn / fp_off,pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s36 -> s4 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s36 -> s57 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s10 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s36 -> s52 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s15 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s36 -> s36 [label="pw_but_up / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s36 -> s36 [label="pw_but_up / pw_mv_up [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s36 -> s36 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s36 -> s36 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s36 -> s36 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s36 -> s30 [label="pw_pos_up / pw_mv_stop [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s36 -> s24 [label="pw_pos_up / pw_mv_stop [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s36 -> s10 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s36 -> s29 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s36 -> s55 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s36 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s36 -> s50 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s36 -> s27 [label="release_pw_but / led_pw_dn_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s37 -> s37 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s37 -> s37 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s37 -> s25 [label="fp_on / 1,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s37 -> s63 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s37 -> s37 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s37 -> s17 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s37 -> s11 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s37 -> s3 [label="m_pw_msg / m_pw_activated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s37 -> s37 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s37 -> s22 [label="pw_but_dn / fp_off,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s37 -> s5 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s37 -> s37 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s37 -> s74 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s37 -> s1 [label="pw_mv_up / led_pw_up_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s37 -> s37 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s37 -> s37 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s37 -> s37 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s37 -> s37 [label="release_pw_but / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s38 -> s63 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s25 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s38 -> s5 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s22 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s38 -> s38 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s38 -> s38 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s20 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s45 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s38 -> s44 [label="m_pw_msg / m_pw_activated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s38 -> s38 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s38 -> s38 [label="pw_but_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s38 -> s38 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s38 -> s39 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s38 -> s60 [label="pw_mv_up / led_pw_up_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s38 -> s38 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s38 -> s38 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s38 -> s38 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s38 -> s38 [label="release_pw_but / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s39 -> s13 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s39 -> s5 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s39 -> s39 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s39 -> s15 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s39 -> s39 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s39 -> s39 [label="fp_on / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s39 -> s29 [label="m_pw_msg / m_pw_activated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s39 -> s24 [label="m_pw_msg / m_pw_activated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s39 -> s39 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s39 -> s39 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s39 -> s39 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s39 -> s39 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s39 -> s39 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s39 -> s39 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s39 -> s39 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s39 -> s39 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s39 -> s6 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s39 -> s38 [label="release_pw_but / led_pw_dn_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s40 -> s40 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s40 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s40 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s40 -> s65 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s40 -> s40 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s40 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s40 -> s40 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s40 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s58 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s40 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s40 -> s40 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s40 -> s4 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s4 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s40 -> s32 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s40 -> s61 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s40 -> s3 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s40 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s40 -> s40 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s40 -> s88 [label="pw_pos_dn / pw_mv_stop [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s40 -> s40 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s40 -> s40 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s40 -> s40 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s40 -> s41 [label="release_pw_but / led_pw_dn_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s41 -> s41 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s41 -> s41 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s41 -> s41 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s41 -> s65 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s30 [label="fp_off / pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s41 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s79 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s41 -> s33 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s41 -> s21 [label="fp_off / pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s4 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s41 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s41 -> s41 [label="fp_on / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s41 -> s41 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s19 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s48 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s41 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s41 -> s41 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s41 -> s51 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s41 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s56 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s47 [label="pw_but_dn / fp_off,1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s41 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s33 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s41 -> s48 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s42 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s41 -> s41 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s41 -> s41 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s40 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s41 -> s58 [label="pw_mv_up / led_pw_up_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s41 -> s41 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s2 [label="pw_pos_dn / pw_mv_stop [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s41 -> s41 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s41 -> s41 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s41 -> s41 [label="receiveMsg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s41 -> s48 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s41 -> s41 [label="release_pw_but / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s42 -> s42 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s42 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s27 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s35 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s42 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s42 -> s42 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s43 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s42 -> s42 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s13 [label="fp_on / pw_mv_stop,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s42 -> s32 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s47 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s67 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s61 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s42 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s42 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s61 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s42 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s42 -> s42 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s42 -> s42 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s43 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s42 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s47 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s10 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s33 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s42 -> s4 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s42 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s42 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s42 -> s61 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s42 -> s12 [label="pw_mv_up / led_pw_up_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s42 -> s42 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s42 -> s12 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s42 -> s29 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s42 -> s45 [label="pw_pos_up / pw_mv_stop [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s42 -> s44 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s42 -> s42 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s42 -> s42 [label="release_pw_but / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s43 -> s43 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s43 -> s43 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s43 -> s3 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s50 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s43 -> s43 [label="finger_detected / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s43 -> s42 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s43 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s43 -> s36 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s43 -> s43 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s43 -> s64 [label="fp_on / pw_mv_stop,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s43 -> s51 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s48 [label="fp_on / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s32 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s62 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s43 -> s13 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s43 -> s68 [label="fp_on / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s19 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s43 -> s52 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s43 -> s35 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s43 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s16 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s36 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s43 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s43 -> s43 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s43 -> s43 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s43 -> s42 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s43 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s61 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s34 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s52 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s9 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s43 -> s32 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s43 -> s32 [label="pw_but_dn / fp_off,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s34 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s43 -> s20 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s34 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s20 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s43 -> s43 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s43 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s43 -> s43 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s50 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s43 -> s43 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s35 [label="pw_mv_up / led_pw_up_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s43 -> s43 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s43 -> s12 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s3 [label="pw_pos_up / pw_mv_stop [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s43 -> s45 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s43 -> s11 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s43 -> s43 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s43 -> s30 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s43 -> s43 [label="release_pw_but / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s44 -> s44 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s44 -> s1 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s44 -> s8 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s30 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s44 -> s45 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s44 -> s29 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s44 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s44 -> s72 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s44 -> s44 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s44 -> s44 [label="fp_on / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s44 -> s44 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s44 -> s29 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s44 -> s44 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s44 -> s32 [label="mpw_stop / pw_inactivated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s44 -> s44 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s44 -> s44 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s11 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s44 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s44 -> s33 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s44 -> s32 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s44 -> s44 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s44 -> s24 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s44 -> s11 [label="pw_mv_up / led_pw_up_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s44 -> s44 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s44 -> s44 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s44 -> s44 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s44 -> s44 [label="release_pw_but / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s45 -> s45 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s45 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s24 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s23 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s45 [label="finger_detected / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s45 -> s3 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s45 -> s29 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s45 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s45 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s45 -> s45 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s45 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s11 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s50 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s45 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s45 -> s1 [label="mpw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s15 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s17 [label="mpw_stop / pw_inactivated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s45 -> s33 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s45 -> s34 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s45 -> s33 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s45 -> s45 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s45 -> s53 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s45 -> s29 [label="pw_mv_up / led_pw_up_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s45 -> s45 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s45 -> s45 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s45 -> s45 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s45 -> s45 [label="release_pw_but / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s46 -> s54 [label="a_pw_msg / a_pw_activated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s46 -> s46 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s46 -> s18 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s46 -> s46 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s46 -> s46 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s46 -> s46 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s46 -> s6 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s46 -> s46 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s46 -> s46 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s46 -> s46 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s46 -> s46 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s46 -> s46 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s46 -> s46 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s47 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s47 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s51 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s41 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s31 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s47 -> s49 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s47 -> s14 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s47 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s32 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s15 [label="fp_off / pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s47 -> s47 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s47 -> s34 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s47 -> s19 [label="fp_on / 1,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s47 -> s47 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s47 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s47 -> s7 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s33 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s47 -> s48 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s47 -> s51 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s47 -> s47 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s47 -> s47 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s47 -> s47 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s48 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s47 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s47 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s47 -> s47 [label="pw_but_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s47 -> s52 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s47 -> s42 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s47 -> s47 [label="pw_but_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s47 -> s47 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s47 -> s47 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s47 -> s41 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s47 -> s47 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s47 -> s47 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s47 -> s15 [label="receiveMsg / pw_activated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s47 -> s47 [label="receiveMsg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s47 -> s9 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s47 -> s0 [label="release_pw_but / led_pw_dn_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s48 -> s48 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s48 -> s48 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s48 -> s56 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s48 -> s69 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s48 -> s48 [label="finger_detected / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s41 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s15 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s48 -> s16 [label="fp_off / pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s48 -> s9 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s32 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s48 -> s10 [label="fp_off / pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s48 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s48 -> s41 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s48 -> s48 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s48 -> s47 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s48 -> s48 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s48 -> s66 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s48 -> s48 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s48 -> s48 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s48 -> s47 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s48 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s69 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s48 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s48 -> s9 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s51 [label="pw_but_dn / fp_off,1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s48 -> s48 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s48 -> s41 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s68 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s48 -> s48 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s48 -> s48 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s48 -> s48 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s48 -> s48 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s49 -> s49 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s49 -> s49 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s49 -> s49 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s49 -> s49 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s49 -> s49 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s49 -> s30 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s49 -> s49 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s49 -> s31 [label="fp_on / 1,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s49 -> s51 [label="fp_on / 1,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s49 -> s11 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s49 -> s16 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s49 -> s17 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s49 -> s49 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s49 -> s49 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s49 -> s1 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s49 -> s49 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s49 -> s23 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s49 -> s49 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s49 -> s53 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s49 -> s31 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s49 -> s20 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s49 -> s9 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s49 -> s33 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s49 -> s9 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s49 -> s47 [label="pw_but_dn / fp_off,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s49 -> s50 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s49 -> s49 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s49 -> s36 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s49 -> s30 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s49 -> s58 [label="pw_but_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s49 -> s49 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s49 -> s59 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s49 -> s49 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s49 -> s57 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s49 -> s56 [label="pw_pos_dn / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s49 -> s49 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s49 -> s49 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s49 -> s74 [label="receiveMsg / pw_activated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s49 -> s49 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s49 -> s49 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s49 -> s56 [label="release_pw_but / led_pw_dn_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s50 -> s50 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s50 -> s50 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s50 -> s50 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s50 -> s43 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s30 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s35 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s50 -> s50 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s50 -> s50 [label="fp_off / 1,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s50 -> s9 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s16 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s50 -> s47 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s41 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s50 -> s9 [label="fp_on / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s50 -> s51 [label="fp_on / pw_mv_stop [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s50 -> s64 [label="fp_on / pw_mv_stop,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s50 -> s50 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s62 [label="fp_on / pw_mv_stop,led_fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s50 -> s36 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s45 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s35 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s50 -> s50 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s50 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s35 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s50 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s50 -> s2 [label="mpw_stop / pw_inactivated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s50 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s50 -> s35 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s50 -> s50 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s50 -> s36 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s50 -> s32 [label="pw_but_dn / 1,pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s9 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s50 -> s57 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s32 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s50 -> s77 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s50 -> s34 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s50 -> s20 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s15 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s50 -> s20 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s50 -> s50 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s50 -> s50 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s50 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s50 -> s35 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s50 -> s36 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s50 -> s50 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s50 -> s50 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s50 -> s11 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s50 -> s12 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s50 -> s53 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s50 -> s50 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s50 -> s21 [label="pw_pos_up / pw_mv_stop [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s50 -> s50 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s50 -> s50 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s50 -> s43 [label="release_pw_but / led_pw_dn_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s51 -> s51 [label="a_pw_msg / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s51 -> s51 [label="apw_stop / 1 [((Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s51 -> s68 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s51 -> s51 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s51 -> s48 [label="finger_detected / fp_on [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s51 -> s3 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s51 -> s24 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s51 -> s49 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s51 -> s32 [label="fp_off / pw_mv_dn [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s51 -> s15 [label="fp_off / pw_mv_dn [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))]"];
	s51 -> s16 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s51 -> s52 [label="fp_off / pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s51 -> s51 [label="fp_on / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s51 -> s51 [label="fp_on / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s51 -> s65 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s51 -> s47 [label="key_pos_lock / cls_lock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s51 -> s51 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s51 -> s56 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s51 -> s51 [label="key_pos_unlock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s51 -> s51 [label="m_pw_msg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s51 -> s51 [label="mpw_stop / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s51 -> s51 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s51 -> s41 [label="pw_auto_mv_stop / led_pw_dn_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s51 -> s51 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s51 -> s19 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s51 -> s51 [label="pw_but_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s51 -> s47 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s51 -> s51 [label="pw_but_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s51 -> s51 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s51 -> s51 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s51 -> s51 [label="pw_pos_dn / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s51 -> s51 [label="pw_pos_up / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s51 -> s51 [label="receiveMsg / 1 [((Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))) or (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s51 -> s5 [label="receiveMsg / pw_activated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s51 -> s9 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s51 -> s17 [label="release_pw_but / led_pw_dn_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s52 -> s52 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s52 -> s52 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s52 -> s30 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s2 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s52 -> s34 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s52 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s16 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s21 [label="finger_detected / fp_on [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s35 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s52 -> s52 [label="fp_off / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s52 -> s57 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s52 -> s52 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s41 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s52 -> s52 [label="fp_on / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s64 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s52 [label="fp_on / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s52 -> s27 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s52 [label="key_pos_lock / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s52 -> s20 [label="key_pos_unlock / cls_unlock [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s52 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s31 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s43 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s52 -> s52 [label="m_pw_msg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s52 -> s52 [label="mpw_stop / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s52 -> s20 [label="pw_auto_mv_dn / led_pw_dn_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s52 [label="pw_auto_mv_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s31 [label="pw_auto_mv_up / led_pw_up_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s52 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s33 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s33 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s52 -> s52 [label="pw_but_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s52 -> s52 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s36 [label="pw_but_up / pw_mv_up [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s27 [label="pw_but_up / pw_mv_up [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s52 -> s43 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s50 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s10 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s52 -> s52 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s52 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s86 [label="pw_mv_up / led_pw_up_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s52 -> s52 [label="pw_pos_dn / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s52 -> s31 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s52 [label="pw_pos_up / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s52 -> s49 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s52 -> s45 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s52 -> s52 [label="receiveMsg / 1 [((Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s52 -> s15 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s52 -> s52 [label="release_pw_but / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s53 -> s53 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s53 -> s53 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s53 -> s53 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s53 -> s21 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s53 -> s53 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s53 -> s53 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s53 -> s53 [label="fp_on / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s53 -> s23 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s53 -> s53 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s53 -> s53 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s53 -> s51 [label="mpw_stop / pw_inactivated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s53 -> s2 [label="mpw_stop / pw_inactivated [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s53 -> s3 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s53 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s49 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s53 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s15 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s4 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s53 -> s9 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s53 -> s53 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s53 -> s36 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s53 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s53 -> s23 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s12 [label="pw_mv_up / led_pw_up_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s53 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s53 -> s53 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s53 -> s53 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s53 -> s53 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s53 -> s53 [label="release_pw_but / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s53 -> s45 [label="release_pw_but / led_pw_dn_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s54 -> s54 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s7 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s55 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s54 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s54 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s54 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s11 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s54 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s15 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s54 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s54 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s54 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s54 -> s54 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s55 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s26 [label="apw_stop / pw_inactivated [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s12 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s55 -> s55 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s55 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s83 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s55 -> s62 [label="fp_on / pw_mv_stop,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s55 -> s55 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s55 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s55 -> s7 [label="mpw_stop / pw_inactivated [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s55 [label="mpw_stop / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s55 -> s55 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s12 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s55 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s80 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s55 -> s52 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s15 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s55 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s55 [label="pw_but_up / pw_mv_up [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s55 -> s55 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s55 -> s55 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s55 -> s55 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s55 -> s11 [label="pw_pos_up / pw_mv_stop [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s55 -> s55 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s55 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s55 -> s11 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s55 -> s27 [label="release_pw_but / led_pw_up_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s56 -> s56 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s56 -> s56 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s56 -> s56 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s56 -> s56 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s56 -> s21 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s56 -> s10 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s56 -> s56 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s56 -> s56 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s56 -> s17 [label="fp_on / 1,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s56 -> s12 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s56 -> s31 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s56 -> s25 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s56 -> s51 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s56 -> s56 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s56 -> s56 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s56 -> s56 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s56 -> s56 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s56 -> s41 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s56 -> s56 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s56 -> s48 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s56 -> s69 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s56 -> s15 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s56 -> s0 [label="pw_but_dn / fp_off,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s56 -> s33 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s56 -> s56 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s56 -> s42 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s56 -> s52 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s56 -> s49 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s56 -> s31 [label="pw_mv_up / led_pw_up_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s56 -> s25 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s56 -> s56 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s56 -> s56 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s56 -> s56 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s56 -> s37 [label="receiveMsg / pw_activated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s56 -> s56 [label="release_pw_but / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s57 -> s57 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s57 -> s57 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s57 -> s85 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s57 -> s12 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s57 -> s25 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s57 -> s53 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s57 -> s57 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s57 -> s30 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s57 -> s14 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s57 -> s33 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s57 -> s57 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s57 -> s57 [label="fp_off / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s57 -> s20 [label="fp_off / 1,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s57 -> s52 [label="fp_on / 1,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s57 -> s57 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s57 -> s57 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s57 -> s34 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s57 -> s20 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s57 -> s57 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s57 -> s57 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s57 -> s15 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s57 -> s57 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s57 -> s57 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s57 -> s57 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s57 -> s34 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s57 -> s57 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s57 -> s57 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s57 -> s31 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s57 -> s15 [label="pw_but_dn / 1,pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s57 -> s57 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s57 -> s27 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s57 -> s9 [label="pw_but_up / pw_mv_up [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s57 -> s61 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s57 -> s43 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s57 -> s35 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))))]"];
	s57 -> s16 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s57 -> s6 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s57 -> s57 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s57 -> s57 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s57 -> s84 [label="pw_mv_up / led_pw_up_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s57 -> s57 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s57 -> s10 [label="pw_pos_dn / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s57 -> s57 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s57 -> s57 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Central_Locking_System and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s57 -> s49 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s57 -> s57 [label="release_pw_but / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s58 -> s58 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s58 -> s58 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s58 -> s58 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s58 -> s58 [label="fp_off / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s58 -> s82 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s58 -> s25 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s58 -> s58 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s58 -> s58 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s58 -> s40 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s58 -> s58 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s58 -> s58 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s58 -> s58 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s58 -> s80 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s58 -> s20 [label="pw_but_dn / fp_off,pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s58 -> s10 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s58 -> s23 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s58 -> s12 [label="pw_but_up / pw_mv_up [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s58 -> s42 [label="pw_but_up / pw_mv_up [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s58 -> s58 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s58 -> s58 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s58 -> s89 [label="pw_pos_dn / pw_mv_stop [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s58 -> s58 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s58 -> s58 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s58 -> s58 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s58 -> s41 [label="release_pw_but / led_pw_up_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s59 -> s59 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s59 -> s59 [label="fp_off / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s59 -> s59 [label="fp_off / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s59 -> s88 [label="fp_on / 1,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s59 -> s59 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s59 -> s59 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s59 -> s59 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s59 -> s6 [label="pw_but_dn / fp_off,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s59 -> s14 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s59 -> s50 [label="pw_but_up / pw_mv_up [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s59 -> s16 [label="pw_but_up / pw_mv_up [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s59 -> s59 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s59 -> s59 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s59 -> s59 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s59 -> s59 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s59 -> s59 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s59 -> s49 [label="release_pw_but / led_pw_dn_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s59 -> s85 [label="release_pw_but / led_pw_dn_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s60 -> s60 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s60 -> s23 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s60 -> s71 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s60 -> s17 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s60 -> s60 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s60 -> s63 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s60 -> s60 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s60 -> s11 [label="m_pw_msg / m_pw_activated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s60 -> s30 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s60 -> s60 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s60 -> s60 [label="pw_but_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s60 -> s20 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s60 -> s60 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s60 -> s60 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s60 -> s60 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s60 -> s60 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s60 -> s60 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s60 -> s60 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s60 -> s38 [label="release_pw_but / led_pw_up_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s61 -> s61 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s61 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s61 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s61 -> s36 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s61 -> s52 [label="finger_detected / fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s61 -> s50 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s61 -> s61 [label="fp_off / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s61 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s61 -> s62 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s61 -> s16 [label="fp_on / pw_mv_stop,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s61 -> s69 [label="fp_on / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s61 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s42 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s61 -> s61 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s61 -> s42 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s61 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s61 -> s61 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s61 -> s61 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s61 -> s43 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s61 -> s61 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s61 -> s4 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s61 -> s57 [label="pw_but_dn / 1,pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s61 -> s4 [label="pw_but_dn / fp_off,pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s33 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s61 -> s61 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s61 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s61 -> s61 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s61 -> s61 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s61 -> s61 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s61 -> s30 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s61 -> s9 [label="pw_pos_up / pw_mv_stop [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s61 -> s54 [label="pw_pos_up / pw_mv_stop [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s61 -> s53 [label="pw_pos_up / pw_mv_stop [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s61 -> s61 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s61 -> s42 [label="release_pw_but / led_pw_dn_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s62 -> s62 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s62 -> s62 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s62 -> s62 [label="finger_detected / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s62 -> s28 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s62 -> s64 [label="finger_detected / fp_on [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s62 -> s15 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s62 -> s33 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s62 -> s21 [label="fp_off / pw_mv_dn,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s62 -> s78 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s62 -> s62 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s62 -> s32 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s62 -> s62 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s62 -> s62 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s62 -> s62 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s62 -> s62 [label="pw_but_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s62 -> s64 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s62 -> s62 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s62 -> s62 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s62 -> s62 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s62 -> s62 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s62 -> s62 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s62 -> s62 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s62 -> s7 [label="release_pw_but / led_pw_up_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s63 -> s63 [label="finger_detected / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s63 -> s37 [label="fp_off / 1,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s63 -> s63 [label="fp_on / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s63 -> s63 [label="key_pos_lock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s63 -> s60 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s63 -> s24 [label="m_pw_msg / m_pw_activated [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s63 -> s63 [label="mpw_stop / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s63 -> s38 [label="pw_but_dn / fp_off,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s63 -> s63 [label="pw_but_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s63 -> s63 [label="pw_pos_dn / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s63 -> s63 [label="pw_pos_up / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s63 -> s63 [label="receiveMsg / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s64 -> s64 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s64 -> s64 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s64 -> s62 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s64 -> s64 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s64 -> s32 [label="fp_off / pw_mv_dn,led_fp_off [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s64 -> s56 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s64 -> s21 [label="fp_off / pw_mv_dn,led_fp_off [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s64 -> s64 [label="fp_on / 1,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s64 -> s28 [label="key_pos_lock / cls_lock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s64 -> s64 [label="key_pos_unlock / 1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s64 -> s64 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s64 -> s64 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s64 -> s62 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s64 -> s64 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))))]"];
	s64 -> s64 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s64 -> s64 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s64 -> s64 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s64 -> s64 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window))) or (Automatic_Power_Window and (Status_LED and (LED_Finger_Protection and not LED_Power_Window))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s65 -> s65 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s65 -> s65 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s65 -> s65 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s65 -> s3 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s65 -> s65 [label="fp_off / 1,1 [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s65 -> s65 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s65 -> s40 [label="fp_on / 1,led_fp_on [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s65 -> s65 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s65 -> s25 [label="key_pos_unlock / cls_unlock [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s65 -> s51 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s65 -> s65 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s65 -> s65 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s65 -> s77 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s65 -> s41 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s65 -> s65 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s65 -> s50 [label="pw_but_up / pw_mv_up [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s65 -> s27 [label="pw_but_up / pw_mv_up [((Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s65 -> s65 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s65 -> s65 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s65 -> s65 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))))]"];
	s65 -> s59 [label="pw_pos_dn / pw_mv_stop [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s65 -> s65 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s65 -> s65 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))) or (Status_LED and (Central_Locking_System and (Manual_Power_Window and (LED_Finger_Protection and not LED_Power_Window)))) or (Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s65 -> s79 [label="release_pw_but / led_pw_dn_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s66 -> s66 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s66 -> s66 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s66 -> s67 [label="finger_detected / fp_on [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s66 -> s20 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s66 -> s66 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s66 -> s48 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s66 -> s66 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s66 -> s66 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s66 -> s66 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s66 -> s66 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s66 -> s66 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s66 -> s66 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s66 -> s66 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s66 -> s66 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s67 -> s67 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s67 -> s67 [label="apw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s67 -> s67 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s67 -> s49 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s67 -> s67 [label="fp_on / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s67 -> s69 [label="key_pos_lock / cls_lock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s67 -> s67 [label="key_pos_unlock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s67 -> s67 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s67 -> s67 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s67 -> s66 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s67 -> s67 [label="pw_but_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s67 -> s67 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s67 -> s67 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s67 -> s67 [label="receiveMsg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s68 -> s68 [label="finger_detected / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s68 -> s34 [label="fp_off / pw_mv_dn [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s68 -> s68 [label="fp_on / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s68 -> s68 [label="m_pw_msg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s68 -> s68 [label="mpw_stop / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s68 -> s51 [label="pw_but_dn / fp_off,1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s68 -> s68 [label="pw_but_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s68 -> s68 [label="pw_mv_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s68 -> s68 [label="pw_mv_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s68 -> s68 [label="pw_pos_dn / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s68 -> s68 [label="pw_pos_up / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s68 -> s68 [label="receiveMsg / 1 [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s68 -> s48 [label="release_pw_but / led_pw_up_off [((Status_LED and (Manual_Power_Window and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s69 -> s69 [label="a_pw_msg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s69 -> s69 [label="apw_stop / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s69 -> s69 [label="finger_detected / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s69 -> s56 [label="finger_detected / fp_on [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s69 -> s17 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s69 -> s15 [label="fp_off / pw_mv_dn [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s69 -> s69 [label="fp_on / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s69 -> s69 [label="key_pos_lock / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s69 -> s67 [label="key_pos_unlock / cls_unlock [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s69 -> s69 [label="m_pw_msg / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s69 -> s69 [label="mpw_stop / 1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s69 -> s69 [label="pw_auto_mv_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s69 -> s48 [label="pw_auto_mv_stop / led_pw_up_off [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s69 -> s69 [label="pw_auto_mv_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s69 -> s69 [label="pw_but_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))))]"];
	s69 -> s48 [label="pw_but_dn / fp_off,1 [((Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s69 -> s69 [label="pw_but_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s69 -> s69 [label="pw_pos_dn / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s69 -> s69 [label="pw_pos_up / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s69 -> s69 [label="receiveMsg / 1 [((Automatic_Power_Window and (Status_LED and (LED_Power_Window and not LED_Finger_Protection))) or (Automatic_Power_Window and (Central_Locking_System and (Manual_Power_Window and (not Status_LED and (not LED_Finger_Protection and not LED_Power_Window))))))]"];
	s70 -> s31 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s70 -> s70 [label="fp_off / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s70 -> s14 [label="fp_on / 1,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s70 -> s70 [label="m_pw_msg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s70 -> s70 [label="mpw_stop / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s70 -> s70 [label="pw_but_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s70 -> s70 [label="pw_but_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s70 -> s70 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s70 -> s70 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s70 -> s70 [label="pw_pos_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s70 -> s70 [label="pw_pos_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s70 -> s71 [label="receiveMsg / pw_activated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s70 -> s0 [label="release_pw_but / led_pw_up_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s71 -> s1 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s71 -> s71 [label="fp_off / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s71 -> s60 [label="fp_on / 1,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s71 -> s76 [label="m_pw_msg / m_pw_activated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s71 -> s71 [label="mpw_stop / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s71 -> s71 [label="pw_but_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s71 -> s71 [label="pw_but_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s71 -> s71 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s71 -> s71 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s71 -> s71 [label="pw_pos_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s71 -> s71 [label="pw_pos_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s71 -> s71 [label="receiveMsg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s71 -> s22 [label="release_pw_but / led_pw_up_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s72 -> s3 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s72 -> s72 [label="fp_off / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s72 -> s44 [label="fp_on / 1,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s72 -> s72 [label="m_pw_msg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s72 -> s0 [label="mpw_stop / pw_inactivated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s72 -> s34 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s72 -> s72 [label="pw_but_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s72 -> s75 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s72 -> s76 [label="pw_mv_up / led_pw_up_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s72 -> s72 [label="pw_pos_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s72 -> s72 [label="pw_pos_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s72 -> s72 [label="receiveMsg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s72 -> s72 [label="release_pw_but / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s73 -> s73 [label="finger_detected / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s73 -> s31 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s73 -> s73 [label="fp_on / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s73 -> s73 [label="m_pw_msg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s73 -> s73 [label="mpw_stop / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s73 -> s14 [label="pw_but_dn / fp_off,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s73 -> s73 [label="pw_but_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s73 -> s73 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s73 -> s73 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s73 -> s73 [label="pw_pos_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s73 -> s73 [label="pw_pos_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s73 -> s23 [label="receiveMsg / pw_activated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s73 -> s17 [label="release_pw_but / led_pw_up_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s74 -> s74 [label="finger_detected / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s74 -> s74 [label="fp_off / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s74 -> s5 [label="fp_on / 1,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s74 -> s21 [label="m_pw_msg / m_pw_activated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s74 -> s74 [label="mpw_stop / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s74 -> s15 [label="pw_but_dn / fp_off,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s74 -> s74 [label="pw_but_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s74 -> s74 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s74 -> s74 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s74 -> s74 [label="pw_pos_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s74 -> s74 [label="pw_pos_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s74 -> s74 [label="receiveMsg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s74 -> s37 [label="release_pw_but / led_pw_dn_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s75 -> s21 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s75 -> s75 [label="fp_off / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s75 -> s24 [label="fp_on / 1,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s75 -> s75 [label="m_pw_msg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s75 -> s47 [label="mpw_stop / pw_inactivated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s75 -> s77 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s75 -> s75 [label="pw_but_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s75 -> s75 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s75 -> s75 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s75 -> s75 [label="pw_pos_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s75 -> s75 [label="pw_pos_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s75 -> s75 [label="receiveMsg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s75 -> s72 [label="release_pw_but / led_pw_dn_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s76 -> s30 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s76 -> s76 [label="fp_off / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s76 -> s11 [label="fp_on / 1,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s76 -> s76 [label="m_pw_msg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s76 -> s70 [label="mpw_stop / pw_inactivated [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s76 -> s78 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s76 -> s76 [label="pw_but_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s76 -> s76 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s76 -> s76 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s76 -> s76 [label="pw_pos_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s76 -> s76 [label="pw_pos_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s76 -> s76 [label="receiveMsg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s76 -> s72 [label="release_pw_but / led_pw_up_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s77 -> s65 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s77 -> s77 [label="fp_off / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s77 -> s4 [label="fp_on / 1,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s77 -> s77 [label="m_pw_msg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s77 -> s77 [label="mpw_stop / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s77 -> s77 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s77 -> s81 [label="pw_but_up / pw_mv_up [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s77 -> s77 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s77 -> s77 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s77 -> s6 [label="pw_pos_dn / pw_mv_stop [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s77 -> s77 [label="pw_pos_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s77 -> s77 [label="receiveMsg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s77 -> s34 [label="release_pw_but / led_pw_dn_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s78 -> s82 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s78 -> s78 [label="fp_off / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s78 -> s80 [label="fp_on / 1,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s78 -> s78 [label="m_pw_msg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s78 -> s78 [label="mpw_stop / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s78 -> s78 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s78 -> s83 [label="pw_but_up / pw_mv_up [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s78 -> s78 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s78 -> s78 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s78 -> s84 [label="pw_pos_dn / pw_mv_stop [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s78 -> s78 [label="pw_pos_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s78 -> s78 [label="receiveMsg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s78 -> s34 [label="release_pw_but / led_pw_up_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s79 -> s79 [label="finger_detected / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s79 -> s79 [label="fp_off / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s79 -> s41 [label="fp_on / 1,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s79 -> s79 [label="m_pw_msg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s79 -> s79 [label="mpw_stop / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s79 -> s34 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s79 -> s43 [label="pw_but_up / pw_mv_up [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s79 -> s65 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s79 -> s82 [label="pw_mv_up / led_pw_up_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s79 -> s85 [label="pw_pos_dn / pw_mv_stop [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s79 -> s79 [label="pw_pos_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s79 -> s79 [label="receiveMsg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s79 -> s79 [label="release_pw_but / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s80 -> s58 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s80 -> s78 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s80 -> s80 [label="fp_on / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s80 -> s80 [label="m_pw_msg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s80 -> s80 [label="mpw_stop / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s80 -> s80 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s80 -> s55 [label="pw_but_up / pw_mv_up [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s80 -> s80 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s80 -> s80 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s80 -> s86 [label="pw_pos_dn / pw_mv_stop [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s80 -> s80 [label="pw_pos_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s80 -> s80 [label="receiveMsg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s80 -> s33 [label="release_pw_but / led_pw_up_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s81 -> s50 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s81 -> s81 [label="fp_off / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s81 -> s20 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s81 -> s81 [label="m_pw_msg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s81 -> s81 [label="mpw_stop / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s81 -> s77 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s81 -> s81 [label="pw_but_up / pw_mv_up [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s81 -> s81 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s81 -> s81 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s81 -> s81 [label="pw_pos_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s81 -> s75 [label="pw_pos_up / pw_mv_stop [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s81 -> s81 [label="receiveMsg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s81 -> s9 [label="release_pw_but / led_pw_dn_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s82 -> s82 [label="finger_detected / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s82 -> s82 [label="fp_off / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s82 -> s58 [label="fp_on / 1,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s82 -> s82 [label="m_pw_msg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s82 -> s82 [label="mpw_stop / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s82 -> s78 [label="pw_but_dn / fp_off,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s82 -> s35 [label="pw_but_up / pw_mv_up [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s82 -> s82 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s82 -> s82 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s82 -> s87 [label="pw_pos_dn / pw_mv_stop [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s82 -> s82 [label="pw_pos_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s82 -> s82 [label="receiveMsg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s82 -> s79 [label="release_pw_but / led_pw_up_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s83 -> s35 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s83 -> s83 [label="fp_off / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s83 -> s62 [label="fp_on / pw_mv_stop,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s83 -> s83 [label="m_pw_msg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s83 -> s83 [label="mpw_stop / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s83 -> s78 [label="pw_but_dn / 1,pw_mv_dn [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s83 -> s83 [label="pw_but_up / pw_mv_up [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s83 -> s83 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s83 -> s83 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s83 -> s83 [label="pw_pos_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s83 -> s76 [label="pw_pos_up / pw_mv_stop [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s83 -> s83 [label="receiveMsg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s83 -> s9 [label="release_pw_but / led_pw_up_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s84 -> s87 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s84 -> s84 [label="fp_off / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s84 -> s86 [label="fp_on / 1,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s84 -> s84 [label="m_pw_msg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s84 -> s84 [label="mpw_stop / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s84 -> s84 [label="pw_but_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s84 -> s83 [label="pw_but_up / pw_mv_up [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s84 -> s84 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s84 -> s84 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s84 -> s84 [label="pw_pos_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s84 -> s84 [label="pw_pos_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s84 -> s84 [label="receiveMsg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s84 -> s57 [label="release_pw_but / led_pw_up_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s85 -> s85 [label="finger_detected / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s85 -> s85 [label="fp_off / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s85 -> s2 [label="fp_on / 1,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s85 -> s85 [label="m_pw_msg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s85 -> s85 [label="mpw_stop / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s85 -> s57 [label="pw_but_dn / fp_off,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s85 -> s43 [label="pw_but_up / pw_mv_up [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s85 -> s59 [label="pw_mv_dn / led_pw_dn_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s85 -> s87 [label="pw_mv_up / led_pw_up_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s85 -> s85 [label="pw_pos_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s85 -> s85 [label="pw_pos_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s85 -> s85 [label="receiveMsg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s85 -> s85 [label="release_pw_but / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s86 -> s89 [label="finger_detected / fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s86 -> s84 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s86 -> s86 [label="fp_on / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s86 -> s86 [label="m_pw_msg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s86 -> s86 [label="mpw_stop / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s86 -> s86 [label="pw_but_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s86 -> s55 [label="pw_but_up / pw_mv_up [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s86 -> s86 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s86 -> s86 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s86 -> s86 [label="pw_pos_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s86 -> s86 [label="pw_pos_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s86 -> s86 [label="receiveMsg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s86 -> s52 [label="release_pw_but / led_pw_up_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s87 -> s87 [label="finger_detected / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s87 -> s87 [label="fp_off / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s87 -> s89 [label="fp_on / 1,led_fp_on [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s87 -> s87 [label="m_pw_msg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s87 -> s87 [label="mpw_stop / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s87 -> s84 [label="pw_but_dn / fp_off,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s87 -> s35 [label="pw_but_up / pw_mv_up [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s87 -> s87 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s87 -> s87 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s87 -> s87 [label="pw_pos_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s87 -> s87 [label="pw_pos_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s87 -> s87 [label="receiveMsg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s87 -> s85 [label="release_pw_but / led_pw_up_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s88 -> s88 [label="finger_detected / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s88 -> s59 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s88 -> s88 [label="fp_on / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s88 -> s88 [label="m_pw_msg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s88 -> s88 [label="mpw_stop / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s88 -> s10 [label="pw_but_dn / fp_off,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s88 -> s61 [label="pw_but_up / pw_mv_up [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s88 -> s88 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s88 -> s88 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s88 -> s88 [label="pw_pos_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s88 -> s88 [label="pw_pos_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s88 -> s88 [label="receiveMsg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s88 -> s2 [label="release_pw_but / led_pw_dn_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s89 -> s89 [label="finger_detected / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s89 -> s87 [label="fp_off / 1,led_fp_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s89 -> s89 [label="fp_on / 1,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s89 -> s89 [label="m_pw_msg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s89 -> s89 [label="mpw_stop / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s89 -> s86 [label="pw_but_dn / fp_off,1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s89 -> s12 [label="pw_but_up / pw_mv_up [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s89 -> s89 [label="pw_mv_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s89 -> s89 [label="pw_mv_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s89 -> s89 [label="pw_pos_dn / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s89 -> s89 [label="pw_pos_up / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s89 -> s89 [label="receiveMsg / 1 [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	s89 -> s2 [label="release_pw_but / led_pw_up_off [((Status_LED and Manual_Power_Window and LED_Power_Window and LED_Finger_Protection))]"];
	__start0 [label="" shape="none" width="0" height="0"];
	__start0 -> s0;
}